function Test-BlobDataSetMappingCrud{$resourceGroup = getAssetNametry{$AccountName = getAssetName$ShareSubscriptionName = getAssetName$DataSetMappingName = getAssetName$StorageAccountId = getAssetName$DataSetId = getAssetName$ContainerName = getAssetName$createdContainerDatasetMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -Container $ContainerNameAssert-NotNull $createdContainerDatasetMappingAssert-AreEqual $DataSetMappingName $createdContainerDatasetMapping.NameAssert-AreEqual "ok" $createdContainerDatasetMapping.DataSetMappingStatus$Prefix = getAssetName$createdBlobFolderMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -Container $ContainerName -FolderPath $PrefixAssert-NotNull $createdBlobFolderMappingAssert-AreEqual $DataSetMappingName $createdBlobFolderMapping.NameAssert-AreEqual "ok" $createdBlobFolderMapping.DataSetMappingStatus$FilePath = getAssetName$createdBlobMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -Container $ContainerName -FilePath $FilePathAssert-NotNull $createdBlobMappingAssert-AreEqual $DataSetMappingName $createdBlobMapping.NameAssert-AreEqual "ok" $createdBlobMapping.DataSetMappingStatus$retreivedDatasetMapping = Get-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingNameAssert-NotNull $retreivedDatasetMappingAssert-AreEqual $DataSetMappingName $retreivedDatasetMapping.Name$ResourceId = getAssetName$retreivedDatasetMapping = Get-AzDataShareDataSetMapping -ResourceId $ResourceIdAssert-NotNull $retreivedDatasetMappingAssert-AreEqual $DataSetMappingName $retreivedDatasetMapping.Name}finally{Remove-AzResourceGroup -Name $resourceGroup -Force}}function Test-AdlsGen2DataSetMappingCrud{$resourceGroup = getAssetName$AccountName = getAssetName$ShareSubscriptionName = getAssetName$DataSetMappingName = getAssetName$StorageAccountId = getAssetName$DataSetId = getAssetName$FileSystemName = getAssetName$createdFileSystemDatasetMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -FileSystem $FileSystemNameAssert-NotNull $createdFileSystemDatasetMappingAssert-AreEqual $DataSetMappingName $createdFileSystemDatasetMapping.NameAssert-AreEqual "ok" $createdFileSystemDatasetMapping.DataSetMappingStatus$FolderPath = getAssetName$createdFolderDatasetMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -FileSystem $FileSystemName -FolderPath $FolderPathAssert-NotNull $createdFolderDatasetMappingAssert-AreEqual $DataSetMappingName $createdFolderDatasetMapping.NameAssert-AreEqual "ok" $createdFolderDatasetMapping.DataSetMappingStatus$FilePath = getAssetName$createdFileDataSetMapping = New-AzDataShareDataSetMapping -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareSubscriptionName $ShareSubscriptionName -Name $DataSetMappingName -StorageAccountResourceId $StorageAccountId -DataSetId $DataSetId -FileSystem $FileSystemName -FilePath $FilePathAssert-NotNull $createdFileDataSetMappingAssert-AreEqual $DataSetMappingName $createdFileDataSetMapping.NameAssert-AreEqual "ok" $createdFileDataSetMapping.DataSetMappingStatus}