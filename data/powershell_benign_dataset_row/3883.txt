function Test-SearchGetSearchResultsAndUpdate{$rgname = "mms-eus"$wsname = "188087e4-5850-4d8b-9d08-3e5b448eaecd"$top = 5$searchResult = Get-AzOperationalInsightsSearchResults -ResourceGroupName $rgname -WorkspaceName $wsname -Top $top -Query "*"Assert-NotNull $searchResultAssert-NotNull $searchResult.MetadataAssert-NotNull $searchResult.ValueAssert-AreEqual $searchResult.Value.Count $top$stringType = "string".GetType()$valueType = $searchResult.Value.GetType()$valueIsString = $valueType.GenericTypeArguments.Contains($stringType)Assert-AreEqual $true $valueIsString$idArray = $searchResult.Id.Split("/")$id = $idArray[$idArray.Length-1]$updatedResult = Get-AzOperationalInsightsSearchResults -ResourceGroupName $rgname -WorkspaceName $wsname -Id $idAssert-NotNull $updatedResultAssert-NotNull $updatedResult.MetadataAssert-NotNull $searchResult.Value}function Test-SearchGetSchema{$wsname = Get-ResourceName$dsName = Get-ResourceName$rgname = Get-ResourceGroupName$wslocation = Get-ProviderLocationNew-AzResourceGroup -Name $rgname -Location $wslocation -Force$workspace = New-AzOperationalInsightsWorkspace -ResourceGroupName $rgname -Name $wsname -Location $wslocation -Sku premium -Force$schema = Get-AzOperationalInsightsSchema -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-NotNull $schemaAssert-NotNull $schema.MetadataAssert-AreEqual $schema.Metadata.ResultType "schema"Assert-NotNull $schema.Value}function Test-SearchGetSavedSearchesAndResults{$rgname = "mms-eus"$wsname = "188087e4-5850-4d8b-9d08-3e5b448eaecd"$savedSearches = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-NotNull $savedSearchesAssert-NotNull $savedSearches.Value$idArray = $savedSearches.Value[0].Id.Split("/")$id = $idArray[$idArray.Length-1]$savedSearch = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsname -SavedSearchId $idAssert-NotNull $savedSearchAssert-NotNull $savedSearch.ETagAssert-NotNull $savedSearch.IdAssert-NotNull $savedSearch.PropertiesAssert-NotNull $savedSearch.Properties.Query$savedSearchResult = Get-AzOperationalInsightsSavedSearchResults -ResourceGroupName $rgname -WorkspaceName $wsname -SavedSearchId $idAssert-NotNull $savedSearchResultAssert-NotNull $savedSearchResult.MetadataAssert-NotNull $savedSearchResult.Value}function Test-SearchSetAndRemoveSavedSearches{$wsname = Get-ResourceName$dsName = Get-ResourceName$rgname = Get-ResourceGroupName$wslocation = Get-ProviderLocationNew-AzResourceGroup -Name $rgname -Location $wslocation -Force$workspace = New-AzOperationalInsightsWorkspace -ResourceGroupName $rgname -Name $wsname -Location $wslocation -Sku premium -Force$id = "test-new-saved-search-id-2015"$displayName = "TestingSavedSearch"$category = "Saved Search Test Category"$version = 1$query = "* | measure Count() by Computer"$savedSearches = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsname$count = $savedSearches.Value.Count$newCount = $count + 1$tags = @{"Group" = "Computer"}New-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsname -SavedSearchId $id -DisplayName $displayName -Category $category -Query $query -Tag $tags -Version $version -Force$savedSearches = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-AreEqual $savedSearches.Value.Count $newCount$etag = ""ForEach ($s in $savedSearches.Value){If ($s.Properties.DisplayName.Equals($displayName)) {$etag = $s.ETag}}$query = "* | distinct Computer"Set-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsname -SavedSearchId $id -DisplayName $displayName -Category $category -Query $query -Tag $tags -Version $version -ETag $etag$savedSearches = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-AreEqual $savedSearches.Value.Count $newCount$found = 0$hasTag = 0ForEach ($s in $savedSearches.Value){If ($s.Properties.DisplayName.Equals($displayName) -And $s.Properties.Query.Equals($query)) {$found = 1If ($s.Properties.Tags["Group"] -eq "Computer") {$hasTag = 1}}}Assert-AreEqual $found 1Assert-AreEqual $hasTag 1Remove-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsname -SavedSearchId $id$savedSearches = Get-AzOperationalInsightsSavedSearch -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-AreEqual $savedSearches.Value.Count $count}