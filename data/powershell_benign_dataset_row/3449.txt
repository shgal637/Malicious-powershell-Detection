function Test-GetNonExistingDataFactoryGateway{	$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -ForceNew-AzDataFactory -Name $dfname -Location $rglocation -ResourceGroup $rgname  -ForceAssert-ThrowsContains { Get-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name "gwname"  } "GatewayNotFound"    }function Test-DataFactoryGateway{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$gwname = "foo"$description = "description"$actual = New-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwname$expected = Get-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwnameAssert-AreEqual $actual.Name $expected.NameAssert-NotNull $actual.Key$key = New-AzDataFactoryGatewayKey -ResourceGroupName $rgname -DataFactoryName $dfname -GatewayName $gwnameAssert-NotNull $keyAssert-NotNull $key.Gatewaykey$result = Set-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwname -Description $descriptionAssert-AreEqual $result.Description $descriptionRemove-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwname -Force}finally{Clean-DataFactory $rgname $dfname}}function Test-DataFactoryGatewayAuthKey{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$gwname = "foo"$description = "description"$actual = New-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwname$expected = Get-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwnameAssert-AreEqual $actual.Name $expected.NameAssert-NotNull $actual.Key$key = Get-AzDataFactoryGatewayAuthKey -ResourceGroupName $rgname -DataFactoryName $dfname -GatewayName $gwnameAssert-NotNull $keyAssert-NotNull $key.Key1Assert-NotNull $key.Key2$keyName = 'key2'$newKey = New-AzDataFactoryGatewayAuthKey -ResourceGroupName $rgname -DataFactoryName $dfname -GatewayName $gwname -KeyName $keyNameAssert-NotNull $key.Key2Assert-AreNotEqual $key.Key2 $newKey.Key2Remove-AzDataFactoryGateway -ResourceGroupName $rgname -DataFactoryName $dfname -Name $gwname -Force}finally{Clean-DataFactory $rgname $dfname}}function Test-DataFactoryGatewayWithDataFactoryParameter{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{$datafactory = New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$gwname = "foo"$description = "description"$actual = New-AzDataFactoryGateway -DataFactory $datafactory -Name $gwname$expected = Get-AzDataFactoryGateway -DataFactory $datafactory -Name $gwnameAssert-AreEqual $actual.Name $expected.Name$key = New-AzDataFactoryGatewayKey -DataFactory $datafactory -GatewayName $gwnameAssert-NotNull $keyAssert-NotNull $key.Gatewaykey$result = Set-AzDataFactoryGateway -DataFactory $datafactory -Name $gwname -Description $descriptionAssert-AreEqual $result.Description $descriptionRemove-AzDataFactoryGateway -DataFactory $datafactory -Name $gwname -Force}finally{Clean-DataFactory $rgname $dfname}}