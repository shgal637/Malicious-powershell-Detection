function Test-Table{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -ForceNew-AzDataFactoryLinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File .\Resources\linkedService.json -Force$datasetname = "foo2"$actual = New-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -File .\Resources\dataset.json -Force$expected = Get-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetnameAssert-AreEqual $expected.ResourceGroupName $actual.ResourceGroupNameAssert-AreEqual $expected.DataFactoryName $actual.DataFactoryNameAssert-AreEqual $expected.DatasetName $actual.DatasetNameRemove-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -Force}finally{Clean-DataFactory $rgname $dfname}}function Test-TableWithDataFactoryParameter{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{$df = New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -ForceNew-AzDataFactoryLinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File .\Resources\linkedService.json -Force$datasetname = "foo2"$actual = New-AzDataFactoryDataset -DataFactory $df -Name $datasetname -File .\Resources\dataset.json -Force$expected = Get-AzDataFactoryDataset -DataFactory $df -Name $datasetnameAssert-AreEqual $expected.ResourceGroupName $actual.ResourceGroupNameAssert-AreEqual $expected.DataFactoryName $actual.DataFactoryNameAssert-AreEqual $expected.DatasetName $actual.DatasetNameRemove-AzDataFactoryDataset -DataFactory $df -Name $datasetname -Force}finally{Clean-DataFactory $rgname $dfname}}function Test-TablePiping{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{New-AzDataFactory -ResourceGroupName $rgname -Name $dfname -Location $dflocation -ForceNew-AzDataFactoryLinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File .\Resources\linkedService.json -Force$datasetname = "foo2"New-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -File .\Resources\dataset.json -ForceGet-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname | Remove-AzDataFactoryDataset -ForceAssert-ThrowsContains { Get-AzDataFactoryDataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname } "TableNotFound"}finally{Clean-DataFactory $rgname $dfname}}