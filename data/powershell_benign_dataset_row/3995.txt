$testAutomationAccount = @{ResourceGroupName = 'anatolib-azureps-test-rg'AutomationAccountName = 'anatolib-azureps-test-aa'}$testGlobalModule = @{Name = 'Azure'Version = '1.0.3'Size = 41338511ActivityCount = 673}$testNonGlobalModule = @{Name = 'Pester'Version = '3.0.3'ContentLinkUri = 'https://devopsgallerystorage.blob.core.windows.net/packages/pester.3.0.3.nupkg'Size = 74921}function EnsureTestModuleImported {$foundModule = Get-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -ErrorAction Ignoreif ($foundModule) {if ($foundModule.ProvisioningState -ne 'Succeeded') {Remove-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -Force$foundModule = $null}}if (-not $foundModule) {$output = New-AzAutomationModule -Name $testNonGlobalModule.Name -ContentLinkUri $testNonGlobalModule.ContentLinkUri @testAutomationAccountWrite-Verbose "Module $($testNonGlobalModule.Name) provisioning state: $($output.ProvisioningState)"$startTime = Get-Date$timeout = New-TimeSpan -Minutes 3$endTime = $startTime + $timeoutwhile ($output.ProvisioningState -ne 'Succeeded') {[Microsoft.WindowsAzure.Commands.Utilities.Common.TestMockSupport]::Delay(10*1000)$output = Get-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccountWrite-Verbose "Module $($testNonGlobalModule.Name) provisioning state: $($output.ProvisioningState)"if ((Get-Date) -gt $endTime) {throw "Module $($testNonGlobalModule.Name) took longer than $timeout to import"}}}}function Remove-TestNonGlobalModule {if (Get-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -ErrorAction Ignore) {Remove-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -Force}}function Test-GetAllModules {$output = Get-AzAutomationModule @testAutomationAccountAssert-NotNull $output$outputCount = $output | Measure-Object | % Count;Assert-True { $outputCount -gt 1 } "Get-AzAutomationModule should output more than one object"$azureModule = $output | ?{ $_.Name -eq $testGlobalModule.Name }Assert-AreEqual $azureModule.AutomationAccountName $testAutomationAccount.AutomationAccountNameAssert-AreEqual $azureModule.ResourceGroupName $testAutomationAccount.ResourceGroupNameAssert-AreEqual $azureModule.Name $testGlobalModule.NameAssert-True { $azureModule.IsGlobal }Assert-AreEqual $azureModule.Version $testGlobalModule.VersionAssert-AreEqual $azureModule.SizeInBytes $testGlobalModule.SizeAssert-AreEqual $azureModule.ActivityCount $testGlobalModule.ActivityCountAssert-NotNull $azureModule.CreationTimeAssert-NotNull $azureModule.LastModifiedTimeAssert-AreEqual $azureModule.ProvisioningState 'Created'}function Test-GetModuleByName {$output = Get-AzAutomationModule -Name $testGlobalModule.Name @testAutomationAccountAssert-NotNull $output$outputCount = $output | Measure-Object | % Count;Assert-AreEqual $outputCount 1Assert-AreEqual $output.AutomationAccountName $testAutomationAccount.AutomationAccountNameAssert-AreEqual $output.ResourceGroupName $testAutomationAccount.ResourceGroupNameAssert-AreEqual $output.Name $testGlobalModule.NameAssert-True { $output.IsGlobal }Assert-AreEqual $output.Version $testGlobalModule.VersionAssert-AreEqual $output.SizeInBytes $testGlobalModule.SizeAssert-AreEqual $output.ActivityCount $testGlobalModule.ActivityCountAssert-NotNull $output.CreationTimeAssert-NotNull $output.LastModifiedTimeAssert-AreEqual $output.ProvisioningState 'Created'}function Test-NewModule {Remove-TestNonGlobalModule$output = New-AzAutomationModule -Name $testNonGlobalModule.Name -ContentLinkUri $testNonGlobalModule.ContentLinkUri @testAutomationAccountAssert-NotNull $output$outputCount = $output | Measure-Object | % Count;Assert-AreEqual $outputCount 1Assert-AreEqual $output.AutomationAccountName $testAutomationAccount.AutomationAccountNameAssert-AreEqual $output.ResourceGroupName $testAutomationAccount.ResourceGroupNameAssert-AreEqual $output.Name $testNonGlobalModule.NameAssert-False { $output.IsGlobal }Assert-Null $output.VersionAssert-AreEqual $output.SizeInBytes 0Assert-AreEqual $output.ActivityCount 0Assert-NotNull $output.CreationTimeAssert-NotNull $output.LastModifiedTimeAssert-AreEqual $output.ProvisioningState 'Creating'}function Test-ImportModule {$command = Get-Command Import-AzAutomationModuleAssert-AreEqual $command.CommandType 'Alias'Assert-AreEqual $command.Definition 'New-AzAutomationModule'}function Test-SetModule {EnsureTestModuleImported$output = Set-AzAutomationModule -Name $testNonGlobalModule.Name -ContentLinkUri $testNonGlobalModule.ContentLinkUri @testAutomationAccountAssert-NotNull $output$outputCount = $output | Measure-Object | % Count;Assert-AreEqual $outputCount 1Assert-AreEqual $output.AutomationAccountName $testAutomationAccount.AutomationAccountNameAssert-AreEqual $output.ResourceGroupName $testAutomationAccount.ResourceGroupNameAssert-AreEqual $output.Name $testNonGlobalModule.NameAssert-False { $output.IsGlobal }Assert-AreEqual $output.Version $testNonGlobalModule.VersionAssert-AreEqual $output.SizeInBytes $testNonGlobalModule.SizeAssert-AreEqual $output.ActivityCount 0Assert-NotNull $output.CreationTimeAssert-NotNull $output.LastModifiedTimeAssert-AreEqual $output.ProvisioningState 'Creating'}function Test-RemoveModule {EnsureTestModuleImported$output = Remove-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -ForceAssert-Null $output$moduleFound = Get-AzAutomationModule -Name $testNonGlobalModule.Name @testAutomationAccount -ErrorAction IgnoreAssert-Null $moduleFound}