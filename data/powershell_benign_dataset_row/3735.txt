function Test-NestedEndpointsCreateUpdate{$resourceGroup = TestSetup-CreateResourceGroup$childProfileName = getAssetName$childProfileRelativeName = getAssetName$anotherChildProfileName = getAssetName$anotherChildProfileRelativeName = getAssetName$parentProfileName = getAssetName$parentProfileRelativeName = getAssetNametry{$createdChildProfile = New-AzTrafficManagerProfile -Name $childProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $childProfileRelativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"Assert-NotNull $createdChildProfile.Id$createdParentProfile = New-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $parentProfileRelativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$createdEndpoint = New-AzTrafficManagerEndpoint -Name "MyNestedEndpoint" -ProfileName $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -Type "NestedEndpoints" -TargetResourceId $createdChildProfile.Id -EndpointStatus "Enabled" -EndpointLocation "North Europe" -MinChildEndpoints 2$updatedParentProfile = Get-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $updatedParentProfileAssert-AreEqual 1 $updatedParentProfile.Endpoints.CountAssert-AreEqual 2 $updatedParentProfile.Endpoints[0].MinChildEndpointsAssert-AreEqual "North Europe" $updatedParentProfile.Endpoints[0].Location$retrievedParentProfile = Get-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedParentProfileAssert-AreEqual 1 $retrievedParentProfile.Endpoints.CountAssert-AreEqual 2 $retrievedParentProfile.Endpoints[0].MinChildEndpointsAssert-AreEqual "North Europe" $retrievedParentProfile.Endpoints[0].Location$anotherCreatedChildProfile = New-AzTrafficManagerProfile -Name $anotherChildProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $anotherChildProfileRelativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"Assert-NotNull $anotherCreatedChildProfile.Id$anotherNestedEndpoint = New-AzTrafficManagerEndpoint -Name "MySecondNestedEndpoint" -ProfileName $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -Type "NestedEndpoints" -TargetResourceId $anotherCreatedChildProfile.Id -EndpointStatus "Enabled" -EndpointLocation "West Europe" -MinChildEndpoints 3Assert-NotNull $anotherNestedEndpointAssert-AreEqual 3 $anotherNestedEndpoint.MinChildEndpointsAssert-AreEqual "West Europe" $anotherNestedEndpoint.Location$retrievedParentProfile = Get-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedParentProfileAssert-AreEqual 2 $retrievedParentProfile.Endpoints.CountAssert-AreEqual 3 $retrievedParentProfile.Endpoints[1].MinChildEndpointsAssert-AreEqual "West Europe" $retrievedParentProfile.Endpoints[1].Location$anotherNestedEndpoint.MinChildEndpoints = 4$anotherNestedEndpoint.Location = "West US"$anotherNestedEndpoint = Set-AzTrafficManagerEndpoint -TrafficManagerEndpoint $anotherNestedEndpointAssert-NotNull $anotherNestedEndpointAssert-AreEqual 4 $anotherNestedEndpoint.MinChildEndpointsAssert-AreEqual "West US" $anotherNestedEndpoint.Location$retrievedParentProfile = Get-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedParentProfileAssert-AreEqual 2 $retrievedParentProfile.Endpoints.CountAssert-AreEqual 4 $retrievedParentProfile.Endpoints[1].MinChildEndpointsAssert-AreEqual "West US" $retrievedParentProfile.Endpoints[1].Location}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileWithNestedEndpointsGetPut{$resourceGroup = TestSetup-CreateResourceGroup$childProfileName = getAssetName$childProfileRelativeName = getAssetName$parentProfileName = getAssetName$parentProfileRelativeName = getAssetNametry{$createdChildProfile = New-AzTrafficManagerProfile -Name $childProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $childProfileRelativeName -Ttl 30 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testchild.asp" -ProfileStatus "Enabled"Assert-NotNull $createdChildProfile.Id$createdParentProfile = New-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $parentProfileRelativeName -Ttl 51 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTPS" -MonitorPort 111 -MonitorPath "/testparent.asp" -ProfileStatus "Enabled"$nestedEndpoint = New-AzTrafficManagerEndpoint -Name "MyNestedEndpoint" -ProfileName $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupName -Type "NestedEndpoints" -TargetResourceId $createdChildProfile.Id -EndpointStatus "Enabled" -EndpointLocation "West Europe" -MinChildEndpoints 1$retrievedParentProfile = Get-AzTrafficManagerProfile -Name $parentProfileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedParentProfileAssert-AreEqual 51 $retrievedParentProfile.TtlAssert-AreEqual 111 $retrievedParentProfile.MonitorPortAssert-AreEqual "HTTPS" $retrievedParentProfile.MonitorProtocolAssert-AreEqual "/testparent.asp" $retrievedParentProfile.MonitorPath Assert-AreEqual "Performance" $retrievedParentProfile.TrafficRoutingMethodAssert-AreEqual 1 $retrievedParentProfile.Endpoints.CountAssert-AreEqual 1 $retrievedParentProfile.Endpoints[0].MinChildEndpointsAssert-AreEqual 1 $retrievedParentProfile.Endpoints[0].WeightAssert-AreEqual 1 $retrievedParentProfile.Endpoints[0].PriorityAssert-AreEqual "nestedEndpoints" $retrievedParentProfile.Endpoints[0].TypeAssert-AreEqual "MyNestedEndpoint" $retrievedParentProfile.Endpoints[0].NameAssert-AreEqual "Enabled" $retrievedParentProfile.Endpoints[0].EndpointStatusAssert-AreEqual "West Europe" $retrievedParentProfile.Endpoints[0].LocationAssert-AreEqual $createdChildProfile.Id $retrievedParentProfile.Endpoints[0].TargetResourceIdAssert-AreEqual $retrievedParentProfile.Name $retrievedParentProfile.Endpoints[0].ProfileName}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}