function New-PackageSourceFromModuleSource{param([Parameter(Mandatory=$true)]$ModuleSource)$ScriptSourceLocation = $nullif(Get-Member -InputObject $ModuleSource -Name $script:ScriptSourceLocation){$ScriptSourceLocation = $ModuleSource.ScriptSourceLocation}$ScriptPublishLocation = $ModuleSource.PublishLocationif(Get-Member -InputObject $ModuleSource -Name $script:ScriptPublishLocation){$ScriptPublishLocation = $ModuleSource.ScriptPublishLocation}$packageSourceDetails = @{}$packageSourceDetails["InstallationPolicy"] = $ModuleSource.InstallationPolicy$packageSourceDetails["PackageManagementProvider"] = (Get-ProviderName -PSCustomObject $ModuleSource)$packageSourceDetails[$script:PublishLocation] = $ModuleSource.PublishLocation$packageSourceDetails[$script:ScriptSourceLocation] = $ScriptSourceLocation$packageSourceDetails[$script:ScriptPublishLocation] = $ScriptPublishLocation$ModuleSource.ProviderOptions.GetEnumerator() | Microsoft.PowerShell.Core\ForEach-Object {$packageSourceDetails[$_.Key] = $_.Value}$src =  New-PackageSource -Name $ModuleSource.Name `-Location $ModuleSource.SourceLocation `-Trusted $ModuleSource.Trusted `-Registered $ModuleSource.Registered `-Details $packageSourceDetailsWrite-Verbose ( $LocalizedData.RepositoryDetails -f ($src.Name, $src.Location, $src.IsTrusted, $src.IsRegistered) )Write-Output -InputObject $src}