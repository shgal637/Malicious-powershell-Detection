function Test-DataSetCrud{try{$resourceGroup = getAssetName$AccountName = getAssetName$ShareName = getAssetName$DataSetName = getAssetName$StorageAccountId = getAssetName$ContainerName = getAssetName$createdContainerDataset = New-AzDataShareDataSet -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareName $ShareName -Name $DataSetName -StorageAccountResourceId $StorageAccountId -Container $ContainerNameAssert-NotNull $createdContainerDatasetAssert-AreEqual $DataSetName $createdContainerDataset.Name$Prefix = getAssetName$createdBlobFolder = New-AzDataShareDataSet -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareName $ShareName -Name $DataSetName -StorageAccountResourceId $StorageAccountId -Container $ContainerName -FolderPath $PrefixAssert-NotNull $createdBlobFolderAssert-AreEqual $DataSetName $createdBlobFolder.Name$FilePath = getAssetName$createdBlob = New-AzDataShareDataSet -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareName $ShareName -Name $DataSetName -StorageAccountResourceId $StorageAccountId -Container $ContainerName -FilePath $FilePathAssert-NotNull $createdBlobAssert-AreEqual $DataSetName $createdBlob.Name$retreivedDataset = Get-AzDataShareDataSet -ResourceGroupName $resourceGroup -AccountName $AccountName -ShareName $ShareName -Name $DataSetNameAssert-NotNull $retreivedDatasetAssert-AreEqual $DataSetName $retreivedDataset.Name$ResourceId = getAssetName$retreivedDataset = Get-AzDataShareDataSet -ResourceId $ResourceIdAssert-NotNull $retreivedDatasetAssert-AreEqual $DataSetName $retreivedDataset.Name}finally{Remove-AzResourceGroup -Name $resourceGroup -Force}}