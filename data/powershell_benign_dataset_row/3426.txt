function Test-PolicyDefinitionCRUD{$policyName = Get-ResourceName$policyName = "$($policyName)-plus-plus"$actual = New-AzureRMPolicyDefinition -Name $policyName -Policy SamplePolicyDefinition.json$retryForCreation = Retry-Function { return (Get-AzureRMPolicyDefinition -Name $policyName).Name -eq $actual.Name } $null 10 5$expected = Get-AzureRMPolicyDefinition -Name $policyNameAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual $expected.PolicyDefinitionId $actual.PolicyDefinitionIdAssert-NotNull($actual.Properties.PolicyRule)$actual = Set-AzureRMPolicyDefinition -Name $policyName -DisplayName testDisplay -Description testDescription -Policy SamplePolicyDefinition.json$retryForCreation = Retry-Function { return (Get-AzureRMPolicyDefinition -Name $policyName).Properties.DisplayName -eq $actual.Properties.DisplayName } $null 10 5$expected = Get-AzureRMPolicyDefinition -Name $policyNameAssert-AreEqual $expected.Properties.DisplayName $actual.Properties.DisplayNameAssert-AreEqual $expected.Properties.Description $actual.Properties.DescriptionNew-AzureRMPolicyDefinition -Name test2 -Policy "{""if"":{""source"":""action"",""equals"":""blah""},""then"":{""effect"":""deny""}}"$remove = Remove-AzureRMPolicyDefinition -Name $policyName -ForceAssert-AreEqual True $remove}function Test-PolicyAssignmentCRUD{$rgname = Get-ResourceGroupName$policyName = Get-ResourceName$rg = New-AzureRMResourceGroup -Name $rgname -Location "west us"$policy = New-AzureRMPolicyDefinition -Name $policyName -Policy SamplePolicyDefinition.json$actual = New-AzureRMPolicyAssignment -Name testPA -PolicyDefinition $policy -Scope $rg.ResourceId$retryForCreation = Retry-Function { return (Get-AzureRMPolicyAssignment -Name testPA -Scope $rg.ResourceId).Name -eq $actual.Name } $null 10 5$expected = Get-AzureRMPolicyAssignment -Name testPA -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual Microsoft.Authorization/policyAssignments $actual.ResourceTypeAssert-AreEqual $expected.PolicyAssignmentId $actual.PolicyAssignmentIdAssert-AreEqual $expected.Properties.PolicyDefinitionId $policy.PolicyDefinitionIdAssert-AreEqual $expected.Properties.Scope $rg.ResourceId$actualId = Get-AzureRMPolicyAssignment -Id $actual.ResourceIdAssert-AreEqual $actual.ResourceId $actualId.ResourceId$set = Set-AzureRMPolicyAssignment -Id $actualId.ResourceId -DisplayName testDisplayAssert-AreEqual testDisplay $set.Properties.DisplayNameNew-AzureRMPolicyAssignment -Name test2 -Scope $rg.ResourceId -PolicyDefinition $policy$list = Get-AzureRMPolicyAssignment$remove = Remove-AzureRMPolicyAssignment -Name test2 -Scope $rg.ResourceIdAssert-AreEqual True $remove}function Test-PolicyDefinitionWithParameters{$actual = New-AzureRMPolicyDefinition -Name testPDWP -Policy "$TestOutputRoot\SamplePolicyDefinitionWithParameters.json" -Parameter "$TestOutputRoot\SamplePolicyDefinitionParameters.json"$expected = Get-AzureRMPolicyDefinition -Name testPDWPAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual $expected.PolicyDefinitionId $actual.PolicyDefinitionIdAssert-NotNull($actual.Properties.PolicyRule)Assert-NotNull($actual.Properties.Parameters)Assert-NotNull($expected.Properties.Parameters)$remove = Remove-AzureRMPolicyDefinition -Name testPDWP -ForceAssert-AreEqual True $remove$actual = New-AzureRMPolicyDefinition -Name testPDWP -Policy "$TestOutputRoot\SamplePolicyDefinitionWithParameters.json" -Parameter '{ "listOfAllowedLocations": { "type": "array", "metadata": { "description": "An array of permitted locations for resources.", "strongType": "location", "displayName": "List of locations" } } }'$expected = Get-AzureRMPolicyDefinition -Name testPDWPAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual $expected.PolicyDefinitionId $actual.PolicyDefinitionIdAssert-NotNull($actual.Properties.PolicyRule)Assert-NotNull($actual.Properties.Parameters)Assert-NotNull($expected.Properties.Parameters)$remove = Remove-AzureRMPolicyDefinition -Name testPDWP -ForceAssert-AreEqual True $remove}function Test-PolicyAssignmentWithParameters{$rgname = Get-ResourceGroupName$policyName = Get-ResourceName$rg = New-AzureRMResourceGroup -Name $rgname -Location "west us"$policy = New-AzureRMPolicyDefinition -Name $policyName -Policy "$TestOutputRoot\SamplePolicyDefinitionWithParameters.json" -Parameter "$TestOutputRoot\SamplePolicyDefinitionParameters.json"$array = @("West US", "West US 2")$param = @{"listOfAllowedLocations"=$array}$actual = New-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceId -PolicyDefinition $policy -PolicyParameterObject $param$expected = Get-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual Microsoft.Authorization/policyAssignments $actual.ResourceTypeAssert-AreEqual $expected.PolicyAssignmentId $actual.PolicyAssignmentIdAssert-AreEqual $expected.Properties.PolicyDefinitionId $policy.PolicyDefinitionIdAssert-AreEqual $expected.Properties.Scope $rg.ResourceId$remove = Remove-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual True $remove$actual = New-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceId -PolicyDefinition $policy -PolicyParameter "$TestOutputRoot\SamplePolicyAssignmentParameters.json"$expected = Get-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual Microsoft.Authorization/policyAssignments $actual.ResourceTypeAssert-AreEqual $expected.PolicyAssignmentId $actual.PolicyAssignmentIdAssert-AreEqual $expected.Properties.PolicyDefinitionId $policy.PolicyDefinitionIdAssert-AreEqual $expected.Properties.Scope $rg.ResourceId$remove = Remove-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual True $remove$actual = New-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceId -PolicyDefinition $policy -PolicyParameter '{ "listOfAllowedLocations": { "value": [ "West US", "West US 2" ] } }'$expected = Get-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual Microsoft.Authorization/policyAssignments $actual.ResourceTypeAssert-AreEqual $expected.PolicyAssignmentId $actual.PolicyAssignmentIdAssert-AreEqual $expected.Properties.PolicyDefinitionId $policy.PolicyDefinitionIdAssert-AreEqual $expected.Properties.Scope $rg.ResourceId$remove = Remove-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual True $remove$actual = New-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceId -PolicyDefinition $policy -listOfAllowedLocations $array$expected = Get-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual Microsoft.Authorization/policyAssignments $actual.ResourceTypeAssert-AreEqual $expected.PolicyAssignmentId $actual.PolicyAssignmentIdAssert-AreEqual $expected.Properties.PolicyDefinitionId $policy.PolicyDefinitionIdAssert-AreEqual $expected.Properties.Scope $rg.ResourceId$remove = Remove-AzureRMPolicyAssignment -Name testPAWP -Scope $rg.ResourceIdAssert-AreEqual True $remove}