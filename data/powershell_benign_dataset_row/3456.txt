function Test-Dataset{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{Set-AzDataFactoryV2 -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$linkedServicename = "foo1"Set-AzDataFactoryV2LinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File (Join-Path 'Resources' 'linkedService.json') -Name $linkedServicename -Force$datasetname = "foo2"$expected = Set-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -File (Join-Path 'Resources' 'dataset.json') -Force$actual = Get-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetnameVerify-AdfSubResource $expected $actual $rgname $dfname $datasetnameRemove-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -Force}finally{CleanUp $rgname $dfname}}function Test-DatasetWithResourceId{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{$df = Set-AzDataFactoryV2 -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$linkedServicename = "foo1"Set-AzDataFactoryV2LinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File (Join-Path 'Resources' 'linkedService.json') -Name $linkedServicename -Force$dsname = "foo2"$expected = Set-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $dsname -File (Join-Path 'Resources' 'dataset.json') -Force$actual = Get-AzDataFactoryV2Dataset -ResourceId $expected.IdVerify-AdfSubResource $expected $actual $rgname $dfname $dsnameRemove-AzDataFactoryV2Dataset -ResourceId $expected.Id -Force}finally{CleanUp $rgname $dfname}}function Test-DatasetWithDataFactoryParameter{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{$df = Set-AzDataFactoryV2 -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$linkedServicename = "foo1"Set-AzDataFactoryV2LinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File (Join-Path 'Resources' 'linkedService.json') -Name $linkedServicename -Force$datasetname = "foo2"$actual = Set-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -File (Join-Path 'Resources' 'dataset.json') -Force$expected = Get-AzDataFactoryV2Dataset -DataFactory $df -Name $datasetnameVerify-AdfSubResource $expected $actual $rgname $dfname $datasetnameRemove-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -Force}finally{CleanUp $rgname $dfname}}function Test-DatasetPiping{$dfname = Get-DataFactoryName$rgname = Get-ResourceGroupName$rglocation = Get-ProviderLocation ResourceManagement$dflocation = Get-ProviderLocation DataFactoryManagementNew-AzResourceGroup -Name $rgname -Location $rglocation -Forcetry{Set-AzDataFactoryV2 -ResourceGroupName $rgname -Name $dfname -Location $dflocation -Force$linkedServicename = "foo1"Set-AzDataFactoryV2LinkedService -ResourceGroupName $rgname -DataFactoryName $dfname -File (Join-Path 'Resources' 'linkedService.json') -Name $linkedServicename -Force$datasetname = "foo2"Set-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname -File (Join-Path 'Resources' 'dataset.json') -ForceGet-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname | Remove-AzDataFactoryV2Dataset -ForceAssert-ThrowsContains { Get-AzDataFactoryV2Dataset -ResourceGroupName $rgname -DataFactoryName $dfname -Name $datasetname } "NotFound"}finally{CleanUp $rgname $dfname}}