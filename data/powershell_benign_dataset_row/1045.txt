Set-StrictMode -Version 'Latest'& (Join-Path -Path $PSScriptRoot -ChildPath 'Initialize-CarbonTest.ps1' -Resolve)$rootDir = $null$childDir = $null$grandchildFile = $null$childFile = $nullfunction Assert-EverythingCompressed{Assert-Compressed -Path $rootDirAssert-Compressed -Path $childDirAssert-Compressed -Path $grandchildFileAssert-Compressed -Path $childFile}function Assert-NothingCompressed{Assert-NotCompressed -Path $rootDirAssert-NotCompressed -Path $childDirAssert-NotCompressed -Path $grandchildFileAssert-NotCompressed -Path $childFile}function Assert-Compressed{param($Path)(Test-NtfsCompression -Path $Path) | Should Be $true}function Assert-NotCompressed{param($Path)(Test-NtfsCompression -Path $Path) | Should Be $false}Describe 'Disable-NtfsCompression' {BeforeEach {$script:rootDir = Join-Path -Path $TestDrive.FullName -ChildPath ([IO.Path]::GetRandomFileName())$script:childDir = Join-Path $rootDir 'ChildDir' $script:grandchildFile = Join-Path $rootDir 'ChildDir\GrandchildFile'$script:childFile = Join-Path $rootDir 'ChildFile'New-Item -Path $grandchildFile -ItemType 'File' -ForceNew-Item -Path $childFile -ItemType 'File' -ForceEnable-NtfsCompression $rootDir -RecurseAssert-EverythingCompressed}It 'should disable compression on directory only' {Disable-NtfsCompression -Path $rootDirAssert-NotCompressed -Path $rootDirAssert-Compressed -Path $childDirAssert-Compressed -path $grandchildFileAssert-Compressed -Path $childFile$newFile = Join-Path $rootDir 'newfile''' > $newFileAssert-NotCompressed -Path $newFile$newDir = Join-Path $rootDir 'newDir'$null = New-Item -Path $newDir -ItemType DirectoryAssert-NotCompressed -Path $newDir}It 'should fail if path does not exist' {$Error.Clear()Disable-NtfsCompression -Path 'C:\I\Do\Not\Exist' -ErrorAction SilentlyContinue$Error.Count | Should Be 1($Error[0].Exception.Message -like '*not found*') | Should Be $trueAssert-EverythingCompressed}It 'should disable compression recursively' {Disable-NtfsCompression -Path $rootDir -RecurseAssert-NothingCompressed}It 'should support piping items' {Get-ChildItem $rootDir | Disable-NtfsCompressionAssert-Compressed $rootDirAssert-NotCompressed $childDirAssert-Compressed $grandchildFileAssert-NotCompressed $childFile}It 'should support piping strings' {($childFile,$grandchildFile) | Disable-NtfsCompressionAssert-Compressed $rootDirAssert-Compressed $childDirAssert-NotCompressed $grandchildFileAssert-NotCompressed $childFile}It 'should decompress array of items' {Disable-NtfsCompression -Path $childFile,$grandchildFileAssert-Compressed $rootDirAssert-Compressed $childDirAssert-NotCompressed $grandchildFileAssert-NotCompressed $childFile}It 'should decompress already decompressed item' {Disable-NtfsCompression $rootDir -RecurseAssert-NothingCompressedDisable-NtfsCompression $rootDir -Recurse$LASTEXITCODE | Should -Be 0Assert-NothingCompressed}It 'should support what if' {Disable-NtfsCompression -Path $childFile -WhatIfAssert-Compressed $childFile}It 'should not decompress if already decompressed' {Disable-CNtfsCompression -Path $rootDir  Assert-NotCompressed $rootDirMock -CommandName 'Invoke-ConsoleCommand' -ModuleName 'Carbon'Disable-CNtfsCompression -Path $rootDirAssert-MockCalled 'Invoke-ConsoleCommand' -ModuleName 'Carbon' -Times 0Disable-CNtfsCompression -Path $rootDir -ForceAssert-MockCalled 'Invoke-ConsoleCommand' -ModuleName 'Carbon' -Times 1}}