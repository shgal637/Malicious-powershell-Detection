function Test-ServerEndpoint2{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$serverEndpointName = Get-ResourceName("sep")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$azureFileShareName = "testfs" $storageAccountName = Get-ResourceName("sa")$storageAccountTenantId = (Get-AzTenant).Id$serverLocalPath = "D:\" + $serverEndpointName$offlineDataTransferShareName = "http://dummy"$tierFilesOlderThanDays = 10$volumeFreeSpacePercent = 60$volumeFreeSpacePercent2 = 80Write-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"$storageSyncService = New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"$storageAccount = New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountName$context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$job = New-AzStorageSyncCloudEndpoint -ParentObject $syncGroup -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -AsJob $job | Wait-Job$cloudEndpoint = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Resource: <auto-generated> | Loc: $resourceLocation | Type : RegisteredServer"$job = Register-AzStorageSyncServer -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -AsJob $job | Wait-Job$registeredServer = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Resource: $serverEndpointName | Loc: $resourceLocation"$job = New-AzStorageSyncServerEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $serverEndpointName -ServerResourceId $registeredServer.ResourceId -ServerLocalPath $serverLocalPath -CloudTiering -OfflineDataTransfer -VolumeFreeSpacePercent $volumeFreeSpacePercent -OfflineDataTransferShareName $offlineDataTransferShareName -TierFilesOlderThanDays $tierFilesOlderThanDays -Verbose -AsJob $job | Wait-Job$serverEndpoint = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent $serverEndpoint.VolumeFreeSpacePercentWrite-Verbose "Get ServerEndpoint by Name"$serverEndpoint = Get-AzStorageSyncServerEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -ServerEndpointName $serverEndpointName Write-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent $serverEndpoint.VolumeFreeSpacePercentWrite-Verbose "Get ServerEndpoint by ParentObject"$serverEndpoint = Get-AzStorageSyncServerEndpoint -ParentObject $syncGroup -Name $serverEndpointName -VerboseWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent $serverEndpoint.VolumeFreeSpacePercentWrite-Verbose "Get ServerEndpoint by ParentResourceId"$serverEndpoint = Get-AzStorageSyncServerEndpoint -ParentResourceId $syncGroup.ResourceId -Name $serverEndpointName -VerboseWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent $serverEndpoint.VolumeFreeSpacePercentWrite-Verbose "Patch ServerEndpoint by Name"$job = Set-AzStorageSyncServerEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName  $syncGroupName -Name $serverEndpointName -VolumeFreeSpacePercent $volumeFreeSpacePercent2 -Verbose -AsJob $job | Wait-Job$serverEndpoint2 = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint2.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint2.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent2 $serverEndpoint2.VolumeFreeSpacePercentWrite-Verbose "Patch ServerEndpoint by InputObject"$job = Set-AzStorageSyncServerEndpoint -InputObject $serverEndpoint -VolumeFreeSpacePercent $volumeFreeSpacePercent2 -Verbose -AsJob $job | Wait-Job$serverEndpoint2 = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint2.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint2.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent2 $serverEndpoint2.VolumeFreeSpacePercentWrite-Verbose "Patch ServerEndpoint by ResourceId"$job = Set-AzStorageSyncServerEndpoint -ResourceId $serverEndpoint.ResourceId -VolumeFreeSpacePercent $volumeFreeSpacePercent2 -Verbose -AsJob $job | Wait-Job$serverEndpoint2 = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Validating ServerEndpoint Properties"Assert-AreEqual $serverEndpointName $serverEndpoint2.ServerEndpointNameAssert-AreEqual $serverLocalPath $serverEndpoint2.ServerLocalPathAssert-AreEqual $volumeFreeSpacePercent2 $serverEndpoint2.VolumeFreeSpacePercentWrite-Verbose "Recall ServerEndpoint by Name"Invoke-AzStorageSyncFileRecall -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName  $syncGroupName -Name $serverEndpointName -AsJob | Wait-JobWrite-Verbose "Recall ServerEndpoint by InputObject"Invoke-AzStorageSyncFileRecall -InputObject $serverEndpoint -AsJob | Wait-JobWrite-Verbose "Recall ServerEndpoint by ResourceId"Invoke-AzStorageSyncFileRecall -ResourceId $serverEndpoint.ResourceId -AsJob | Wait-JobWrite-Verbose "Removing ServerEndpoint: $serverEndpointName"Remove-AzStorageSyncServerEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $serverEndpointName -AsJob | Wait-JobWrite-Verbose "Executing Piping Scenarios"New-AzStorageSyncServerEndpoint -ParentObject $syncGroup -Name $serverEndpointName -ServerResourceId $registeredServer.ResourceId -ServerLocalPath $serverLocalPath -CloudTiering -OfflineDataTransfer -VolumeFreeSpacePercent $volumeFreeSpacePercent -OfflineDataTransferShareName $offlineDataTransferShareName -TierFilesOlderThanDays $tierFilesOlderThanDays | Get-AzStorageSyncServerEndpoint  | Remove-AzStorageSyncServerEndpoint -Force -AsJob | Wait-JobNew-AzStorageSyncServerEndpoint -ParentResourceId $syncGroup.ResourceId -Name $serverEndpointName -ServerResourceId $registeredServer.ResourceId -ServerLocalPath $serverLocalPath -CloudTiering -OfflineDataTransfer -VolumeFreeSpacePercent $volumeFreeSpacePercent -OfflineDataTransferShareName $offlineDataTransferShareName -TierFilesOlderThanDays $tierFilesOlderThanDays | Remove-AzStorageSyncServerEndpoint -Force -AsJob | Wait-JobWrite-Verbose "Unregister Server: $($registeredServer.ServerId)"Unregister-AzStorageSyncServer -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -ServerId $registeredServer.ServerId -AsJob | Wait-JobWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}function Test-ServerEndpoint{$resourceGroupName = Get-ResourceGroupNameWrite-Verbose "RecordMode : $(Get-StorageTestMode)"try{$storageSyncServiceName = Get-ResourceName("sss")$syncGroupName = Get-ResourceName("sg")$serverEndpointName = Get-ResourceName("sep")$cloudEndpointName = Get-ResourceName("cep")$resourceGroupLocation = Get-ResourceGroupLocation$resourceLocation = Get-StorageSyncLocation("Microsoft.StorageSync/storageSyncServices")$azureFileShareName = "testfs" $storageAccountName = Get-ResourceName("sa")$storageAccountTenantId = (Get-AzTenant).Id$serverLocalPath = "D:\" + $serverEndpointName$offlineDataTransferShareName = "dummy"$tierFilesOlderThanDays = 10$volumeFreeSpacePercent = 60$volumeFreeSpacePercent2 = 80Write-Verbose "RGName: $resourceGroupName | Loc: $resourceGroupLocation | Type : ResourceGroup"New-AzResourceGroup -Name $resourceGroupName -Location $resourceGroupLocation;Write-Verbose "Resource: $storageSyncServiceName | Loc: $resourceLocation | Type : StorageSyncService"$storageSyncService = New-AzStorageSyncService -ResourceGroupName $resourceGroupName -Location $resourceLocation -StorageSyncServiceName $storageSyncServiceNameWrite-Verbose "Resource: $syncGroupName | Loc: $resourceLocation | Type : SyncGroup"$syncGroup = New-AzStorageSyncGroup -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupNameWrite-Verbose "Resource: $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"New-AzStorageAccount -StorageAccountName $StorageAccountName -Location $resourceLocation -ResourceGroupName $resourceGroupName -Type Standard_LRS$storageAccount = Get-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName$key = Get-AzStorageAccountKey -ResourceGroupName $resourceGroupName -Name $StorageAccountName$context = Create-StorageContext -StorageAccountName $StorageAccountName -StorageAccountKey $key[0].ValueWrite-Verbose "Resource: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"$azureFileShareName = Create-StorageShare -Name $AzureFileShareName -Context $context$storageAccountResourceId = $storageAccount.IdCreate-StorageShare -Name $offlineDataTransferShareName -Context $context | Out-NullWrite-Verbose "Resource: $cloudEndpointName | Loc: $resourceLocation | Type : CloudEndpoint"$job = New-AzStorageSyncCloudEndpoint -ParentObject $syncGroup -Name $cloudEndpointName -StorageAccountResourceId $storageAccountResourceId -AzureFileShareName $azureFileShareName -StorageAccountTenantId $StorageAccountTenantId -AsJob $job | Wait-Job$cloudEndpoint = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Resource: <auto-generated> | Loc: $resourceLocation | Type : RegisteredServer"$job = Register-AzStorageSyncServer -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -AsJob $job | Wait-Job$registeredServer = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Resource: $serverEndpointName | Loc: $resourceLocation"$job = New-AzStorageSyncServerEndpoint -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $serverEndpointName -ServerResourceId $registeredServer.ResourceId -ServerLocalPath $serverLocalPath -CloudTiering -OfflineDataTransfer -VolumeFreeSpacePercent $volumeFreeSpacePercent -OfflineDataTransferShareName $offlineDataTransferShareName -TierFilesOlderThanDays $tierFilesOlderThanDays -Verbose -AsJob $job | Wait-Job$serverEndpoint = get-job -Id $job.Id | receive-job -KeepWrite-Verbose "Removing ServerEndpoint: $serverEndpointName"Remove-AzStorageSyncServerEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $serverEndpointName -AsJob | Wait-JobWrite-Verbose "Unregister Server: $($registeredServer.ServerId)"Unregister-AzStorageSyncServer -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -ServerId $registeredServer.ServerId -AsJob | Wait-JobWrite-Verbose "Removing CloudEndpoint: $cloudEndpointName"Remove-AzStorageSyncCloudEndpoint -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -SyncGroupName $syncGroupName -Name $cloudEndpointName -AsJob | Wait-JobWrite-Verbose "Removing SyncGroup: $syncGroupName"Remove-AzStorageSyncGroup -Force -ResourceGroupName $resourceGroupName -StorageSyncServiceName $storageSyncServiceName -Name $syncGroupName -AsJob | Wait-JobWrite-Verbose "Removing StorageSyncService: $storageSyncServiceName"Remove-AzStorageSyncService -Force -ResourceGroupName $resourceGroupName -Name $storageSyncServiceName -AsJob | Wait-Jobif(IsLive){Write-Verbose "Removing: $AzureFileShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $AzureFileShareName -Context $context | Out-NullWrite-Verbose "Removing: $offlineDataTransferShareName | Loc: $resourceLocation | Type : AzureStorageShare"Remove-StorageShare -Name $offlineDataTransferShareName -Context $context | Out-Null}Write-Verbose "Removing $StorageAccountName | Loc: $resourceLocation | Type : StorageAccount"Remove-AzStorageAccount -ResourceGroupName $resourceGroupName -Name $StorageAccountName}finally{Write-Verbose "Removing ResourceGroup : $resourceGroupName"Clean-ResourceGroup $resourceGroupName}}