function Test-NewPeerAsn(){$asnId = 65000$asnPeerName = getAssetName "Global"$asnPeer = getAssetName [string[]]$emails = "noc@$asnPeer.com","noc@$asnPeerName.com"$phone = getAssetNametry{New-AzPeerAsn -Name $asnPeerName -PeerName $asnPeer -PeerAsn $asnId -Email $emails -Phone $phone$asn = Get-AzPeerAsn -Name $asnPeerNameAssert-NotNull $asnAssert-AreEqual "None" $asn.ValidationStateAssert-AreEqual $asnPeerName $asn.NameAssert-AreEqual $asnId $asn.PeerAsnPropertyAssert-AreEqual $asnPeer $asn.PeerNameAssert-True {$emails | % {$_ -like "noc@*.com"}}}finally{Remove-AzPeerAsn -Name $asnPeerName -Force}}function Test-GetPeerAsn{$asnId = 65000$asnPeerName = getAssetName "Global"$asnPeer = getAssetName [string[]]$emails = "noc@$asnPeer.com","noc@$asnPeerName.com"$phone = getAssetNametry{$created = New-AzPeerAsn -Name $asnPeerName -PeerName $asnPeer -PeerAsn $asnId -Email $emails -Phone $phone$asn = Get-AzPeerAsn -Name $asnPeerNameAssert-NotNull $asnAssert-NotNull $createdAssert-AreEqual $created.ValidationState $asn.ValidationStateAssert-AreEqual $created.Name $asn.NameAssert-AreEqual $created.PeerAsnProperty $asn.PeerAsnPropertyAssert-AreEqual $created.PeerName $asn.PeerNameAssert-True {$emails | % {$_ -like "noc@*.com"}}}finally{Remove-AzPeerAsn -Name $asnPeerName -Force}}function Test-ListPeerAsn{makePeerAsn 65000makePeerAsn 65001makePeerAsn 65002try{$asn = Get-AzPeerAsnAssert-NotNull $asnAssert-True {$asn.Count -ge 3}}finally{Get-AzPeerAsn | Where-Object {$_.Name -match "Global"} | Remove-AzPeerAsn -Force}$cleaner = Get-AzPeerAsn | Where-Object {$_.Name -match "Global"}Assert-Null $cleaner}function Test-SetPeerAsn{$createdPeerAsn = makePeerAsn 65000Assert-NotNull $createdPeerAsn$name = $createdPeerAsn.Name$getPeerAsn = Get-AzPeerAsn -Name $name$email = getAssetName$email = "$email@$name.com"$getPeerAsn | Set-AzPeerAsn -Email $email$peerasn = Get-AzPeerAsnAssert-True { $peerasn.PeerContactInfo.Emails | Where-Object { $_ -match "$email" } | % {$_ -like $email} }Remove-AzPeerAsn -Name $name -Force}function Test-RemovePeerAsn{$createdPeerAsn = makePeerAsn 65000Assert-NotNull $createdPeerAsn$name = $createdPeerAsn.Name$getPeerAsn = Get-AzPeerAsn -Name $nameAssert-NotNull $getPeerAsn$remove = Remove-AzPeerAsn $name -PassThru -ForceAssert-NotNull $removeAssert-AreEqual $remove "$true"Assert-ThrowsContains {Get-AzPeerAsn -Name $name} "Error"}