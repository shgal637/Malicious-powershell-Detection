function Test-DatabaseDataMaskingPrivilegedUsersChanges{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{$policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "Disabled" $policy.DataMaskingStateSet-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -PrivilegedUsers "public" -DataMaskingState "Enabled"$policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "public;" $policy.PrivilegedUsersAssert-AreEqual "Enabled" $policy.DataMaskingStateSet-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -PrivilegedUsers "" $policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "" $policy.PrivilegedUsersSet-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -DataMaskingState "Disabled" $policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "" $policy.PrivilegedUsersSet-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -PrivilegedUsers "public" $policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "" $policy.PrivilegedUsersSet-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -PrivilegedUsers ""  $policy = Get-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual "" $policy.PrivilegedUsers}finally{Remove-DataMaskingTestEnvironment $testSuffix}}function Test-DatabaseDataMaskingBasicRuleLifecycle{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{Set-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore + 1) $ruleCountAfter$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1Assert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Default"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1Set-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName  -MaskingFunction "Email" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1Assert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Email"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1Set-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -MaskingFunction "Default"$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Default"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}Remove-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -Force$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}		}finally{Remove-DataMaskingTestEnvironment $testSuffix}}function Test-DatabaseDataMaskingNumberRuleLifecycle{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{Set-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Number" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.columnInt -NumberFrom 12 -NumberTo 56$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore + 1) $ruleCountAfter$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.columnIntAssert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Number"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.columnIntAssert-AreEqual $rule.NumberFrom 12Assert-AreEqual $rule.NumberTo 56Set-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.columnInt -NumberFrom 15 -NumberTo 34$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.columnIntAssert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Number"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.columnIntAssert-AreEqual $rule.NumberFrom 15Assert-AreEqual $rule.NumberTo 34$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}Remove-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -Force$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore - 1) $ruleCountAfter}finally{Remove-DataMaskingTestEnvironment $testSuffix}}function Test-DatabaseDataMaskingTextRuleLifecycle{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{Set-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Text" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -PrefixSize 1 -ReplacementString "AAA" -SuffixSize 3$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore + 1) $ruleCountAfter$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1Assert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Text"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1Assert-AreEqual $rule.PrefixSize 1Assert-AreEqual $rule.ReplacementString "AAA"Assert-AreEqual $rule.SuffixSize 3Set-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -PrefixSize 4 -ReplacementString "BBB" -SuffixSize 2$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Text"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1Assert-AreEqual $rule.PrefixSize 4Assert-AreEqual $rule.ReplacementString "BBB"Assert-AreEqual $rule.SuffixSize 2$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}Remove-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -Force$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore - 1) $ruleCountAfter}finally{Remove-DataMaskingTestEnvironment $testSuffix}}function Test-DatabaseDataMaskingRuleCreationFailures{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{Set-AzSqlDatabaseDataMaskingPolicy -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseNameAssert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName "NONEXISTING" -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1} Assert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName "NONEXISTING"  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1} Assert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName "NONEXISTING" -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1} Assert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "NONEXISTING" -TableName  $params.table1 -ColumnName $params.column1} Assert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  "NONEXISTING" -ColumnName $params.column1} Assert-Throws { New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 "NONEXISTING"} }finally{Remove-DataMaskingTestEnvironment $testSuffix}}function Test-DatabaseDataMaskingRuleCreationWithoutPolicy{$testSuffix = getAssetNameCreate-DataMaskingTestEnvironment $testSuffix$params = Get-SqlDataMaskingTestEnvironmentParameters $testSuffixtry{$ruleCountBefore = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountBefore = if ( !$ruleCountBefore ) {0} else {$ruleCountBefore}New-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -MaskingFunction "Default" -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-AreEqual ($ruleCountBefore + 1) $ruleCountAfter$rule = Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1Assert-AreEqual $rule.ResourceGroupName $params.rgnameAssert-AreEqual $rule.ServerName $params.serverNameAssert-AreEqual $rule.DatabaseName $params.databaseNameAssert-AreEqual $rule.MaskingFunction "Default"Assert-AreEqual $rule.SchemaName "dbo"Assert-AreEqual $rule.TableName $params.table1Assert-AreEqual $rule.ColumnName $params.column1$ruleCountBefore = $ruleCountAfterRemove-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -SchemaName "dbo" -TableName  $params.table1 -ColumnName $params.column1 -Force$ruleCountAfter = (Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName).Count$ruleCountAfter = if ( !$ruleCountAfter ) {0} else {$ruleCountAfter}Assert-Throws {Get-AzSqlDatabaseDataMaskingRule -ResourceGroupName $params.rgname -ServerName $params.serverName  -DatabaseName $params.databaseName -RuleId $ruleId}Assert-AreEqual ($ruleCountBefore - 1) $ruleCountAfter}finally{Remove-DataMaskingTestEnvironment $testSuffix}}