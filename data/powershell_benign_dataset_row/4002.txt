function Test-E2ECredentials{$resourceGroupName = "to-delete-01"$automationAccountName = "fbs-aa-01"$output = Get-AzAutomationAccount -ResourceGroupName $resourceGroupName -AutomationAccountName $automationAccountName -ErrorAction SilentlyContinue$User = "Contoso\Test"$Password = ConvertTo-SecureString �12345� -AsPlainText -Force$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $Password$credentialCreated = New-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2" `-Value $Credential `-Description "Hello"$getCredential = Get-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2"Assert-AreEqual ContosoCredential2  $getCredential.NameAssert-AreEqual $variableValue $getVariable.ValueSet-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2" `-Description "Goodbye" `-Value $Credential$getCredential = Get-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2"Assert-AreEqual "Goodbye"  $getCredential.DescriptionRemove-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2" $output = Get-AzAutomationCredential -ResourceGroupName $resourceGroupName `-AutomationAccountName $automationAccountName `-Name "ContosoCredential2" -ErrorAction SilentlyContinueAssert-True {$output -eq $null}}