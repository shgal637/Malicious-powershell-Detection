function Test-GetPeeringServiceProviders {$name = "TestPeer1"$provider = Get-AzPeeringServiceProviderAssert-NotNull $providerAssert-AreEqual $name $provider[0].ServiceProviderName}function Test-GetPeeringServiceLocations {$locations = Get-AzPeeringServiceLocation -Country "United States"Assert-NotNull $locations$state = $locations | Where-Object { $_.Name -match "Washington" }Assert-NotNull "Washington" $state$locations = Get-AzPeeringServiceLocation -Country "United States"Assert-NotNull $locations}function Test-GetPeeringServiceByResourceGroup {$name = getAssetName "myPeeringService";$loc = "Florida"$provider = "AS56845-Global1191"$resourceGroup = "Building40"$peeringService = New-AzPeeringService -ResourceGroupName $resourceGroup -Name $name -PeeringLocation $loc -PeeringServiceProvider $providerAssert-NotNull $peeringServiceAssert-AreEqual $peeringService.Name $nameAssert-AreEqual $loc $peeringService.PeeringServiceLocationAssert-AreEqual $provider $peeringService.PeeringServiceProvider$peeringService = Get-AzPeeringService -ResourceGroupName $resourceGroup -Name $nameAssert-NotNull $peeringServiceAssert-AreEqual $peeringService.Name $nameAssert-AreEqual $loc $peeringService.PeeringServiceLocationAssert-AreEqual $provider $peeringService.PeeringServiceProvider}function Test-GetPeeringServiceByResourceId {$name = getAssetName "myPeeringService";$loc = "Florida"$provider = "AS56845-Global1191"$resourceGroup = "Building40"$peeringService = New-AzPeeringService -ResourceGroupName $resourceGroup -Name $name -PeeringLocation $loc -PeeringServiceProvider $providerAssert-NotNull $peeringServiceAssert-AreEqual $peeringService.Name $nameAssert-AreEqual $loc $peeringService.PeeringServiceLocationAssert-AreEqual $provider $peeringService.PeeringServiceProvider$peeringService = Get-AzPeeringService -ResourceId $peeringService.IdAssert-NotNull $peeringServiceAssert-AreEqual $peeringService.Name $nameAssert-AreEqual $loc $peeringService.PeeringServiceLocationAssert-AreEqual $provider $peeringService.PeeringServiceProvider}function Test-ListPeeringService {$peeringService = Get-AzPeeringServiceAssert-NotNull $peeringService}function Test-NewPeeringService {$name = getAssetName "myPeeringService";$loc = "Florida"$provider = "AS56845-Global1191"$resourceGroup = "Building40"$peeringService = New-AzPeeringService -ResourceGroupName $resourceGroup -Name $name -PeeringLocation $loc -PeeringServiceProvider $providerAssert-NotNull $peeringServiceAssert-AreEqual $peeringService.Name $nameAssert-AreEqual $loc $peeringService.PeeringServiceLocationAssert-AreEqual $provider $peeringService.PeeringServiceProvider}function Test-NewPeeringServicePrefix {$name = getAssetName "myPeeringService";$prefixName = getAssetName "myPrefix";$loc = "Florida"$provider = "AS56845-Global1191"$resourceGroup = "Building40"$prefix = newIpV4Address $true $true 0 4$peeringService = New-AzPeeringService -ResourceGroupName $resourceGroup -Name $name -PeeringLocation $loc -PeeringServiceProvider $provider$peeringService = Get-AzPeeringService -ResourceGroupName $resourceGroup -Name $name$prefixService = $peeringService | New-AzPeeringServicePrefix -Name $prefixName -Prefix $prefixAssert-NotNull $prefixService$getPrefixService = Get-AzPeeringServicePrefix -ResourceGroupName $resourceGroup -PeeringServiceName $name -Name $prefixNameAssert-NotNull $getPrefixService$isRemoved = Remove-AzPeeringServicePrefix -ResourceId $getPrefixService.Id -Force -PassThruAssert-AreEqual $isRemoved $true}