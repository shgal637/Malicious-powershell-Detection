Set-StrictMode -Version 'Latest'& (Join-Path -Path $PSScriptRoot -ChildPath 'Initialize-CarbonTest.ps1' -Resolve)$rootDir = $null$childDir = $null$grandchildFile = $null$childFile = $nullfunction Assert-EverythingCompressed{Assert-Compressed -Path $rootDirAssert-Compressed -Path $childDirAssert-Compressed -Path $grandchildFileAssert-Compressed -Path $childFile}function Assert-NothingCompressed{Assert-NotCompressed -Path $rootDirAssert-NotCompressed -Path $childDirAssert-NotCompressed -Path $grandchildFileAssert-NotCompressed -Path $childFile}function Assert-Compressed{param($Path)(Test-NtfsCompression -Path $Path) | Should -BeTrue}function Assert-NotCompressed{param($Path)(Test-NtfsCompression -Path $Path) | Should -BeFalse}Describe 'Enable-NtfsCompression' {BeforeEach {$Global:Error.Clear()$script:rootDir = Join-Path -Path $TestDrive.FullName -ChildPath ([IO.Path]::GetRandomFileName())$script:childDir = Join-Path $rootDir -ChildPath 'ChildDir' $script:grandchildFile = Join-Path $rootDir -ChildPath 'ChildDir\GrandchildFile' $script:childFile = Join-Path $rootDir -ChildPath 'ChildFile' New-Item -Path $grandchildFile -ItemType 'File' -ForceNew-Item -Path $childFile -ItemType 'File' -Force}It 'should enable compression on directory only' {Assert-NothingCompressedEnable-NtfsCompression -Path $rootDirAssert-Compressed -Path $rootDirAssert-NotCompressed -Path $childDirAssert-NotCompressed -path $grandchildFileAssert-NotCompressed -Path $childFile$newFile = Join-Path $rootDir 'newfile''' > $newFileAssert-Compressed -Path $newFile$newDir = Join-Path $rootDir 'newDir'$null = New-Item -Path $newDir -ItemType DirectoryAssert-Compressed -Path $newDir}It 'should fail if path does not exist' {Assert-NothingCompressedEnable-NtfsCompression -Path 'C:\I\Do\Not\Exist' -ErrorAction SilentlyContinue$Global:Error.Count | Should -Be 1($Global:Error[0].Exception.Message -like '*not found*') | Should -BeTrueAssert-NothingCompressed}It 'should enable compression recursively' {Assert-NothingCompressedEnable-NtfsCompression -Path $rootDir -RecurseAssert-EverythingCompressed}It 'should support piping items' {Assert-NothingCompressed Get-ChildItem $rootDir | Enable-NtfsCompressionAssert-NotCompressed $rootDirAssert-Compressed $childDirAssert-NotCompressed $grandchildFileAssert-Compressed $childFile}It 'should support piping strings' {($childFile,$grandchildFile) | Enable-NtfsCompressionAssert-NotCompressed $rootDirAssert-NotCompressed $childDirAssert-Compressed $grandchildFileAssert-Compressed $childFile}It 'should compress array of items' {Enable-NtfsCompression -Path $childFile,$grandchildFileAssert-NotCompressed $rootDirAssert-NotCompressed $childDirAssert-Compressed $grandchildFileAssert-Compressed $childFile}It 'should compress already compressed item' {Enable-NtfsCompression $rootDir -RecurseAssert-EverythingCompressedEnable-NtfsCompression $rootDir -Recurse$LASTEXITCODE | Should -Be 0Assert-EverythingCompressed}It 'should support what if' {Enable-NtfsCompression -Path $childFile -WhatIfAssert-NotCompressed $childFile}It 'should not compress if already compressed' {Enable-CNtfsCompression -Path $rootDir  Assert-Compressed $rootDirMock -CommandName 'Invoke-ConsoleCommand' -ModuleName 'Carbon'Enable-CNtfsCompression -Path $rootDirAssert-MockCalled 'Invoke-ConsoleCommand' -ModuleName 'Carbon' -Times 0Enable-CNtfsCompression -Path $rootDir -ForceAssert-MockCalled 'Invoke-ConsoleCommand' -ModuleName 'Carbon' -Times 1}}