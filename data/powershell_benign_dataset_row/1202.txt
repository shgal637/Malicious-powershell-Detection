$tempDir = $nullfunction Start-TestFixture{& (Join-Path -Path $PSScriptRoot -ChildPath '..\Initialize-CarbonTest.ps1' -Resolve)}function Start-Test{$tempDir = New-TempDirectory -Prefix $PSCommandPath}function Stop-Test{Remove-Item $tempDir.FullName -Recurse}configuration IAmBroken{Set-StrictMode -Offnode 'localhost' {Script Fails{GetScript = { Write-Error 'GetScript' }SetScript = { Write-Error 'SetScript' }TestScript = { Write-Error 'TestScript' ; return $false }}}}function Test-ShouldGetDscError{$startTime = Get-Date& IAmBroken -OutputPath $tempDir.FullNameStart-Sleep -Milliseconds 100Start-DscConfiguration -Wait -ComputerName 'localhost' -Path $tempDir.FullName -ErrorAction SilentlyContinue -Force$dscError = Get-DscError -StartTime $startTime -WaitAssert-NotNull $dscError$Error.Clear()Write-DscError -EventLogRecord $dscError -ErrorAction SilentlyContinueAssert-DscError $dscError$Error.Clear()Get-DscError | Write-DscError -PassThru -ErrorAction SilentlyContinue | ForEach-Object { Assert-DscError $_ }$Error.Clear()Write-DscError @( $dscError, $dscError ) -ErrorAction SilentlyContinueAssert-DscError $dscError -Index 0Assert-DscError $dscError -Index 1}function Assert-DscError{param($DscError,$Index = 0)Set-StrictMode -Version 'Latest'Assert-Error$msg = $Error[$Index].Exception.MessageAssert-Like $msg ('`[{0}`]*' -f $DscError.TimeCreated)Assert-Like $msg ('* `[{0}`] *' -f $DscError.MachineName)for( $idx = 0; $idx -lt $DscError.Properties.Count - 1; ++$idx ){Assert-Like $msg ('* `[{0}`] *' -f $DscError.Properties[$idx].Value)}Assert-Like $msg ('* {0}' -f $DscError.Properties[-1].Value)}