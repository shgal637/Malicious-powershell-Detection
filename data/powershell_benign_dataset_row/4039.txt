function Test-SkuCreate{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Microsoft"$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSkuAssert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupNameAssert-AreEqual $profileSku $createdProfile.Sku.Name$profileSku = "Standard_Verizon"$profileName = getAssetName$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku Assert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupNameAssert-AreEqual $profileSku $createdProfile.Sku.Name$profileSku = "Premium_Verizon"$profileName = getAssetName$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku Assert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupNameAssert-AreEqual $profileSku $createdProfile.Sku.Name$profileSku = "Standard_Akamai"$profileName = getAssetName$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku Assert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupNameAssert-AreEqual $profileSku $createdProfile.Sku.NameRemove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfileCrud{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Verizon"$tags = @{"tag1" = "value1"; "tag2" = "value2"}$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku -Tag $tagsAssert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupNameAssert-AreEqual $profileSku $createdProfile.Sku.NameAssert-Tags $tags $createdProfile.Tags$retrievedProfile = Get-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedProfileAssert-AreEqual $profileName $retrievedProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $retrievedProfile.ResourceGroupNameAssert-Tags $tags $createdProfile.Tags$newTags = @{"tag1" = "value3"; "tag2" = "value4"}$retrievedProfile.Tags = $newTags$updatedProfile = Set-AzCdnProfile -CdnProfile $retrievedProfileAssert-NotNull $updatedProfileAssert-AreEqual $profileName $updatedProfile.NameAssert-AreEqual $resourceGroup.ResourceGroupName $updatedProfile.ResourceGroupNameAssert-Tags $newTags $updatedProfile.Tags$sso = Get-AzCdnProfileSsoUrl -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $sso.SsoUriValue$removed = Remove-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -PassThruAssert-True { $removed }Assert-ThrowsContains { Get-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } "does not exist"Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfileDeleteWithEndpoints{$profileName = getAssetName$endpointName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Akamai"$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSkuNew-AzCdnEndpoint -CdnProfile $createdProfile -OriginName "contoso" -OriginHostName "www.contoso.com" -EndpointName $endpointName$removed = Remove-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force -PassThruAssert-True { $removed }Assert-ThrowsContains { Get-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } "does not exist"Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfileDeleteAndSsoWithPiping{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Verizon"$tags = @{"tag1" = "value1"; "tag2" = "value2"}$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku -Tag $tagsAssert-NotNull $createdProfile$sso = Get-AzCdnProfileSsoUrl -CdnProfile $createdProfileAssert-NotNull $sso.SsoUriValue$removed = Remove-AzCdnProfile -CdnProfile $createdProfile -PassThruAssert-True { $removed }Assert-ThrowsContains { Get-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } "does not exist"Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfilePipeline{$profileName1 = getAssetName$profileName2 = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Verizon"$tags = @{"tag1" = "value1"; "tag2" = "value2"}$createdProfile1 = New-AzCdnProfile -ProfileName $profileName1 -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku -Tag $tagsAssert-NotNull $createdProfile1$createdProfile2 = New-AzCdnProfile -ProfileName $profileName2 -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku -Tag $tagsAssert-NotNull $createdProfile2$profiles = Get-AzCdnProfile | where {($_.Name -eq $profileName1) -or ($_.Name -eq $profileName2)}Assert-True { $profiles.Count -eq 2 }Get-AzCdnProfile | where {($_.Name -eq $profileName1) -or ($_.Name -eq $profileName2)} | Remove-AzCdnProfile -Force$deletedProfiles = Get-AzCdnProfile | where {($_.Name -eq $profileName1) -or ($_.Name -eq $profileName2)}Assert-True { $deletedProfiles.Count -eq 0 }Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfileGetResourceUsages{$profileName = getAssetName$endpointName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Akamai"$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku$profileResourceUsage = Get-AzCdnProfileResourceUsage -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-True {$profileResourceUsage.Count -eq 1}Assert-True {$profileResourceUsage[0].CurrentValue -eq 0}Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ProfileGetSupportedOptimizationType{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$profileLocation = "EastUS"$profileSku = "Standard_Akamai"$createdProfile = New-AzCdnProfile -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $profileLocation -Sku $profileSku$supportedOptimizationTypes = Get-AzCdnProfileSupportedOptimizationType -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $supportedOptimizationTypesRemove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}