function Test-ResourceLockCRUD{$rgname = Get-ResourceGroupName$rname = Get-ResourceName$rglocation = Get-Location "Microsoft.Resources" "resourceGroups" "West US"$apiversion = "2014-04-01"$rg = New-AzResourceGroup -Name $rgname -Location $rglocation$actual = New-AzResourceLock -LockName $rname -LockLevel CanNotDelete -Force -Scope $rg.ResourceId$expected = Get-AzResourceLock -LockName $rname -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.NameAssert-AreEqual $expected.ResourceId $actual.ResourceIdAssert-AreEqual $expected.ResourceName $actual.ResourceNameAssert-AreEqual $expected.ResourceType $actual.ResourceTypeAssert-AreEqual $expected.LockId $actual.LockId$expectedSet = Set-AzResourceLock -LockId $expected.LockId -LockLevel CanNotDelete -LockNotes test -ForceAssert-AreEqual $expectedSet.Properties.Notes "test"$removed = Remove-AzResourceLock -LockId $expectedSet.LockId -ForceAssert-AreEqual True $removed$actual = New-AzResourceLock -LockName $rname -LockLevel CanNotDelete -Force -Scope $rg.ResourceId$removed = Remove-AzResourceLock -ResourceId $actual.ResourceId -ForceAssert-AreEqual True $removed$actual = New-AzResourceLock -LockName $rname -LockLevel ReadOnly -Force -Scope $rg.ResourceIdAssert-AreEqual $expected.Name $actual.Name$expected = Get-AzResourceLock -LockName $rname -Scope $rg.ResourceIdAssert-AreEqual $expected.Properties.Level "ReadOnly"$removed = Remove-AzResourceLock -ResourceId $actual.ResourceId -ForceAssert-AreEqual True $removed}function Test-ResourceLockNonExisting{$rgname = Get-ResourceGroupName$rglocation = Get-Location "Microsoft.Resources" "resourceGroups" "West US"$rg = New-AzResourceGroup -Name $rgname -Location $rglocationAssert-AreEqual $rgname $rg.ResourceGroupName$lock = Get-AzResourceLock -LockName "NonExisting" -Scope $rg.ResourceId -ErrorAction SilentlyContinueAssert-True { $Error[0] -like "*LockNotFound : The lock 'NonExisting' could not be found." }Assert-Null $lock$Error.Clear()}