function Get-BudgetName{return "Budget-" + (getAssetName)}function Get-NotificationKey{return "NotificationKey-" + (getAssetName)}function Get-ResourceGroupName{return "RG-" + (getAssetName)}function Test-BudgetAtSubscriptionLevel{$budgetName = Get-BudgetName$notificationKey = Get-NotificationKey$startDate = Get-Date -Day 1$endDate = ($startDate).AddMonths(3).AddDays(-1)Write-Debug "Create a new budget $budgetName at subscription level"$budgetNew = New-AzConsumptionBudget -Amount 6000 -Name $budgetName -Category Cost -StartDate $startDate -EndDate $endDate -TimeGrain MonthlyAssert-NotNull $budgetNewAssert-AreEqual 6000 $budgetNew.AmountAssert-AreEqual $budgetName $budgetNew.NameAssert-AreEqual Cost $budgetNew.CategoryAssert-AreEqual Monthly $budgetNew.TimeGrainWrite-Debug "Get the budget $budgetName"$budgetGet = Get-AzConsumptionBudget -Name $budgetNameAssert-NotNull $budgetGetAssert-AreEqual 6000 $budgetGet.AmountAssert-AreEqual $budgetName $budgetGet.NameAssert-AreEqual Cost $budgetGet.CategoryAssert-AreEqual Monthly $budgetGet.TimeGrainWrite-Debug "Update the budget $budgetName with amount change to 7500"$budgetSet1 = Get-AzConsumptionBudget -Name $budgetName | Set-AzConsumptionBudget -Amount 7500Assert-NotNull $budgetSet1Assert-AreEqual 7500 $budgetSet1.AmountWrite-Debug "Update the budget $budgetName with a notification $notificationKey when cost or usage reaches a threshold of 90 percent of amount"$budgetSet2 = Set-AzConsumptionBudget -Name $budgetName -NotificationKey $notificationKey -NotificationEnabled -NotificationThreshold 90 -ContactEmail johndoe@contoso.com,janesmith@contoso.com -ContactRole Owner,Reader,ContributorAssert-NotNull $budgetSet2Assert-AreEqual $budgetName $budgetSet2.NameAssert-AreEqual 1 $budgetSet2.Notification.CountWrite-Debug "Remove the budget $budgetName"$response = Remove-AzConsumptionBudget -Name $budgetName -PassThruAssert-AreEqual True $responseAssert-Throws {Get-AzConsumptionBudget -Name $budgetName}}function Test-BudgetAtResourceGroupLevel{$budgetName = Get-BudgetName$notificationKey1 = Get-NotificationKey$notificationKey2 = Get-NotificationKey$resourceGroupName = Get-ResourceGroupName$startDate = Get-Date -Day 1$endDate = ($startDate).AddMonths(3).AddDays(-1)New-AzResourceGroup -Name $resourceGroupName -Location 'West US' -Forcetry {Write-Debug "Create a new budget $budgetName at resource group level"$budgetNew = New-AzConsumptionBudget -Amount 6000 -Name $budgetName -ResourceGroupName $resourceGroupName -Category Cost -StartDate $startDate -EndDate $endDate -TimeGrain MonthlyAssert-NotNull $budgetNewAssert-AreEqual 6000 $budgetNew.AmountAssert-AreEqual $budgetName $budgetNew.NameAssert-AreEqual Cost $budgetNew.CategoryAssert-AreEqual Monthly $budgetNew.TimeGrainWrite-Debug "Get the budget $budgetName"$budgetGet = Get-AzConsumptionBudget -Name $budgetName -ResourceGroupName $resourceGroupNameAssert-NotNull $budgetGetAssert-AreEqual 6000 $budgetGet.AmountAssert-AreEqual $budgetName $budgetGet.NameAssert-AreEqual Cost $budgetGet.CategoryAssert-AreEqual Monthly $budgetGet.TimeGrainWrite-Debug "Update the budget $budgetName with a notification $notificationKey when cost reaches a threshold of 90 percent of amount"$budgetSet1 = Set-AzConsumptionBudget -Name $budgetName -ResourceGroupName $resourceGroupName -NotificationKey $notificationKey1 -NotificationEnabled -NotificationThreshold 90 -ContactEmail johndoe@contoso.com,janesmith@contoso.com -ContactRole Owner,Reader,ContributorAssert-NotNull $budgetSet1Assert-AreEqual $budgetName $budgetSet1.NameAssert-AreEqual 1 $budgetSet1.Notification.CountWrite-Debug "Update the budget $budgetName with a second notificaiton $notificationKey when cost reaches a threshold of 150 percent of amount"$budgetSet2 = Set-AzConsumptionBudget -Name $budgetName -ResourceGroupName $resourceGroupName -NotificationKey $notificationKey2 -NotificationEnabled -NotificationThreshold 150 -ContactEmail johndoe@contoso.com,janesmith@contoso.com -ContactRole Owner,Reader,ContributorAssert-NotNull $budgetSet2Assert-AreEqual $budgetName $budgetSet2.NameAssert-AreEqual 2 $budgetSet2.Notification.CountWrite-Debug "Remove the budget $budgetName"$response = Remove-AzConsumptionBudget -Name $budgetName -ResourceGroupName $resourceGroupName -PassThruAssert-AreEqual True $responseAssert-Throws {Get-AzConsumptionBudget -Name $budgetName -ResourceGroupName $resourceGroupName}		}finally {	Remove-AzResourceGroup -Name $resourceGroupName -Force}	}function Test-GetBudgets{$startDate = Get-Date -Day 1$endDate = ($startDate).AddMonths(3).AddDays(-1)$budgetName = Get-BudgetName$budgetNew = New-AzConsumptionBudget -Amount 6000 -Name $budgetName -Category Cost -StartDate $startDate -EndDate $endDate -TimeGrain MonthlyAssert-NotNull $budgetNew$budgets = Get-AzConsumptionBudget Assert-NotNull $budgets$response = Get-AzConsumptionBudget -Name $budgetName | Remove-AzConsumptionBudget -PassThruAssert-AreEqual True $responseAssert-Throws {Get-AzConsumptionBudget -Name $budgetName}}