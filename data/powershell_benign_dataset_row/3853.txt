function Test-StorageBlobContainer{$rgname = Get-StorageManagementTestResourceName;try{$stoname = 'sto' + $rgname;$stotype = 'Standard_GRS';$loc = Get-ProviderLocation ResourceManagement;$kind = 'StorageV2'$containerName = "container"+ $rgnameWrite-Verbose "RGName: $rgname | Loc: $loc"New-AzResourceGroup -Name $rgname -Location $loc;New-AzStorageAccount -ResourceGroupName $rgname -Name $stoname -Location $loc -Type $stotype -Kind $kind $stos = Get-AzStorageAccount -ResourceGroupName $rgname;New-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $rgname $container.ResourceGroupNameAssert-AreEqual $stoname $container.StorageAccountNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $false $container.HasLegalHoldAssert-AreEqual $false $container.HasImmutabilityPolicyAssert-AreEqual none $container.PublicAccess$publicAccess = 'blob'$metadata = @{tag0="value0"} Update-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName -PublicAccess $publicAccess -Metadata $metadata$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $rgname $container.ResourceGroupNameAssert-AreEqual $stoname $container.StorageAccountNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $false $container.HasLegalHoldAssert-AreEqual $false $container.HasImmutabilityPolicyAssert-AreEqual $publicAccess $container.PublicAccessAssert-AreEqual $metadata.Count $container.Metadata.Count$publicAccess = 'container'$metadata = @{tag0="value0";tag1="value1"}$containerName2 = "container2"+ $rgname		New-AzRmStorageContainer -StorageAccount $stos -Name $containerName2 -PublicAccess $publicAccess -Metadata $metadata$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName2Assert-AreEqual $rgname $container.ResourceGroupNameAssert-AreEqual $stoname $container.StorageAccountNameAssert-AreEqual $containerName2 $container.NameAssert-AreEqual $false $container.HasLegalHoldAssert-AreEqual $false $container.HasImmutabilityPolicyAssert-AreEqual $publicAccess $container.PublicAccessAssert-AreEqual $metadata.Count $container.Metadata.Count$job = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -AsJob$job | Wait-Job$containers = $job.OutputAssert-AreEqual 2 $containers.CountAssert-AreEqual $containerName  $containers[1].NameAssert-AreEqual $containerName2  $containers[0].NameRemove-AzRmStorageContainer -Force -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName$containers = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stonameAssert-AreEqual 1 $containers.CountAssert-AreEqual $containerName2  $containers[0].NameRemove-AzRmStorageContainer -Force -StorageAccount $stos -Name $containerName2$containers = Get-AzRmStorageContainer -StorageAccount $stosAssert-AreEqual 0 $containers.CountRemove-AzStorageAccount -Force -ResourceGroupName $rgname -Name $stoname;}finally{Clean-ResourceGroup $rgname}}function Test-StorageBlobContainerLegalHold{$rgname = Get-StorageManagementTestResourceName;try{$stoname = 'sto' + $rgname;$stotype = 'Standard_GRS';$loc = Get-ProviderLocation ResourceManagement;$kind = 'StorageV2'$containerName = "container"+ $rgnameWrite-Verbose "RGName: $rgname | Loc: $loc"New-AzResourceGroup -Name $rgname -Location $loc;New-AzStorageAccount -ResourceGroupName $rgname -Name $stoname -Location $loc -Type $stotype -Kind $kind $stos = Get-AzStorageAccount -ResourceGroupName $rgname;New-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $rgname $container.ResourceGroupNameAssert-AreEqual $stoname $container.StorageAccountNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $false $container.HasLegalHoldAssert-AreEqual $false $container.HasImmutabilityPolicyAssert-AreEqual none $container.PublicAccessAdd-AzRmStorageContainerLegalHold -ResourceGroupName $rgname -StorageAccountName $stoname  -Name $containerName -Tag  tag1,tag2,tag3$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual 3 $container.LegalHold.Tags.CountAssert-AreEqual "tag1" $container.LegalHold.Tags[0].TagAssert-AreNotEqual $null $container.LegalHold.Tags[0].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[0].ObjectIdentifierAssert-AreEqual "tag2" $container.LegalHold.Tags[1].TagAssert-AreNotEqual $null $container.LegalHold.Tags[1].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[1].ObjectIdentifierAssert-AreEqual "tag3" $container.LegalHold.Tags[2].TagAssert-AreNotEqual $null $container.LegalHold.Tags[2].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[2].ObjectIdentifierRemove-AzRmStorageContainerLegalHold -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName -Tag tag1,tag2 $container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual 1 $container.LegalHold.Tags.CountAssert-AreEqual "tag3" $container.LegalHold.Tags[0].TagAssert-AreNotEqual $null $container.LegalHold.Tags[0].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[0].ObjectIdentifierAdd-AzRmStorageContainerLegalHold -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName -Tag tag1$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual 2 $container.LegalHold.Tags.CountAssert-AreEqual "tag3" $container.LegalHold.Tags[0].TagAssert-AreNotEqual $null $container.LegalHold.Tags[0].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[0].ObjectIdentifierAssert-AreEqual "tag1" $container.LegalHold.Tags[1].TagAssert-AreNotEqual $null $container.LegalHold.Tags[1].TimestampAssert-AreNotEqual $null $container.LegalHold.Tags[1].ObjectIdentifierRemove-AzRmStorageContainerLegalHold -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName -Tag tag1,tag3$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual 0 $container.LegalHold.Tags.CountRemove-AzRmStorageContainer -Force -StorageAccount $stos -Name $containerName$containers = Get-AzRmStorageContainer -StorageAccount $stosAssert-AreEqual 0 $containers.CountRemove-AzStorageAccount -Force -ResourceGroupName $rgname -Name $stoname;}finally{Clean-ResourceGroup $rgname}}function Test-StorageBlobContainerImmutabilityPolicy{$rgname = Get-StorageManagementTestResourceName;try{$stoname = 'sto' + $rgname;$stotype = 'Standard_GRS';$loc = Get-ProviderLocation ResourceManagement;$kind = 'StorageV2'$containerName = "container"+ $rgnameWrite-Verbose "RGName: $rgname | Loc: $loc"New-AzResourceGroup -Name $rgname -Location $loc;New-AzStorageAccount -ResourceGroupName $rgname -Name $stoname -Location $loc -Type $stotype -Kind $kind $stos = Get-AzStorageAccount -ResourceGroupName $rgname;New-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $rgname $container.ResourceGroupNameAssert-AreEqual $stoname $container.StorageAccountNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $false $container.HasLegalHoldAssert-AreEqual $false $container.HasImmutabilityPolicyAssert-AreEqual none $container.PublicAccess$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName 		Assert-AreEqual 0 $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Deleted $policy.StateAssert-AreEqual "" $policy.Etag$immutabilityPeriod =3Set-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName -ImmutabilityPeriod $immutabilityPeriod$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerNameAssert-AreEqual $immutabilityPeriod $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $policy.StateAssert-AreNotEqual $null $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $container.ImmutabilityPolicy.StateAssert-AreEqual 1 $container.ImmutabilityPolicy.UpdateHistory.CountAssert-AreEqual put $container.ImmutabilityPolicy.UpdateHistory[0].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[0].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].ObjectIdentifier$immutabilityPeriod =2Set-AzRmStorageContainerImmutabilityPolicy -inputObject $policy -ImmutabilityPeriod $immutabilityPeriod		$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName Assert-AreEqual $immutabilityPeriod $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $policy.StateAssert-AreNotEqual $null $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName		Assert-AreEqual $containerName $container.NameAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $container.ImmutabilityPolicy.StateAssert-AreEqual 1 $container.ImmutabilityPolicy.UpdateHistory.CountAssert-AreEqual put $container.ImmutabilityPolicy.UpdateHistory[0].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[0].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].ObjectIdentifierRemove-AzRmStorageContainerImmutabilityPolicy -inputObject $policy $policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName Assert-AreEqual 0 $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Deleted $policy.StateAssert-AreEqual "" $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName		Assert-AreEqual $containerName $container.NameAssert-AreEqual $null $container.ImmutabilityPolicy$immutabilityPeriod =7Set-AzRmStorageContainerImmutabilityPolicy -inputObject $policy -ImmutabilityPeriod $immutabilityPeriod$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName Assert-AreEqual $immutabilityPeriod $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $policy.StateAssert-AreNotEqual $null $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerName	Assert-AreEqual $containerName $container.NameAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Unlocked $container.ImmutabilityPolicy.StateAssert-AreEqual 1 $container.ImmutabilityPolicy.UpdateHistory.CountAssert-AreEqual put $container.ImmutabilityPolicy.UpdateHistory[0].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[0].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].ObjectIdentifierLock-AzRmStorageContainerImmutabilityPolicy -inputObject $policy -Force$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerNameAssert-AreEqual $immutabilityPeriod $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Locked $policy.StateAssert-AreNotEqual $null $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Locked $container.ImmutabilityPolicy.StateAssert-AreEqual 2 $container.ImmutabilityPolicy.UpdateHistory.CountAssert-AreEqual put $container.ImmutabilityPolicy.UpdateHistory[0].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[0].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].ObjectIdentifierAssert-AreEqual lock $container.ImmutabilityPolicy.UpdateHistory[1].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[1].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[1].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[1].ObjectIdentifier$immutabilityPeriod2 =20Set-AzRmStorageContainerImmutabilityPolicy -inputObject $policy -ExtendPolicy -ImmutabilityPeriod $immutabilityPeriod2$policy = Get-AzRmStorageContainerImmutabilityPolicy -ResourceGroupName $rgname -StorageAccountName $stoname  -ContainerName $containerName Assert-AreEqual $immutabilityPeriod2 $policy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Locked $policy.StateAssert-AreNotEqual $null $policy.Etag$container = Get-AzRmStorageContainer -ResourceGroupName $rgname -StorageAccountName $stoname -Name $containerNameAssert-AreEqual $containerName $container.NameAssert-AreEqual $immutabilityPeriod2 $container.ImmutabilityPolicy.ImmutabilityPeriodSinceCreationInDaysAssert-AreEqual Locked $container.ImmutabilityPolicy.StateAssert-AreEqual 3 $container.ImmutabilityPolicy.UpdateHistory.CountAssert-AreEqual put $container.ImmutabilityPolicy.UpdateHistory[0].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[0].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[0].ObjectIdentifierAssert-AreEqual lock $container.ImmutabilityPolicy.UpdateHistory[1].UpdateAssert-AreEqual $immutabilityPeriod $container.ImmutabilityPolicy.UpdateHistory[1].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[1].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[1].ObjectIdentifierAssert-AreEqual extend $container.ImmutabilityPolicy.UpdateHistory[2].UpdateAssert-AreEqual $immutabilityPeriod2 $container.ImmutabilityPolicy.UpdateHistory[2].ImmutabilityPeriodSinceCreationInDaysAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[2].TimestampAssert-AreNotEqual $null $container.ImmutabilityPolicy.UpdateHistory[2].ObjectIdentifierRemove-AzRmStorageContainer -Force -StorageAccount $stos -Name $containerName$containers = Get-AzRmStorageContainer -StorageAccount $stosAssert-AreEqual 0 $containers.CountRemove-AzStorageAccount -Force -ResourceGroupName $rgname -Name $stoname;}finally{Clean-ResourceGroup $rgname}}function Test-StorageBlobServiceProperties{$rgname = Get-StorageManagementTestResourceName;try{$stoname = 'sto' + $rgname;$stotype = 'Standard_GRS';$loc = Get-ProviderLocation ResourceManagement;$kind = 'StorageV2'Write-Verbose "RGName: $rgname | Loc: $loc"New-AzResourceGroup -Name $rgname -Location $loc;New-AzStorageAccount -ResourceGroupName $rgname -Name $stoname -Location $loc -Type $stotype -Kind $kind $stos = Get-AzStorageAccount -ResourceGroupName $rgname;$property = Update-AzStorageBlobServiceProperty -ResourceGroupName $rgname -StorageAccountName $stoname -DefaultServiceVersion 2018-03-28 Assert-AreEqual '2018-03-28' $property.DefaultServiceVersion$property = Get-AzStorageBlobServiceProperty -ResourceGroupName $rgname -StorageAccountName $stonameAssert-AreEqual '2018-03-28' $property.DefaultServiceVersion$policy = Enable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName $rgname -StorageAccountName $stoname -PassThru -RetentionDays 3Assert-AreEqual $true $policy.EnabledAssert-AreEqual 3 $policy.Days$property = Get-AzStorageBlobServiceProperty -ResourceGroupName $rgname -StorageAccountName $stonameAssert-AreEqual '2018-03-28' $property.DefaultServiceVersionAssert-AreEqual $true $property.DeleteRetentionPolicy.EnabledAssert-AreEqual 3 $property.DeleteRetentionPolicy.Days$policy = Disable-AzStorageBlobDeleteRetentionPolicy -ResourceGroupName $rgname -StorageAccountName $stoname -PassThruAssert-AreEqual $false $policy.EnabledAssert-AreEqual $null $policy.Days$property = Get-AzStorageBlobServiceProperty -ResourceGroupName $rgname -StorageAccountName $stonameAssert-AreEqual '2018-03-28' $property.DefaultServiceVersionAssert-AreEqual $false $property.DeleteRetentionPolicy.EnabledAssert-AreEqual $null $property.DeleteRetentionPolicy.DaysRemove-AzStorageAccount -Force -ResourceGroupName $rgname -Name $stoname;}finally{Clean-ResourceGroup $rgname}}