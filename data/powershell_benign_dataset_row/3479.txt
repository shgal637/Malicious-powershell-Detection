function Test-CreateSqlVirtualMachineGroup{$location = Get-LocationForTest$rg = Create-ResourceGroupForTest $location$groupName = Get-SqlVirtualMachineGroupName$previousErrorActionPreferenceValue = $ErrorActionPreference$ErrorActionPreference = "SilentlyContinue"try {$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $locationAssert-NotNull $groupAssert-AreEqual $group.Name $groupNameAssert-AreEqual $group.ResourceGroupName $rg.ResourceGroupName}finally{Remove-ResourceGroupForTest $rg$ErrorActionPreference = $previousErrorActionPreferenceValue}}function Test-GetSqlVirtualMachineGroup{$location = Get-LocationForTest$rg = Create-ResourceGroupForTest $location$groupName = Get-SqlVirtualMachineGroupName$previousErrorActionPreferenceValue = $ErrorActionPreference$ErrorActionPreference = "SilentlyContinue"try {$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $location$group1 = Get-AzSqlVMGroup -ResourceGroupName $group.ResourceGroupName -Name $groupNameValidate-SqlVirtualMachineGroup $group $group1$group1 = Get-AzSqlVMGroup -ResourceId $group.ResourceIdValidate-SqlVirtualMachineGroup $group $group1$groupList = Get-AzSqlVMGroup -ResourceGroupName $group.ResourceGroupNameAssert-True {$group.Name -in $groupList.Name}}finally{Remove-ResourceGroupForTest $rg$ErrorActionPreference = $previousErrorActionPreferenceValue}}function Test-UpdateSqlVirtualMachineGroup{$location = Get-LocationForTest$rg = Create-ResourceGroupForTest $location$groupName = Get-SqlVirtualMachineGroupName$previousErrorActionPreferenceValue = $ErrorActionPreference$ErrorActionPreference = "SilentlyContinue"try {$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $locationAssert-NotNull $group$key = 'key'$value = 'value'$tags = @{$key=$value}$group1 = Update-AzSqlVMGroup -InputObject $group -Tag $tags$group1 = Get-AzSqlVMGroup -ResourceGroupName $rg.ResourceGroupName -Name $groupNameValidate-SqlVirtualMachineGroup $group $group1Assert-NotNull $group1.TagsAssert-AreEqual $group1.Tags.count 1Assert-AreEqual $group1.Tags[$key] $value}finally{Remove-ResourceGroupForTest $rg$ErrorActionPreference = $previousErrorActionPreferenceValue}}function Test-RemoveSqlVirtualMachineGroup{$location = Get-LocationForTest$rg = Create-ResourceGroupForTest $location$groupName = Get-SqlVirtualMachineGroupName$previousErrorActionPreferenceValue = $ErrorActionPreference$ErrorActionPreference = "SilentlyContinue"try {$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $locationRemove-AzSqlVMGroup -ResourceGroupName $group.ResourceGroupName -Name $group.Name$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $locationRemove-AzSqlVMGroup -ResourceId $group.ResourceId$group = Create-SqlVMGroup $rg.ResourceGroupName $groupName $locationRemove-AzSqlVMGroup -InputObject $group$groupList = Get-AzSqlVMGroup -ResourceGroupName $group.ResourceGroupNameAssert-False {$group.Name -in $groupList.Name}}finally{Remove-ResourceGroupForTest $rg$ErrorActionPreference = $previousErrorActionPreferenceValue}}