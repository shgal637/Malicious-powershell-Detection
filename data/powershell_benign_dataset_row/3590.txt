$clusterName = Get-ClusterName$resourceGroupName = Get-ResourceGroupName$appTypeName = Get-AppTypeName$v1 = Get-AppTypeV1Name$v2 = Get-AppTypeV2Name$packageV1 = Get-AppPackageV1$packageV2 = Get-AppPackageV2$serviceTypeName = Get-ServiceTypeNamefunction Test-AppType{$appType = Get-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterNameAssert-Null $appType$appType = New-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -VerboseAssert-AreEqual  "Succeeded" $appType.ProvisioningState$appTypeFromGet = Get-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeNameAssert-NotNull $appTypeFromGetAssert-AreEqual $appType.Id $appTypeFromGet.Id$removeResponse = Remove-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Force -PassThru -VerboseAssert-True { $removeResponse }Assert-ThrowsContains { Get-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName } "NotFound"}function Test-AppTypeVersion{$appTypeVersion = Get-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeNameAssert-Null $appTypeVersion$appTypeVersion = New-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Version $v1 -PackageUrl $packageV1 -VerboseAssert-AreEqual "Succeeded" $appTypeVersion.ProvisioningState$appTypeVersionFromGet = Get-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Version $v1Assert-NotNull $appTypeVersionFromGetAssert-AreEqual $appTypeVersion.Id $appTypeVersionFromGet.Id$removeResponse = Remove-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Version $v1 -Force -PassThru -VerboseAssert-True { $removeResponse }$removeResponse = Remove-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Force -PassThru -VerboseAssert-True { $removeResponse }Assert-ThrowsContains { Get-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Version $v1 } "NotFound"}function Test-App{$appName = getAssetName "testApp"$serviceName = getAssetName "testService"$serviceName = "$($appName)~$($serviceName)"$app = Get-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterNameAssert-Null $app$app = New-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationTypeName $appTypeName -ApplicationTypeVersion $v1 -Name $appName -PackageUrl $packageV1 -VerboseAssert-AreEqual "Succeeded" $app.ProvisioningState$appFromGet = Get-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appNameAssert-NotNull $appFromGetAssert-AreEqual $app.Id $appFromGet.Id$service = New-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Stateless -InstanceCount -1 -ApplicationName $appName -Name $serviceName -Type $serviceTypeName -PartitionSchemeSingleton -VerboseAssert-AreEqual "Succeeded" $service.ProvisioningState$appTypeVersion = New-AzServiceFabricApplicationTypeVersion -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Version $v2 -PackageUrl $packageV2 -VerboseAssert-AreEqual "Succeeded" $appTypeVersion.ProvisioningState$app = Update-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appName -ApplicationTypeVersion $v2 `-ApplicationParameter @{Mode="decimal"} -HealthCheckStableDurationSec 0 -HealthCheckWaitDurationSec 0 -HealthCheckRetryTimeoutSec 0 `-UpgradeDomainTimeoutSec 5000 -UpgradeTimeoutSec 7000 -FailureAction Rollback -UpgradeReplicaSetCheckTimeoutSec 300 -ForceRestart -VerboseAssert-AreEqual "Succeeded" $app.ProvisioningStateAssert-AreEqual $v2 $app.TypeVersionAssert-AreEqual "decimal" $app.Parameters["Mode"]Assert-True { $app.UpgradePolicy.ForceRestart }Assert-AreEqual "00:05:00" $app.UpgradePolicy.UpgradeReplicaSetCheckTimeoutAssert-AreEqual "01:56:40" $app.UpgradePolicy.RollingUpgradeMonitoringPolicy.UpgradeTimeoutAssert-AreEqual "01:23:20" $app.UpgradePolicy.RollingUpgradeMonitoringPolicy.UpgradeDomainTimeoutAssert-AreEqual "Rollback" $app.UpgradePolicy.RollingUpgradeMonitoringPolicy.FailureAction$app = Update-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appName -MinimumNodeCount 1 -MaximumNodeCount 4 -VerboseAssert-AreEqual 1 $app.MinimumNodesAssert-AreEqual 4 $app.MaximumNodes$removeResponse = Remove-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appName -Force -PassThru -VerboseAssert-True { $removeResponse }$removeResponse = Remove-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Force -PassThru -VerboseAssert-True { $removeResponse }Assert-ThrowsContains { Get-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appName } "NotFound"}function Test-Service{$appName = getAssetName "testApp"$serviceName = getAssetName "testService"$serviceName = "$($appName)~$($serviceName)"$app = New-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationTypeName $appTypeName -ApplicationTypeVersion $v1 -Name $appName -PackageUrl $packageV1 -VerboseAssert-AreEqual "Succeeded" $app.ProvisioningState$service = Get-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appNameAssert-Null $service$service = New-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Stateless -InstanceCount -1 -ApplicationName $appName -Name $serviceName -Type $serviceTypeName -PartitionSchemeSingleton -VerboseAssert-AreEqual "Succeeded" $service.ProvisioningState$serviceFromGet = Get-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -Name $serviceNameAssert-NotNull $serviceFromGetAssert-AreEqual $service.Id $serviceFromGet.Id$removeResponse = Remove-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -Name $serviceName -Force -PassThru -VerboseAssert-True { $removeResponse }$removeRespoetnse = Remove-AzServiceFabricApplication -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appName -Force -PassThru -VerboseAssert-True { $removeResponse }$removeResponse = Remove-AzServiceFabricApplicationType -ResourceGroupName $resourceGroupName -ClusterName $clusterName -Name $appTypeName -Force -PassThru -VerboseAssert-True { $removeResponse }Assert-ThrowsContains { Get-AzServiceFabricService -ResourceGroupName $resourceGroupName -ClusterName $clusterName -ApplicationName $appName -Name $serviceName } "NotFound"}