function Test-AccountCrud{$resourceGroup = TestSetup-CreateResourceGrouptry{$AccountName = getAssetName$tags = @{"tag1" = "value1"; "tag2" = "value2"}$AccountLocation = Get-Location "Microsoft.DataShare" "accounts" "WEST US"$createdAccount = New-AzDataShareAccount -Name $AccountName -ResourceGroupName $resourceGroup.ResourceGroupName -Location $AccountLocation -Tag $tagsAssert-NotNull $createdAccountAssert-AreEqual $AccountName $createdAccount.NameAssert-AreEqual $AccountLocation $createdAccount.locationAssert-Tags $tags $createdAccount.tagsAssert-AreEqual "Succeeded" $createdAccount.ProvisioningState$retrievedAccount = Get-AzDataShareAccount -Name $AccountName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedAccountAssert-AreEqual $AccountName $retrievedAccount.NameAssert-AreEqual $AccountLocation $retrievedAccount.locationAssert-AreEqual "Succeeded" $retrievedAccount.ProvisioningState$removed = Remove-AzDataShareAccount -Name $AccountName -ResourceGroupName $resourceGroup.ResourceGroupName -PassThru -ForceAssert-True { $removed }Assert-ThrowsContains { Get-AzDataShareAccount -Name $AccountName -ResourceGroupName $resourceGroup.ResourceGroupName } "Resource 'sdktestingshareaccount9776' does not exist"}finally{Remove-AzResourceGroup -Name $resourceGroup.ResourceGroupName -Force}}