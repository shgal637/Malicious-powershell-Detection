function Test-CreateJobStep{$a1 = Create-ElasticJobAgentTestEnvironmenttry{Test-CreateJobStepWithDefaultParam $a1Test-CreateJobStepWithParentObject $a1Test-CreateJobStepWithParentResourceId $a1Test-CreateJobStepWithPiping $a1}finally{Remove-ResourceGroupForTest $a1}}function Test-GetJobStep{$a1 = Create-ElasticJobAgentTestEnvironmenttry{Test-GetJobStepWithDefaultParam $a1Test-GetJobStepWithParentObject $a1Test-GetJobStepWithParentResourceId $a1Test-GetJobStepWithPiping $a1}finally{Remove-ResourceGroupForTest $a1}}function Test-UpdateJobStep{$a1 = Create-ElasticJobAgentTestEnvironmenttry{Test-UpdateJobStepWithDefaultParam $a1Test-UpdateJobStepWithInputObject $a1Test-UpdateJobStepWithResourceId $a1Test-UpdateJobStepWithPiping $a1}finally{Remove-ResourceGroupForTest $a1}}function Test-RemoveJobStep{$a1 = Create-ElasticJobAgentTestEnvironmenttry{Test-RemoveJobStepWithDefaultParam $a1Test-RemoveJobStepWithInputObject $a1Test-RemoveJobStepWithResourceId $a1Test-RemoveJobStepWithPiping $a1}finally{Remove-ResourceGroupForTest $a1}}function Test-CreateJobStepWithDefaultParam ($a1){$db1 = $a1 | Get-AzureRmSqlDatabase$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$schemaName = Get-SchemaName$tableName = Get-TableName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ResourceGroupName $a1.ResourceGroupName -ServerName $a1.ServerName -AgentName $a1.AgentName -JobName $j1.JobName -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1Assert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.CommandText $ct1Assert-Null $js1.Output$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ResourceGroupName $a1.ResourceGroupName -ServerName $a1.ServerName -AgentName $a1.AgentName -JobName $j1.JobName -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseObject $db1 -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ResourceGroupName $a1.ResourceGroupName -ServerName $a1.ServerName -AgentName $a1.AgentName -JobName $j1.JobName -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseResourceId $db1.ResourceId -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName}function Test-CreateJobStepWithParentObject ($a1){$db1 = $a1 | Get-AzureRmSqlDatabase$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$schemaName = Get-SchemaName$tableName = Get-TableName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentObject $j1 -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1Assert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.CommandText $ct1Assert-Null $js1.Output$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentObject $j1 -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseObject $db1 -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentObject $j1 -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseResourceId $db1.ResourceId -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName}function Test-CreateJobStepWithParentResourceId ($a1){$db1 = $a1 | Get-AzureRmSqlDatabase$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$schemaName = Get-SchemaName$tableName = Get-TableName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentResourceId $j1.ResourceId -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1Assert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.CommandText $ct1Assert-Null $js1.Output$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentResourceId $j1.ResourceId -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseObject $db1 -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName$jsn1 = Get-JobStepName$js1 = Add-AzSqlElasticJobStep -ParentResourceId $j1.ResourceId -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseResourceId $db1.ResourceId -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName}function Test-CreateJobStepWithPiping ($a1){$db1 = $a1 | Get-AzureRmSqlDatabase$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$schemaName = Get-SchemaName$tableName = Get-TableName$jsn1 = Get-JobStepName$js1 = $j1 | Add-AzSqlElasticJobStep -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1Assert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.CommandText $ct1Assert-Null $js1.Output$jsn1 = Get-JobStepName$js1 = $j1 | Add-AzSqlElasticJobStep -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseObject $db1 -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName$jsn1 = Get-JobStepName$js1 = $j1 | Add-AzSqlElasticJobStep -Name $jsn1 -TargetGroupName $tg1.TargetGroupName -CredentialName $jc1.CredentialName -CommandText $ct1 -TimeoutSeconds 1000 -RetryAttempts 100 -InitialRetryIntervalSeconds 10 -MaximumRetryIntervalSeconds 1000 -RetryIntervalBackoffMultiplier 5.0 -OutputDatabaseResourceId $db1.ResourceId -OutputTableName $tableName -OutputCredentialName $jc1.CredentialName -OutputSchemaName $schemaNameAssert-AreEqual $js1.ResourceGroupName $a1.ResourceGroupNameAssert-AreEqual $js1.ServerName $a1.ServerNameAssert-AreEqual $js1.AgentName $a1.AgentNameAssert-AreEqual $js1.JobName $j1.JobNameAssert-AreEqual $js1.StepName $jsn1Assert-AreEqual $js1.TargetGroupName $tg1.TargetGroupNameAssert-AreEqual $js1.CredentialName $jc1.CredentialNameAssert-AreEqual $js1.TimeoutSeconds 1000Assert-AreEqual $js1.RetryAttempts 100Assert-AreEqual $js1.InitialRetryIntervalSeconds 10Assert-AreEqual $js1.MaximumRetryIntervalSeconds 1000Assert-AreEqual $js1.RetryIntervalBackoffMultiplier 5.0Assert-AreEqual $js1.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $js1.Output.ServerName $db1.ServerNameAssert-AreEqual $js1.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $js1.Output.SchemaName $schemaNameAssert-AreEqual $js1.Output.TableName $tableNameAssert-AreEqual $js1.Output.Credential $jc1.CredentialName}function Test-UpdateJobStepWithDefaultParam ($a1){$jc1 = Create-JobCredentialForTest $a1$jc2 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$tg2 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$ct2 = "SELECT 2"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$db1 = $a1 | Get-AzureRmSqlDatabase$schemaName = "schema1"$schemaName2 = "schema2"$tableName = "table1"$tableName2 = "table2"$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -TargetGroupName $tg2.TargetGroupNameAssert-AreEqual $resp.TargetGroupName $tg2.TargetGroupName$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -CredentialName $jc2.CredentialNameAssert-AreEqual $resp.CredentialName $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -CommandText $ct2Assert-AreEqual $resp.CommandText $ct2$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -OutputDatabaseObject $db1 -OutputSchemaName $schemaName -OutputTableName $tableName -OutputCredentialName $jc1.CredentialNameAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -OutputDatabaseResourceId $db1.ResourceIdAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -OutputSchemaName $schemaName2Assert-AreEqual $resp.Output.SchemaName $schemaName2$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -OutputTableName $tableName2Assert-AreEqual $resp.Output.TableName $tableName2$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -OutputCredentialName $jc2.CredentialNameAssert-AreEqual $resp.Output.Credential $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -RemoveOutputAssert-Null $resp.Output$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -TimeoutSeconds 100Assert-AreEqual $resp.TimeoutSeconds 100$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -RetryAttempts 1000Assert-AreEqual $resp.RetryAttempts 1000$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -InitialRetryIntervalSeconds 100Assert-AreEqual $resp.InitialRetryIntervalSeconds 100$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -MaximumRetryIntervalSeconds 1000Assert-AreEqual $resp.MaximumRetryIntervalSeconds 1000$resp = Set-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepName -RetryIntervalBackoffMultiplier 5.2Assert-AreEqual $resp.RetryIntervalBackoffMultiplier 5.2}function Test-UpdateJobStepWithInputObject ($a1){$jc1 = Create-JobCredentialForTest $a1$jc2 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$tg2 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$ct2 = "SELECT 2"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$db1 = $a1 | Get-AzureRmSqlDatabase$schemaName = "schema1"$schemaName2 = "schema2"$tableName = "table1"$tableName2 = "table2"$resp = Set-AzSqlElasticJobStep -InputObject $js1 -TargetGroupName $tg2.TargetGroupNameAssert-AreEqual $resp.TargetGroupName $tg2.TargetGroupName$resp = Set-AzSqlElasticJobStep -InputObject $js1 -CredentialName $jc2.CredentialNameAssert-AreEqual $resp.CredentialName $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -InputObject $js1 -CommandText $ct2Assert-AreEqual $resp.CommandText $ct2$resp = Set-AzSqlElasticJobStep -InputObject $js1 -OutputDatabaseObject $db1 -OutputSchemaName $schemaName -OutputTableName $tableName -OutputCredentialName $jc1.CredentialNameAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = Set-AzSqlElasticJobStep -InputObject $js1 -OutputDatabaseResourceId $db1.ResourceIdAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseName$resp = Set-AzSqlElasticJobStep -InputObject $js1 -OutputSchemaName $schemaName2Assert-AreEqual $resp.Output.SchemaName $schemaName2$resp = Set-AzSqlElasticJobStep -InputObject $js1 -OutputTableName $tableName2Assert-AreEqual $resp.Output.TableName $tableName2$resp = Set-AzSqlElasticJobStep -InputObject $js1 -OutputCredentialName $jc2.CredentialNameAssert-AreEqual $resp.Output.Credential $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -InputObject $js1 -RemoveOutputAssert-Null $resp.Output$resp = Set-AzSqlElasticJobStep -InputObject $js1 -TimeoutSeconds 100Assert-AreEqual $resp.TimeoutSeconds 100$resp = Set-AzSqlElasticJobStep -InputObject $js1 -RetryAttempts 1000Assert-AreEqual $resp.RetryAttempts 1000$resp = Set-AzSqlElasticJobStep -InputObject $js1 -InitialRetryIntervalSeconds 100Assert-AreEqual $resp.InitialRetryIntervalSeconds 100$resp = Set-AzSqlElasticJobStep -InputObject $js1 -MaximumRetryIntervalSeconds 1000Assert-AreEqual $resp.MaximumRetryIntervalSeconds 1000$resp = Set-AzSqlElasticJobStep -InputObject $js1 -RetryIntervalBackoffMultiplier 5.2Assert-AreEqual $resp.RetryIntervalBackoffMultiplier 5.2}function Test-UpdateJobStepWithResourceId ($a1){$jc1 = Create-JobCredentialForTest $a1$jc2 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$tg2 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$ct2 = "SELECT 2"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$db1 = $a1 | Get-AzureRmSqlDatabase$schemaName = "schema1"$schemaName2 = "schema2"$tableName = "table1"$tableName2 = "table2"$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -TargetGroupName $tg2.TargetGroupNameAssert-AreEqual $resp.TargetGroupName $tg2.TargetGroupName$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -CredentialName $jc2.CredentialNameAssert-AreEqual $resp.CredentialName $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -CommandText $ct2Assert-AreEqual $resp.CommandText $ct2$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -OutputDatabaseObject $db1 -OutputSchemaName $schemaName -OutputTableName $tableName -OutputCredentialName $jc1.CredentialNameAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -OutputDatabaseResourceId $db1.ResourceIdAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -OutputSchemaName $schemaName2Assert-AreEqual $resp.Output.SchemaName $schemaName2$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -OutputTableName $tableName2Assert-AreEqual $resp.Output.TableName $tableName2$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -OutputCredentialName $jc2.CredentialNameAssert-AreEqual $resp.Output.Credential $jc2.CredentialName$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -RemoveOutputAssert-Null $resp.Output$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -TimeoutSeconds 100Assert-AreEqual $resp.TimeoutSeconds 100$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -RetryAttempts 1000Assert-AreEqual $resp.RetryAttempts 1000$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -InitialRetryIntervalSeconds 100Assert-AreEqual $resp.InitialRetryIntervalSeconds 100$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -MaximumRetryIntervalSeconds 1000Assert-AreEqual $resp.MaximumRetryIntervalSeconds 1000$resp = Set-AzSqlElasticJobStep -ResourceId $js1.ResourceId -RetryIntervalBackoffMultiplier 5.2Assert-AreEqual $resp.RetryIntervalBackoffMultiplier 5.2}function Test-UpdateJobStepWithPiping ($a1){$jc1 = Create-JobCredentialForTest $a1$jc2 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$tg2 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$ct2 = "SELECT 2"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$db1 = $a1 | Get-AzureRmSqlDatabase$schemaName = "schema1"$schemaName2 = "schema2"$tableName = "table1"$tableName2 = "table2"$resp = $js1 | Set-AzSqlElasticJobStep -TargetGroupName $tg2.TargetGroupNameAssert-AreEqual $resp.TargetGroupName $tg2.TargetGroupName$resp = $js1 | Set-AzSqlElasticJobStep -CredentialName $jc2.CredentialNameAssert-AreEqual $resp.CredentialName $jc2.CredentialName$resp = $js1 | Set-AzSqlElasticJobStep -CommandText $ct2Assert-AreEqual $resp.CommandText $ct2$resp = $js1 | Set-AzSqlElasticJobStep -OutputDatabaseObject $db1 -OutputSchemaName $schemaName -OutputTableName $tableName -OutputCredentialName $jc1.CredentialNameAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = $js1 | Set-AzSqlElasticJobStep -OutputDatabaseResourceId $db1.ResourceIdAssert-AreEqual $resp.Output.ResourceGroupName $db1.ResourceGroupNameAssert-AreEqual $resp.Output.ServerName $db1.ServerNameAssert-AreEqual $resp.Output.DatabaseName $db1.DatabaseNameAssert-AreEqual $resp.Output.SchemaName $schemaNameAssert-AreEqual $resp.Output.TableName $tableNameAssert-AreEqual $resp.Output.Credential $jc1.CredentialName$resp = $js1 | Set-AzSqlElasticJobStep -OutputSchemaName $schemaName2Assert-AreEqual $resp.Output.SchemaName $schemaName2$resp = $js1 | Set-AzSqlElasticJobStep -OutputTableName $tableName2Assert-AreEqual $resp.Output.TableName $tableName2$resp = $js1 | Set-AzSqlElasticJobStep -OutputCredentialName $jc2.CredentialNameAssert-AreEqual $resp.Output.Credential $jc2.CredentialName$resp = $js1 | Set-AzSqlElasticJobStep -RemoveOutputAssert-Null $resp.Output$resp = $js1 | Set-AzSqlElasticJobStep -TimeoutSeconds 100Assert-AreEqual $resp.TimeoutSeconds 100$resp = $js1 | Set-AzSqlElasticJobStep -RetryAttempts 1000Assert-AreEqual $resp.RetryAttempts 1000$resp = $js1 | Set-AzSqlElasticJobStep -InitialRetryIntervalSeconds 100Assert-AreEqual $resp.InitialRetryIntervalSeconds 100$resp = $js1 | Set-AzSqlElasticJobStep -MaximumRetryIntervalSeconds 1000Assert-AreEqual $resp.MaximumRetryIntervalSeconds 1000$resp = $js1 | Set-AzSqlElasticJobStep -RetryIntervalBackoffMultiplier 5.2Assert-AreEqual $resp.RetryIntervalBackoffMultiplier 5.2}function Test-RemoveJobStepWithDefaultParam ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Remove-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepNameAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName}function Test-RemoveJobStepWithInputObject ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Remove-AzSqlElasticJobStep -InputObject $js1Assert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName}function Test-RemoveJobStepWithResourceId ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Remove-AzSqlElasticJobStep -ResourceId $js1.ResourceIdAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName}function Test-RemoveJobStepWithPiping ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$js2 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = $js1 | Remove-AzSqlElasticJobStepAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName$allStepsForJob = $j1 | Get-AzSqlElasticJobStep$resp = $allStepsForJob | Remove-AzSqlElasticJobStepAssert-AreEqual $resp.Count 1Assert-Throws { $j1 | Get-AzSqlElasticJobStep -Name $js1.StepName }}function Test-GetJobStepWithDefaultParam ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Get-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobName -Name $js1.StepNameAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName$resp = Get-AzSqlElasticJobStep -ResourceGroupName $js1.ResourceGroupName -ServerName $js1.ServerName -AgentName $js1.AgentName -JobName $js1.JobNameAssert-True { $resp.Count -ge 2 }}function Test-GetJobStepWithParentObject ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Get-AzSqlElasticJobStep -ParentObject $j1 -Name $js1.StepNameAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName$resp = Get-AzSqlElasticJobStep -ParentObject $j1Assert-True { $resp.Count -ge 2 }}function Test-GetJobStepWithParentResourceId ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = Get-AzSqlElasticJobStep -ParentResourceId $j1.ResourceId -Name $js1.StepNameAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName$resp = Get-AzSqlElasticJobStep -ParentResourceId $j1.ResourceIdAssert-True { $resp.Count -ge 2 }}function Test-GetJobStepWithPiping ($a1){$jc1 = Create-JobCredentialForTest $a1$tg1 = Create-TargetGroupForTest $a1$j1 = Create-JobForTest $a1$ct1 = "SELECT 1"$js1 = Create-JobStepForTest $j1 $tg1 $jc1 $ct1Create-JobStepForTest $j1 $tg1 $jc1 $ct1$resp = $j1 | Get-AzSqlElasticJobStep -Name $js1.StepNameAssert-AreEqual $resp.ResourceGroupName $js1.ResourceGroupNameAssert-AreEqual $resp.ServerName $js1.ServerNameAssert-AreEqual $resp.AgentName $js1.AgentNameAssert-AreEqual $resp.JobName $js1.JobNameAssert-AreEqual $resp.StepName $js1.StepNameAssert-AreEqual $resp.TargetGroupName $js1.TargetGroupNameAssert-AreEqual $resp.CredentialName $js1.CredentialName$resp = $j1 | Get-AzSqlElasticJobStepAssert-True { $resp.Count -ge 2 }}