Clear-Host$app = ,@()Set-Variable -Name Count -Scope Global -Value 1 -ForceSet-Variable -Name OS -Scope Global -ForceSet-Variable -Name RelativePath -Scope Global -ForceFunction RenameWindow ($Title) {Set-Variable -Name a -Scope Local -Force$a = (Get-Host).UI.RawUI$a.WindowTitle = $TitleRemove-Variable -Name a -Scope Local -Force}Function AppInstalled($Description) {Set-Variable -Name AppName -Scope Local -ForceSet-Variable -Name AppLocal -Scope Local -ForceSet-Variable -Name Desc -Scope Local -ForceSet-Variable -Name Output -Scope Local -Force$object = New-Object -TypeName PSObject$Desc = [char]34+"description like"+[char]32+[char]39+[char]37+$Description+[char]37+[char]39+[char]34$Output = wmic product where $Desc get Description$Output | ForEach-Object {$_ = $_.Trim()if(($_ -ne "Description")-and($_ -ne "")){$AppName = $_}}$AppLocal = New-Object System.Object$AppLocal | Add-Member -type NoteProperty -name Application -value $DescriptionIf ($AppName -ne $null) {$AppLocal | Add-Member -type NoteProperty -name Status -value "Installed"} else {$AppLocal | Add-Member -type NoteProperty -name Status -value "Not Installed"}$Global:app += $AppLocal$AppLocal | Select Application$Global:Count++Remove-Variable -Name AppName -Scope Local -ForceRemove-Variable -Name AppLocal -Scope Local -ForceRemove-Variable -Name Desc -Scope Local -ForceRemove-Variable -Name Output -Scope Local -Force}clsWrite-Host "Processing Applications"Write-HostRenameWindow "Check Build Installs"AppInstalled "Dell Client System Update"AppInstalled "Adobe Reader"AppInstalled "Microsoft Lync"AppInstalled "Remote Desktop"AppInstalled "Interactive Admin"AppInstalled "RunAs Admin"AppInstalled "Windows Backup"clsWrite-Host "Installation Report"Write-Host$app | Format-Table$app.Clear()Remove-Variable -Name Count -Scope Global -ForceRemove-Variable -Name OS -Scope Global -ForceRemove-Variable -Name RelativePath -Scope Global -Force