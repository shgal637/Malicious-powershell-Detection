function Test-SetGetListUpdateRemoveActivityLogAlert{Write-Output "Starting Test-AddActivityLogAlert" $resourceGroupName = 'Default-ActivityLogAlerts'$alertName = 'andy0307rule'$location = 'Global'try{Write-Verbose " ****** Creating a new LeafCondition object"$condition1 = New-AzActivityLogAlertCondition -Field 'field1' -Equal 'equals1'Assert-NotNull $condition1Assert-AreEqual 'field1' $condition1.FieldAssert-AreEqual 'equals1' $condition1.Equals$condition2 = New-AzActivityLogAlertCondition -Field 'field2' -Equal 'equals2'Assert-NotNull $condition1Assert-AreEqual 'field1' $condition1.FieldAssert-AreEqual 'equals1' $condition1.EqualsWrite-Verbose " ****** Creating a new ActionGroup object"$dict = New-Object "System.Collections.Generic.Dictionary``2[System.String,System.String]"$dict.Add('key1', 'value1')Assert-NotNull $dict$actionGrp1 = New-AzActionGroup -ActionGroupId 'actiongr1' -WebhookProperty $dictAssert-NotNull $actionGrp1Assert-AreEqual 'actiongr1' $actionGrp1.ActionGroupIdAssert-NotNull $actionGrp1.WebhookPropertiesAssert-AreEqual 'value1' $actionGrp1.WebhookProperties['key1']Write-Verbose " ****** Creating a new ActivityLogAlert"$actual = Set-AzActivityLogAlert -Location $location -Name $alertName -ResourceGroupName $resourceGroupName -Scope 'scope1','scope2' -Action $actionGrp1 -Condition $condition1Assert-NotNull $actualAssert-AreEqual $alertName $actual.NameAssert-AreEqual $location $actual.LocationAssert-AreEqual 1 $actual.Actions.LengthAssert-AreEqual 1 $actual.Condition.LengthWrite-Verbose " ****** Getting the ActivityLogAlerts by subscriptionId"$retrievedSubId = Get-AzActivityLogAlertAssert-NotNull $retrievedSubIdAssert-AreEqual 2 $retrievedSubId.LengthAssert-AreEqual $alertName $retrievedSubId[0].NameAssert-AreEqual $location $retrievedSubId[0].LocationWrite-Verbose " ****** Getting the ActivityLogAlerts by resource group"$retrievedRg = Get-AzActivityLogAlert -ResourceGroup $resourceGroupNameAssert-NotNull $retrievedRgAssert-AreEqual 1 $retrievedRg.LengthAssert-AreEqual $alertName $retrievedRg[0].NameAssert-AreEqual $location $retrievedRg[0].LocationWrite-Verbose " ****** Getting the ActivityLogAlerts by name"$retrieved = Get-AzActivityLogAlert -ResourceGroup $resourceGroupName -Name $alertNameAssert-NotNull $retrievedAssert-AreEqual 1 $retrieved.LengthAssert-AreEqual $alertName $retrieved[0].NameWrite-Verbose " ****** Creating a new Tags object"$dict = New-Object "System.Collections.Generic.Dictionary``2[System.String,System.String]"$dict.Add('key1', 'value1')Assert-NotNull $dictWrite-Verbose " ****** Patching the ActivityLogAlert"Assert-ThrowsContains {$updated = Disable-AzActivityLogAlert -ResourceGroupName $resourceGroupName -Name $alertName -Tag $dictAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Assert-ThrowsContains {$updated = Disable-AzActivityLogAlert -InputObject $actualAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Assert-ThrowsContains {$updated = Disable-AzActivityLogAlert -ResourceId $actual.IdAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Assert-ThrowsContains {$updated = Enable-AzActivityLogAlert -ResourceGroupName $resourceGroupName -Name $alertName -Tag $dictAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Assert-ThrowsContains {$updated = Enable-AzActivityLogAlert -InputObject $actualAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Assert-ThrowsContains {$updated = Enable-AzActivityLogAlert -ResourceId $actual.IdAssert-NotNull $updatedAssert-AreEqual $alertName $updated.NameAssert-AreEqual $location $updated.LocationAssert-NotNull $updated.TagsAssert-False { $updated.Enabled }}"BadRequest"Write-Verbose " ****** NOP: setting an activity log alert using the value from the pipe (InputObject)"Get-AzActivityLogAlert -ResourceGroup $resourceGroupName -Name $alertName | Set-AzActivityLogAlertWrite-Verbose " ****** Disabling an activity log alert using the value of ResourceId plus another parameter"Set-AzActivityLogAlert -ResourceId '/subscriptions/07c0b09d-9f69-4e6e-8d05-f59f67299cb2/resourceGroups/Default-ActivityLogAlerts/providers/microsoft.insights/activityLogAlerts/andy0307rule' -DisableAlertWrite-Verbose " ****** Removing the ActivityLogAlert using pileline"Get-AzActivityLogAlert -ResourceGroup $resourceGroupName -Name $alertName | Remove-AzActivityLogAlertWrite-Verbose " ****** Removing (again) the ActivityLogAlert"Remove-AzActivityLogAlert -ResourceGroupName $resourceGroupName -Name $alertNameWrite-Verbose " ****** Removing (again) the ActivityLogAlert using ResourceId param"Remove-AzActivityLogAlert -ResourceId $actual.Id}finally{}}