function Test-StorageInsightCreateUpdateDelete{$wsname = Get-ResourceName$siname = Get-ResourceName$saname = Get-ResourceName$rgname = Get-ResourceGroupName$said = Get-StorageResourceId $rgname $saname$wslocation = Get-ProviderLocationNew-AzResourceGroup -Name $rgname -Location $wslocation -Force$workspace = New-AzOperationalInsightsWorkspace -ResourceGroupName $rgname -Name $wsname -Location $wslocation -Sku "STANDARD" -Force$storageinsight = New-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $siname -Tables @("WADWindowsEventLogsTable", "LinuxSyslogVer2v0") -Containers @("wad-iis-logfiles") -StorageAccountResourceId $said -StorageAccountKey "fakekey"Assert-AreEqual $siname $storageInsight.NameAssert-NotNull $storageInsight.ResourceIdAssert-AreEqual $rgname $storageInsight.ResourceGroupNameAssert-AreEqual $wsname $storageInsight.WorkspaceNameAssert-AreEqual $said $storageInsight.StorageAccountResourceIdAssert-AreEqual "OK" $storageInsight.StateAssert-AreEqualArray @("WADWindowsEventLogsTable", "LinuxSyslogVer2v0") $storageInsight.TablesAssert-AreEqualArray @("wad-iis-logfiles") $storageInsight.Containers$storageInsight = Get-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $sinameAssert-AreEqual $siname $storageInsight.NameAssert-NotNull $storageInsight.ResourceIdAssert-AreEqual $rgname $storageInsight.ResourceGroupNameAssert-AreEqual $wsname $storageInsight.WorkspaceNameAssert-AreEqual $said $storageInsight.StorageAccountResourceIdAssert-AreEqual "OK" $storageInsight.StateAssert-AreEqualArray @("WADWindowsEventLogsTable", "LinuxSyslogVer2v0") $storageInsight.TablesAssert-AreEqualArray @("wad-iis-logfiles") $storageInsight.Containers$sinametwo = Get-ResourceName$storageinsight = New-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $sinametwo -Tables @("WADWindowsEventLogsTable", "LinuxSyslogVer2v0") -StorageAccountResourceId $said -StorageAccountKey "fakekey"$storageinsights = Get-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsnameAssert-AreEqual 2 $storageinsights.CountAssert-AreEqual 1 ($storageinsights | Where {$_.Name -eq $siname}).CountAssert-AreEqual 1 ($storageinsights | Where {$_.Name -eq $sinametwo}).Count$storageinsights = Get-AzOperationalInsightsStorageInsight -Workspace $workspaceAssert-AreEqual 2 $storageinsights.CountAssert-AreEqual 1 ($storageinsights | Where {$_.Name -eq $siname}).CountAssert-AreEqual 1 ($storageinsights | Where {$_.Name -eq $sinametwo}).CountRemove-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $sinametwo -ForceAssert-ThrowsContains { Get-AzOperationalInsightsStorageInsight -Workspace $workspace -Name $sinametwo } "NotFound"$storageinsights = Get-AzOperationalInsightsStorageInsight -Workspace $workspaceAssert-AreEqual 1 $storageinsights.CountAssert-AreEqual 1 ($storageinsights | Where {$_.Name -eq $siname}).CountAssert-AreEqual 0 ($storageinsights | Where {$_.Name -eq $sinametwo}).Count$storageinsight = Set-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $siname -Tables @("WADWindowsEventLogsTable") -Containers @() -StorageAccountKey "anotherfakekey"Assert-AreEqualArray @("WADWindowsEventLogsTable") $storageInsight.TablesAssert-AreEqualArray @() $storageInsight.Containers$storageinsight = $storageinsight | Set-AzOperationalInsightsStorageInsight -Tables @() -Containers @("wad-iis-logfiles") -StorageAccountKey "anotherfakekey"Assert-AreEqualArray @() $storageInsight.TablesAssert-AreEqualArray @("wad-iis-logfiles") $storageInsight.Containers$storageinsight = New-AzOperationalInsightsStorageInsight -Workspace $workspace -Name $siname -Tables @("WADWindowsEventLogsTable") -Containers @("wad-iis-logfiles") -StorageAccountKey "anotherfakekey" -StorageAccountResourceId $said -ForceAssert-AreEqualArray @("WADWindowsEventLogsTable") $storageInsight.TablesAssert-AreEqualArray @("wad-iis-logfiles") $storageInsight.ContainersRemove-AzOperationalInsightsStorageInsight -Workspace $workspace -Name $siname -ForceAssert-ThrowsContains { Get-AzOperationalInsightsStorageInsight -Workspace $workspace -Name $siname } "NotFound"$storageinsights = Get-AzOperationalInsightsStorageInsight -Workspace $workspaceAssert-AreEqual 0 $storageinsights.Count}function Test-StorageInsightCreateFailsNoWs{$wsname = Get-ResourceName$siname = Get-ResourceName$saname = Get-ResourceName$rgname = Get-ResourceGroupName$said = Get-StorageResourceId $rgname $saname$wslocation = Get-ProviderLocationNew-AzResourceGroup -Name $rgname -Location $wslocation -ForceAssert-ThrowsContains { New-AzOperationalInsightsStorageInsight -ResourceGroupName $rgname -WorkspaceName $wsname -Name $siname -Tables @("WADWindowsEventLogsTable", "LinuxSyslogVer2v0") -StorageAccountResourceId $said -StorageAccountKey "fakekey" } "NotFound"}