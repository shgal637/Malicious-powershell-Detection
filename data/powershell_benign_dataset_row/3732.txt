function Test-ProfileCrud{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled" -Tags @{ ProfileTagA="firstProfileTag"; ProfileTagB="SecondProfileTag" }Assert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.Name Assert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupName Assert-AreEqual "Performance" $createdProfile.TrafficRoutingMethod$createdProfile = Add-AzTrafficManagerEndpointConfig -EndpointName "MyExternalEndpoint" -TrafficManagerProfile $createdProfile -Type "ExternalEndpoints" -Target "www.contoso.com" -EndpointStatus "Enabled" -EndpointLocation "North Europe"$createdProfile = Set-AzTrafficManagerProfile -TrafficManagerProfile $createdProfile$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "MyExternalEndpoint" $retrievedProfile.Endpoints[0].NameAssert-NotNull $retrievedProfileAssert-AreEqual $profileName $retrievedProfile.Name Assert-AreEqual $resourceGroup.ResourceGroupName $retrievedProfile.ResourceGroupNameAssert-AreEqual 2 $retrievedProfile.Tags.Count$createdProfile.TrafficRoutingMethod = "Priority"$updatedProfile = Set-AzTrafficManagerProfile -TrafficManagerProfile $createdProfileAssert-NotNull $updatedProfileAssert-AreEqual $profileName $updatedProfile.Name Assert-AreEqual $resourceGroup.ResourceGroupName $updatedProfile.ResourceGroupNameAssert-AreEqual "Priority" $updatedProfile.TrafficRoutingMethod$removed = Remove-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ForceAssert-True { $removed }Assert-Throws { Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName }}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileCrudWithPiping{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$createdProfile.TrafficRoutingMethod = "Priority"$removed = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName | Set-AzTrafficManagerProfile | Remove-AzTrafficManagerProfile -ForceAssert-True { $removed }Assert-Throws { Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } }finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-CreateDeleteUsingProfile{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"Assert-NotNull $createdProfileAssert-AreEqual $profileName $createdProfile.Name Assert-AreEqual $resourceGroup.ResourceGroupName $createdProfile.ResourceGroupName Assert-AreEqual "Performance" $createdProfile.TrafficRoutingMethodRemove-AzTrafficManagerProfile -TrafficManagerProfile $createdProfile -ForceAssert-Throws { Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } }finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-CrudWithEndpoint{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$createdEndpoint = New-AzTrafficManagerEndpoint -Name "MyExternalEndpoint" -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Type "ExternalEndpoints" -Target "www.contoso.com" -EndpointStatus "Enabled" -EndpointLocation "North Europe"$updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 1 $updatedProfile.Endpoints.Count}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-CrudWithEndpointGeo{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Geographic" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$createdEndpoint = New-AzTrafficManagerEndpoint -Name "MyExternalEndpoint" -ProfileName $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -GeoMapping "RE","RO","RU","RW" -Type "ExternalEndpoints" -Target "www.contoso.com" -EndpointStatus "Enabled" $updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 1 $updatedProfile.Endpoints.Count$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "Geographic" $retrievedProfile.TrafficRoutingMethodAssert-AreEqual 1 $retrievedProfile.Endpoints.CountAssert-AreEqual 4 $retrievedProfile.Endpoints[0].GeoMapping.CountAssert-AreEqual "RE" $retrievedProfile.Endpoints[0].GeoMapping[0]Assert-AreEqual "RO" $retrievedProfile.Endpoints[0].GeoMapping[1]Assert-AreEqual "RU" $retrievedProfile.Endpoints[0].GeoMapping[2]Assert-AreEqual "RW" $retrievedProfile.Endpoints[0].GeoMapping[3]}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ListProfilesInResourceGroup{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$profiles = Get-AzTrafficManagerProfile -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 1 $profiles.Count}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ListProfilesInSubscription{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$profiles = Get-AzTrafficManagerProfileAssert-NotNull $profiles}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ListProfilesWhereObject{$resourceGroup = TestSetup-CreateResourceGroup$profileName1 = getAssetName$relativeName1 = getAssetName$profileName2 = getAssetName$relativeName2 = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -Name $profileName1 -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName1 -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$createdProfile = New-AzTrafficManagerProfile -Name $profileName2 -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName2 -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -ProfileStatus "Enabled"$profiles = Get-AzTrafficManagerProfile -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual System.Object[] $profiles.GetType()$profile2 = $profiles | where-object {$_.Name -eq $profileName2}Assert-AreEqual $profileName2 $profile2.NameAssert-AreEqual $relativeName2 $profile2.RelativeDnsName}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileNewAlreadyExists{$resourceGroup = TestSetup-CreateResourceGroup$profileName = getAssetNametry{$createdProfile = TestSetup-CreateProfile $profileName $resourceGroup.ResourceGroupName$resourceGroupName = $createdProfile.ResourceGroupNameAssert-NotNull $createdProfileAssert-Throws { TestSetup-CreateProfile $profileName $resourceGroup.ResourceGroupName } $createdProfile | Remove-AzTrafficManagerProfile -Force}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileRemoveNonExisting{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$removed = Remove-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force Assert-False { $removed }}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileEnable{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$disabledProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Disabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp"Assert-AreEqual "Disabled" $disabledProfile.ProfileStatusAssert-True { Enable-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName }$updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "Enabled" $updatedProfile.ProfileStatus}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileEnablePipeline{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$disabledProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Disabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp"Assert-AreEqual "Disabled" $disabledProfile.ProfileStatusAssert-True { Enable-AzTrafficManagerProfile -TrafficManagerProfile $disabledProfile }$updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "Enabled" $updatedProfile.ProfileStatus}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileEnableNonExisting{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{Assert-Throws { Enable-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName } }finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileDisable{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$enabledProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Enabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" Assert-AreEqual "Enabled" $enabledProfile.ProfileStatusAssert-True { Disable-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force }$updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "Disabled" $updatedProfile.ProfileStatus}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileDisablePipeline{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$enabledProfile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Enabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" Assert-AreEqual "Enabled" $enabledProfile.ProfileStatusAssert-True { Disable-AzTrafficManagerProfile -TrafficManagerProfile $enabledProfile -Force }$updatedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual "Disabled" $updatedProfile.ProfileStatus}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileDisableNonExisting{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{Assert-Throws { Disable-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force } }finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileMonitorDefaults{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -Ttl 30 -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -TrafficRoutingMethod "Weighted" -ProfileStatus "Enabled"Assert-NotNull $createdProfileAssert-AreEqual 30 $createdProfile.MonitorIntervalInSeconds Assert-AreEqual 10 $createdProfile.MonitorTimeoutInSeconds Assert-AreEqual 3 $createdProfile.MonitorToleratedNumberOfFailures$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedProfileAssert-AreEqual 30 $retrievedProfile.MonitorIntervalInSeconds Assert-AreEqual 10 $retrievedProfile.MonitorTimeoutInSeconds Assert-AreEqual 3 $retrievedProfile.MonitorToleratedNumberOfFailuresRemove-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileMonitorCustom{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -MonitorIntervalInSeconds 10 -MonitorTimeoutInSeconds 7 -MonitorToleratedNumberOfFailures 1 -Ttl 0 -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp" -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -TrafficRoutingMethod "Weighted" -ProfileStatus "Enabled"Assert-NotNull $createdProfileAssert-AreEqual 10 $createdProfile.MonitorIntervalInSeconds Assert-AreEqual 7 $createdProfile.MonitorTimeoutInSeconds Assert-AreEqual 1 $createdProfile.MonitorToleratedNumberOfFailuresAssert-AreEqual 0 $createdProfile.Ttl$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedProfileAssert-AreEqual 10 $retrievedProfile.MonitorIntervalInSeconds Assert-AreEqual 7 $retrievedProfile.MonitorTimeoutInSeconds Assert-AreEqual 1 $retrievedProfile.MonitorToleratedNumberOfFailuresAssert-AreEqual 0 $retrievedProfile.Ttl $retrievedProfile.MonitorIntervalInSeconds = 30$retrievedProfile.MonitorTimeoutInSeconds = 8$retrievedProfile.MonitorToleratedNumberOfFailures = 0$retrievedProfile.Ttl = 5$updatedProfile = Set-AzTrafficManagerProfile -TrafficManagerProfile $retrievedProfileAssert-NotNull $updatedProfileAssert-AreEqual 30 $updatedProfile.MonitorIntervalInSeconds Assert-AreEqual 8 $updatedProfile.MonitorTimeoutInSeconds Assert-AreEqual 0 $updatedProfile.MonitorToleratedNumberOfFailuresAssert-AreEqual 5 $updatedProfile.Ttl Remove-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileMonitorProtocol{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -MonitorProtocol "TCP" -MonitorPort 8080 -Ttl 50 -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -TrafficRoutingMethod "Weighted" -ProfileStatus "Enabled"Assert-NotNull $createdProfileAssert-AreEqual "TCP" $createdProfile.MonitorProtocol Assert-AreEqual 8080 $createdProfile.MonitorPort Assert-Null $createdProfile.MonitorPath$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedProfileAssert-AreEqual "TCP" $retrievedProfile.MonitorProtocol Assert-AreEqual 8080 $retrievedProfile.MonitorPort Assert-Null $retrievedProfile.MonitorPath$retrievedProfile.MonitorPort = 81$retrievedProfile.MonitorProtocol = "HTTP"$retrievedProfile.MonitorPath = "/health.htm"$updatedProfile = Set-AzTrafficManagerProfile -TrafficManagerProfile $retrievedProfileAssert-NotNull $updatedProfileAssert-AreEqual "HTTP" $updatedProfile.MonitorProtocol Assert-AreEqual 81 $updatedProfile.MonitorPort Assert-AreEqual "/health.htm" $retrievedProfile.MonitorPath$updatedProfile.MonitorPort = 8086$updatedProfile.MonitorProtocol = "TCP"$updatedProfile.MonitorPath = $null$revertedProfile = Set-AzTrafficManagerProfile -TrafficManagerProfile $updatedProfileAssert-NotNull $revertedProfileAssert-AreEqual "TCP" $revertedProfile.MonitorProtocol Assert-AreEqual 8086 $revertedProfile.MonitorPort Assert-True { Remove-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -Force }}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-ProfileMonitorParameterAliases{$profileName = getAssetName$resourceGroup = TestSetup-CreateResourceGroup$relativeName = getAssetNametry{$createdProfile = New-AzTrafficManagerProfile -ProtocolForMonitor "HTTPS" -PortForMonitor 85 -PathForMonitor "/test" -IntervalInSecondsForMonitor 10 -TimeoutInSecondsForMonitor 9 -ToleratedNumberOfFailuresForMonitor 5 -Ttl 1 -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -RelativeDnsName $relativeName -TrafficRoutingMethod "Weighted" -ProfileStatus "Enabled"Assert-NotNull $createdProfileAssert-AreEqual "HTTPS" $createdProfile.MonitorProtocolAssert-AreEqual "85" $createdProfile.MonitorPortAssert-AreEqual "/test" $createdProfile.MonitorPathAssert-AreEqual 10 $createdProfile.MonitorIntervalInSeconds Assert-AreEqual 9 $createdProfile.MonitorTimeoutInSeconds Assert-AreEqual 5 $createdProfile.MonitorToleratedNumberOfFailuresAssert-AreEqual 1 $createdProfile.Ttl$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-NotNull $retrievedProfileAssert-AreEqual "HTTPS" $retrievedProfile.MonitorProtocolAssert-AreEqual "85" $retrievedProfile.MonitorPortAssert-AreEqual "/test" $retrievedProfile.MonitorPathAssert-AreEqual 10 $retrievedProfile.MonitorIntervalInSeconds Assert-AreEqual 9 $retrievedProfile.MonitorTimeoutInSeconds Assert-AreEqual 5 $retrievedProfile.MonitorToleratedNumberOfFailuresAssert-AreEqual 1 $retrievedProfile.Ttl}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-AddAndRemoveCustomHeadersFromProfile{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$profile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Disabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp"$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAdd-AzTrafficManagerCustomHeaderToProfile -Name "profileHeaderNameA" -Value "profileHeaderValueA" -TrafficManagerProfile $profileAdd-AzTrafficManagerCustomHeaderToProfile -Name "profileHeaderNameB" -Value "profileHeaderValueB" -TrafficManagerProfile $profileSet-AzTrafficManagerProfile -TrafficManagerProfile $profile$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 2 $retrievedProfile.CustomHeaders.CountAssert-AreEqual "profileHeaderNameA" $retrievedProfile.CustomHeaders[0].NameAssert-AreEqual "profileHeaderValueA" $retrievedProfile.CustomHeaders[0].ValueAssert-AreEqual "profileHeaderNameB" $retrievedProfile.CustomHeaders[1].NameAssert-AreEqual "profileHeaderValueB" $retrievedProfile.CustomHeaders[1].ValueAssert-True { Remove-AzTrafficManagerCustomHeaderFromProfile -Name "profileHeaderNameB"  -TrafficManagerProfile $retrievedProfile }Set-AzTrafficManagerProfile -TrafficManagerProfile $retrievedProfile$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 1 $retrievedProfile.CustomHeaders.CountAssert-AreEqual "profileHeaderNameA" $retrievedProfile.CustomHeaders[0].NameAssert-AreEqual "profileHeaderValueA" $retrievedProfile.CustomHeaders[0].Value}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}function Test-AddAndRemoveExpectedStatusCodeRanges{$profileName = getAssetName$relativeName = getAssetName$resourceGroup = TestSetup-CreateResourceGrouptry{$profile = New-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupName -ProfileStatus "Disabled" -RelativeDnsName $relativeName -Ttl 50 -TrafficRoutingMethod "Performance" -MonitorProtocol "HTTP" -MonitorPort 80 -MonitorPath "/testpath.asp"$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAdd-AzTrafficManagerExpectedStatusCodeRange -Min 200 -Max 499 -TrafficManagerProfile $profileAdd-AzTrafficManagerExpectedStatusCodeRange -Min 502 -Max 502 -TrafficManagerProfile $profileSet-AzTrafficManagerProfile -TrafficManagerProfile $profile$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 2 $retrievedProfile.ExpectedStatusCodeRanges.CountAssert-AreEqual 200 $retrievedProfile.ExpectedStatusCodeRanges[0].MinAssert-AreEqual 499 $retrievedProfile.ExpectedStatusCodeRanges[0].MaxAssert-AreEqual 502 $retrievedProfile.ExpectedStatusCodeRanges[1].MinAssert-AreEqual 502 $retrievedProfile.ExpectedStatusCodeRanges[1].MaxAssert-True { Remove-AzTrafficManagerExpectedStatusCodeRange -Min 200  -TrafficManagerProfile $retrievedProfile }Set-AzTrafficManagerProfile -TrafficManagerProfile $retrievedProfile$retrievedProfile = Get-AzTrafficManagerProfile -Name $profileName -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual 1 $retrievedProfile.ExpectedStatusCodeRanges.CountAssert-AreEqual 502 $retrievedProfile.ExpectedStatusCodeRanges[0].MinAssert-AreEqual 502 $retrievedProfile.ExpectedStatusCodeRanges[0].Max}finally{TestCleanup-RemoveResourceGroup $resourceGroup.ResourceGroupName}}