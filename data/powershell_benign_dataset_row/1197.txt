$userDomain = $env:USERDNSDOMAIN$computerDomain = Get-WmiObject 'Win32_ComputerSystem' | Select-Object -ExpandProperty Domainif( (Get-Service -Name MSMQ -ErrorAction SilentlyContinue) -and $userDomain -eq $computerDomain ){$publicQueueName = $null$privateQueueName = $nullfunction Start-TestFixture{& (Join-Path -Path $PSScriptRoot -ChildPath '..\Initialize-CarbonTest.ps1' -Resolve)}function Start-Test{$publicQueueName = 'CarbonTestQueue-Public' + [Guid]::NewGuid().ToString()$privateQueueName = 'CarbonTestQueue-Private' + [Guid]::NewGuid().ToString()Remove-TestQueues}function Stop-Test{Remove-TestQueues}function Remove-TestQueues{if( [Messaging.MessageQueue]::Exists(".\$publicQueueName") ){[Messaging.MessageQueue]::Delete(".\$publicQueueName")}if( [Messaging.MessageQueue]::Exists(".\Private`$\$privateQueueName") ){[Messaging.MessageQueue]::Delete(".\Private`$\$privateQueueName")}}function Test-ShouldInstallMessageQueue{Install-MSMQMessageQueue $publicQueueName$queue = Get-MSMQMessageQueue $publicQueueNameAssert-False $queue.Transactional }function Test-ShouldInstallPrivateQueue{Install-MSMQMessageQueue -Name $privateQueueName -Private$queue = Get-MSMQMessageQueue $privateQueueName -PrivateAssert-NotNull $queueAssert-False $queue.Transactional }function Test-ShouldMakeQueueTransactional{Install-MSMQMessageQueue -Name $publicQueueName -Transactional$queue = Get-MSMQMessageQueue $publicQueueNameAssert-NotNull $queueAssert-True $queue.Transactional}function Test-ShouldUpdateSettingsWhenInstallingExistingQueue{Install-MSMQMessageQueue -Name $publicQueueName$queue = Get-MSMQMessageQueue $publicqueueNameAssert-False $queue.TransactionalInstall-MSMQMessageQueue -Name $publicQueueName -Transactional$queue = Get-MSMQMessageQueue $publicqueueNameAssert-True $queue.Transactional}function Test-ShouldSupportWhatIf{Install-MSMQMessageQueue -Name $publicQueueName -WhatIfAssert-Null (Get-MSMQMessageQueue $publicQueueName)}}else{Write-Warning ("Tests for Get-MSMQMessageQueue not run because MSMQ is not installed or the current user's domain ({0}) and the computer's domain ({1}) are different." -f $userDomain,$computerDomain)}