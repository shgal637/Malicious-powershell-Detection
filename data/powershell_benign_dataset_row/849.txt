$resourceGroupName = "<Resource group name>"$dataFactoryName = "<Data factory name>" $storageAccountName = "<Az.Storage account name>"$storageAccountKey = "<Az.Storage account key>"$sqlServerName = "<SQL server name>"$sqlDatabaseName = "SQL Server database name"$sqlTableName = "emp" $sqlUserName = "<SQL Authentication - user name>"$sqlPassword = "<SQL Authentication - user password>"$blobFolderPath = "<Azure blob container name>/<Azure blob folder name>"$integrationRuntimeName = "<Self-hosted integration runtime name"$pipelineName = "SqlServerToBlobPipeline"$dataFactoryRegion = "East US"New-AzResourceGroup -Name $resourceGroupName -Location $dataFactoryRegion$df = Set-AzDataFactory -ResourceGroupName $resourceGroupName -Name $dataFactoryName -Location $dataFactoryRegionSet-AzDataFactoryIntegrationRuntime -Name $integrationRuntimeName -Type SelfHosted -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupNameGet-AzDataFactoryIntegrationRuntimeKey -Name $integrationRuntimeName -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName | ConvertTo-Json$storageLinkedServiceDefinition = @"{"name": "AzureStorageLinkedService","properties": {"type": "AzureStorage","typeProperties": {"connectionString": {"value": "DefaultEndpointsProtocol=https;AccountName=$storageAccountName;AccountKey=$storageAccountKey","type": "SecureString"}}}}"@$storageLinkedServiceDefinition | Out-File c:\AzureStorageLinkedService.jsonSet-AzDataFactoryLinkedService -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -Name "AzureStorageLinkedService" -File c:\AzureStorageLinkedService.json$sqlServerLinkedServiceDefinition = @"{"properties": {"type": "SqlServer","typeProperties": {"connectionString": {"type": "SecureString","value": "Server=$sqlServerName;Database=$sqlDatabaseName;User ID=$sqlUserName;Password=$sqlPassword;Timeout=60"}},"connectVia": {"type": "integrationRuntimeReference","referenceName": "$integrationRuntimeName"}},"name": "SqlServerLinkedService"}"@$sqlServerLinkedServiceDefinition | Out-File c:\SqlServerLinkedService.jsonNew-AzDataFactoryLinkedServiceEncryptCredential -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -IntegrationRuntimeName $integrationRuntimeName -File "c:\SqlServerLinkedService.json" > c:\EncryptedSqlServerLinkedService.jsonSet-AzDataFactoryLinkedService -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName "EncryptedSqlServerLinkedService" -File "c:\EncryptedSqlServerLinkedService.json"$sourceSqlServerDatasetDefiniton = @"{"properties": {"type": "SqlServerTable","typeProperties": {"tableName": "$sqlTableName"},"structure": [{"name": "ID","type": "String"},{"name": "FirstName","type": "String"},{"name": "LastName","type": "String"}],"linkedServiceName": {"referenceName": "EncryptedSqlServerLinkedService","type": "LinkedServiceReference"}},"name": "SqlServerDataset"}"@$sourceSqlServerDatasetDefiniton | Out-File c:\SqlServerDataset.jsonSet-AzDataFactoryDataset -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -Name "SqlServerDataset" -File "c:\SqlServerDataset.json"$sinkBlobDatasetDefiniton = @"{"properties": {"type": "AzureBlob","typeProperties": {"folderPath": "$blobFolderPath","format": {"type": "TextFormat"}},"linkedServiceName": {"referenceName": "AzureStorageLinkedService","type": "LinkedServiceReference"}},"name": "AzureBlobDataset"}"@$sinkBlobDatasetDefiniton | Out-File c:\AzureBlobDataset.jsonSet-AzDataFactoryDataset -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -Name "AzureBlobDataset" -File "c:\AzureBlobDataset.json"$pipelineDefinition = @"{"name": "$pipelineName","properties": {"activities": [       {"type": "Copy","typeProperties": {"source": {"type": "SqlSource"},"sink": {"type":"BlobSink"}},"name": "CopySqlServerToAzureBlobActivity","inputs": [{"referenceName": "SqlServerDataset","type": "DatasetReference"}],"outputs": [{"referenceName": "AzureBlobDataset","type": "DatasetReference"}]}]}}"@$pipelineDefinition | Out-File c:\SqlServerToBlobPipeline.jsonSet-AzDataFactoryPipeline -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -Name "$pipelineName" -File "c:\SqlServerToBlobPipeline.json"$runId = Invoke-AzDataFactoryPipeline -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -PipelineName $pipelineNamewhile ($True) {$result = Get-AzDataFactoryActivityRun -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName -PipelineRunId $runId -RunStartedAfter (Get-Date).AddMinutes(-30) -RunStartedBefore (Get-Date).AddMinutes(30)if (($result | Where-Object { $_.Status -eq "InProgress" } | Measure-Object).count -ne 0) {Write-Host "Pipeline run status: In Progress" -foregroundcolor "Yellow"Start-Sleep -Seconds 30}else {Write-Host "Pipeline $pipelineName run finished. Result:" -foregroundcolor "Yellow"$resultbreak}}$result = Get-AzDataFactoryActivityRun -DataFactoryName $dataFactoryName -ResourceGroupName $resourceGroupName `-PipelineRunId $runId `-RunStartedAfter (Get-Date).AddMinutes(-10) `-RunStartedBefore (Get-Date).AddMinutes(10) `-ErrorAction Stop$resultif ($result.Status -eq "Succeeded") {`$result.Output -join "`r`n"`}`else {`$result.Error -join "`r`n"`}