function Test-NewAzureRmSearchService{$rgname = getAssetName$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$svcName = $rgname + "-service"$sku = "Standard"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingModeAssert-NotNull $newSearchServiceAssert-AreEqual $svcName $newSearchService.Name Assert-AreEqual $sku $newSearchService.SkuAssert-AreEqual $loc $newSearchService.LocationAssert-AreEqual $partitionCount $newSearchService.PartitionCountAssert-AreEqual $replicaCount $newSearchService.ReplicaCountAssert-AreEqual $hostingMode $newSearchService.HostingMode}finally{Clean-ResourceGroup $rgname}}function Test-NewAzureRmSearchServiceBasic{$rgname = getAssetName$rgname = $rgname$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$svcName = $rgname + "-service"$sku = "Basic"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingModeAssert-NotNull $newSearchServiceAssert-AreEqual $svcName $newSearchService.Name Assert-AreEqual $sku $newSearchService.SkuAssert-AreEqual $loc $newSearchService.LocationAssert-AreEqual $partitionCount $newSearchService.PartitionCountAssert-AreEqual $replicaCount $newSearchService.ReplicaCountAssert-AreEqual $hostingMode $newSearchService.HostingMode}finally{Clean-ResourceGroup $rgname}}function Test-NewAzureRmSearchServiceL1{$rgname = getAssetName$rgname = $rgname$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$svcName = $rgname + "-service"$sku = "Storage_Optimized_L1"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingModeAssert-NotNull $newSearchServiceAssert-AreEqual $svcName $newSearchService.Name Assert-AreEqual $sku $newSearchService.SkuAssert-AreEqual $loc $newSearchService.LocationAssert-AreEqual $partitionCount $newSearchService.PartitionCountAssert-AreEqual $replicaCount $newSearchService.ReplicaCountAssert-AreEqual $hostingMode $newSearchService.HostingMode}finally{Clean-ResourceGroup $rgname}}function Test-GetAzureRmSearchService{$rgname = getAssetName$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$svcName = $rgname + "-service"$sku = "Standard"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc$retrievedSearchService1 = Get-AzSearchService -ResourceGroupName $rgname -Name $svcName$retrievedSearchService2 = Get-AzSearchService -ResourceId $newSearchService.IdAssert-NotNull $retrievedSearchService1Assert-NotNull $retrievedSearchService2Assert-AreEqual $newSearchService.Name $retrievedSearchService1.NameAssert-AreEqual $newSearchService.Name $retrievedSearchService2.NameAssert-AreEqual $newSearchService.Location $retrievedSearchService1.LocationAssert-AreEqual $newSearchService.Location $retrievedSearchService2.LocationAssert-AreEqual $sku $newSearchService.SkuAssert-AreEqual $newSearchService.Sku $retrievedSearchService1.SkuAssert-AreEqual $newSearchService.Sku $retrievedSearchService2.Sku$svcName2 = $rgname + "-service2"$newSearchService2 = New-AzSearchService -ResourceGroupName $rgname -Name $svcName2 -Sku $sku -Location $loc$allSearchServices = Get-AzSearchService -ResourceGroupName $rgnameAssert-AreEqual 2 $allSearchServices.Count}finally{Clean-ResourceGroup $rgname}}function Test-RemoveAzureRmSearchService{$rgname = getAssetName$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$sku = "Standard"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service1") -Sku $sku -Location $loc$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-NotNull $retrievedSvc$retrievedSvc | Remove-AzSearchService -Force$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-Null $retrievedSvc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service2") -Sku $sku -Location $loc$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-NotNull $retrievedSvcRemove-AzSearchService -ResourceId $retrievedSvc.Id -Force$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-Null $retrievedSvc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service3") -Sku $sku -Location $loc$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-NotNull $retrievedSvcRemove-AzSearchService -ResourceGroupName $rgname -Name $retrievedSvc.Name -Force$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-Null $retrievedSvc}finally{Clean-ResourceGroup $rgname}}function Test-SetAzureRmSearchService{$rgname = getAssetName$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$sku = "Standard"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service1") -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingMode$newSearchService | Set-AzSearchService -PartitionCount 2 -ReplicaCount 2$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-AreEqual 2 $retrievedSvc.PartitionCountAssert-AreEqual 2 $retrievedSvc.ReplicaCount$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service2") -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingModeSet-AzSearchService -ResourceId $newSearchService.Id -PartitionCount 3 -ReplicaCount 3$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-AreEqual 3 $retrievedSvc.PartitionCountAssert-AreEqual 3 $retrievedSvc.ReplicaCount$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $($rgname + "-service3") -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingModeSet-AzSearchService -ResourceGroupName $rgname -Name $newSearchService.Name -PartitionCount 2 -ReplicaCount 2$retrievedSvc = Get-AzSearchService -ResourceId $newSearchService.IdAssert-AreEqual 2 $retrievedSvc.PartitionCountAssert-AreEqual 2 $retrievedSvc.ReplicaCount}finally{Clean-ResourceGroup $rgname}}function Test-ManageAzureRmSearchServiceAdminKey{$rgname = getAssetName$svcName = $rgname + "-service"$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$sku = "Standard"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingMode$adminKeyPair1 = $newSearchService | Get-AzSearchAdminKeyPair$adminKeyPair2 = Get-AzSearchAdminKeyPair -ParentResourceId $newSearchService.Id$adminKeyPair3 = Get-AzSearchAdminKeyPair -ResourceGroupName $rgname -ServiceName $svcNameAssert-NotNull $adminKeyPair1Assert-NotNull $adminKeyPair2Assert-NotNull $adminKeyPair3Assert-AreEqual $adminKeyPair1.Primary $adminKeyPair2.PrimaryAssert-AreEqual $adminKeyPair2.Primary $adminKeyPair3.PrimaryAssert-AreEqual $adminKeyPair1.Secondary $adminKeyPair2.SecondaryAssert-AreEqual $adminKeyPair2.Secondary $adminKeyPair3.Secondary$newKeyPair1 = $newSearchService | New-AzSearchAdminKey -KeyKind Primary -Force$newKeyPair2 = New-AzSearchAdminKey -ParentResourceId $newSearchService.Id -KeyKind Secondary -Force$newKeyPair3 = New-AzSearchAdminKey -ResourceGroupName $rgname -ServiceName $svcName -KeyKind Primary -ForceAssert-NotNull $newKeyPair1Assert-AreNotEqual $newKeyPair1.Primary $adminKeyPair1.PrimaryAssert-AreEqual $newKeyPair1.Secondary $adminKeyPair1.SecondaryAssert-NotNull $newKeyPair2Assert-AreEqual $newKeyPair2.Primary $newKeyPair1.PrimaryAssert-AreNotEqual $newKeyPair2.Secondary $adminKeyPair1.SecondaryAssert-AreNotEqual $newKeyPair2.Primary $adminKeyPair1.PrimaryAssert-NotNull $newKeyPair3Assert-AreEqual $newKeyPair3.Secondary $newKeyPair2.SecondaryAssert-AreNotEqual $newKeyPair3.Secondary $adminKeyPair3.SecondaryAssert-AreNotEqual $newKeyPair3.Primary $adminKeyPair3.Primary}finally{Clean-ResourceGroup $rgname}}function Test-ManageAzureRmSearchServiceQueryKey{$rgname = getAssetName$svcName = $rgname + "-service"$loc = Get-Location -providerNamespace "Microsoft.Search" -resourceType "searchServices" -preferredLocation "West US"$sku = "Standard"$partitionCount = 1$replicaCount = 1$hostingMode = "Default"try{New-AzResourceGroup -Name $rgname -Location $loc$newSearchService = New-AzSearchService -ResourceGroupName $rgname -Name $svcName -Sku $sku -Location $loc -PartitionCount $partitionCount -ReplicaCount $replicaCount -HostingMode $hostingMode$queryKey1 = $newSearchService | Get-AzSearchQueryKey$queryKey2 = Get-AzSearchQueryKey -ParentResourceId $newSearchService.Id$queryKey3 = Get-AzSearchQueryKey -ResourceGroupName $rgname -ServiceName $svcNameAssert-NotNull $queryKey1Assert-NotNull $queryKey2Assert-NotNull $queryKey3Assert-AreEqual 1 $queryKey1.CountAssert-AreEqual $queryKey1.Count $queryKey2.CountAssert-AreEqual $queryKey2.Count $queryKey3.CountAssert-AreEqual $queryKey1[0].Name $queryKey2[0].NameAssert-AreEqual $queryKey2[0].Name $queryKey3[0].NameAssert-AreEqual $queryKey1[0].Key $queryKey2[0].KeyAssert-AreEqual $queryKey2[0].Key $queryKey3[0].Key$newQueryKey1 = $newSearchService | New-AzSearchQueryKey -Name "newquerykey1"$newQueryKey2 = New-AzSearchQueryKey -ParentResourceId $newSearchService.Id -Name "newquerykey2"$newQueryKey3 = New-AzSearchQueryKey -ResourceGroupName $rgname -ServiceName $svcName -Name "newquerykey3"$allKeys = Get-AzSearchQueryKey -ParentResourceId $newSearchService.IdAssert-AreEqual 4 $allKeys.Count$newSearchService | Remove-AzSearchQueryKey -KeyValue $newQueryKey1.Key -ForceRemove-AzSearchQueryKey -ParentResourceId $newSearchService.Id -KeyValue $newQueryKey2.Key -ForceRemove-AzSearchQueryKey -ResourceGroupName $rgname -ServiceName $svcName -KeyValue $newQueryKey3.Key -Force$allKeys = Get-AzSearchQueryKey -ParentResourceId $newSearchService.IdAssert-AreEqual 1 $allKeys.Count}finally{Clean-ResourceGroup $rgname}}