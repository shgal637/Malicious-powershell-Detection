function Test-AuthorizationEndToEnd{$roleDefinitions = Get-AzureRmRoleDefinitionAssert-True { $roleDefinitions.Count -gt 0 }$roleDefinition = Get-AzureRmRoleDefinition -Name $roleDefinitions[0].NameAssert-AreEqual $roleDefinitions[0].Name $roleDefinition.Name$roleDefinition = Get-AzureRmRoleDefinition -Name "not-there"Assert-Null $roleDefinition$rg = Get-ResourceGroupName$defaultSubscription = Get-AzureRmContext$principal = $defaultSubscription.ActiveDirectoryUserId$roleDef = $(Get-AzureRmRoleDefinition)[0].Name$expectedScope = "/subscriptions/" + $defaultSubscription.Subscription.IdGet-AzureRmRoleAssignment | Remove-AzureRmRoleAssignment$roleAssignments = Get-AzureRmRoleAssignmentAssert-AreEqual 0 $roleAssignments.Count$signInName = $defaultSubscription.Account.Id$roleAssignment = New-AzureRmRoleAssignment -SignInName $signInName -RoleDefinitionName $roleDefAssert-AreEqual $expectedScope $roleAssignment.Scope$roleAssignment | Remove-AzureRmRoleAssignmentNew-AzureRmResourceGroup -Name $rg -Location "westus" -Force$expectedScope = $expectedScope + "/resourceGroups/$rg"$roleAssignment = New-AzureRmRoleAssignment -SignInName $signInName -RoleDefinitionName $roleDef -ResourceGroup $rgAssert-AreEqual $expectedScope $roleAssignment.ScopeAssert-Throws { New-AzureRmRoleAssignment -SignInName $signInName -RoleDefinitionName $roleDef -ResourceGroup $rg }$roleAssignment | Remove-AzureRmRoleAssignmentRemove-AzureRmResourceGroup -Name $rg -Force}