function Test-CreateNewAppServicePlan{$rgname = Get-ResourceGroupName$whpName = Get-WebHostPlanName$location = Get-Location$capacity = 2$skuName = "S2"try{New-AzureRmResourceGroup -Name $rgname -Location $location$createResult = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -Location  $location -Tier "Standard" -WorkerSize Medium -NumberOfWorkers $capacityAssert-AreEqual $whpName $createResult.NameAssert-AreEqual "Standard" $createResult.Sku.TierAssert-AreEqual $skuName $createResult.Sku.NameAssert-AreEqual $capacity $createResult.Sku.Capacity$getResult = Get-AzureRmAppServicePlan -ResourceGroupName $rgname -Name $whpNameAssert-AreEqual $whpName $getResult.NameAssert-AreEqual "Standard" $getResult.Sku.TierAssert-AreEqual $skuName $getResult.Sku.NameAssert-AreEqual $capacity $getResult.Sku.Capacity}finally{Remove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -ForceRemove-AzureRmResourceGroup -Name $rgname -Force}}function Test-SetAppServicePlan{$rgname = Get-ResourceGroupName$whpName = Get-WebHostPlanName$location = Get-Location$tier = "Shared"$skuName ="D1"$capacity = 0$perSiteScaling = $false;$newTier ="Standard"$newSkuName = "S2"$newWorkerSize = "Medium"$newCapacity = 2$newPerSiteScaling = $true;try{New-AzureRmResourceGroup -Name $rgname -Location $location$actual = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -Location  $location -Tier $tier -PerSiteScaling $perSiteScaling$result = Get-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpNameAssert-AreEqual $whpName $result.NameAssert-AreEqual $capacity $result.Sku.CapacityAssert-AreEqual $tier $result.Sku.TierAssert-AreEqual $skuName $result.Sku.NameAssert-AreEqual $perSiteScaling $result.PerSiteScaling$newresult = Set-AzureRmAppServicePlan  -ResourceGroupName $rgname -Name  $whpName -Tier $newTier -NumberofWorkers $newCapacity -WorkerSize $newWorkerSize -PerSiteScaling $newPerSiteScalingAssert-AreEqual $whpName $newresult.NameAssert-AreEqual $newCapacity $newresult.Sku.CapacityAssert-AreEqual $newTier $newresult.Sku.TierAssert-AreEqual $newSkuName $newresult.Sku.NameAssert-AreEqual $newPerSiteScaling $newresult.PerSiteScaling$newresult.Sku.Capacity = $capacity$newresult.Sku.Tier = $tier$newresult.Sku.Name = $skuName$newresult.PerSiteScaling = $perSiteScaling$newresult | Set-AzureRmAppServicePlan$newresult = Get-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpNameAssert-AreEqual $whpName $newresult.NameAssert-AreEqual $capacity $newresult.Sku.CapacityAssert-AreEqual $tier $newresult.Sku.TierAssert-AreEqual $skuName $newresult.Sku.NameAssert-AreEqual $perSiteScaling $newresult.PerSiteScaling}finally{Remove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -ForceRemove-AzureRmResourceGroup -Name $rgname -Force}}function Test-GetAppServicePlan{$rgname = Get-ResourceGroupName$apiversion = "2015-08-01"$resourceType = "Microsoft.Web/sites"$location1 = Get-Location$serverFarmName1 = Get-WebHostPlanName$tier1 = "Shared"$skuName1 ="D1"$capacity1 = 0$location2 = Get-SecondaryLocation$serverFarmName2 = Get-WebHostPlanName$tier2 ="Standard"$skuName2 = "S2"$workerSize2 = "Medium"$capacity2 = 2try{New-AzureRmResourceGroup -Name $rgname -Location $location1$serverFarm1 = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName1 -Location  $location1 -Tier $tier1Assert-AreEqual $serverFarmName1 $serverFarm1.NameAssert-AreEqual $capacity1 $serverFarm1.Sku.CapacityAssert-AreEqual $tier1 $serverFarm1.Sku.TierAssert-AreEqual $skuName1 $serverFarm1.Sku.Name$serverFarm1 = Get-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName1 Assert-AreEqual $serverFarmName1 $serverFarm1.NameAssert-AreEqual $capacity1 $serverFarm1.Sku.CapacityAssert-AreEqual $tier1 $serverFarm1.Sku.TierAssert-AreEqual $skuName1 $serverFarm1.Sku.Name$serverFarm2 = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName2 -Location  $location2 -Tier $tier2 -WorkerSize $workerSize2 -NumberofWorkers $capacity2Assert-AreEqual $serverFarmName2 $serverFarm2.NameAssert-AreEqual $capacity2 $serverFarm2.Sku.CapacityAssert-AreEqual $tier2 $serverFarm2.Sku.TierAssert-AreEqual $skuName2 $serverFarm2.Sku.Name$result = Get-AzureRmAppServicePlan -Name $serverFarmName1Assert-AreEqual 1 $result.Count$serverFarm1 = $result[0]Assert-AreEqual $serverFarmName1 $serverFarm1.NameAssert-AreEqual $capacity1 $serverFarm1.Sku.CapacityAssert-AreEqual $tier1 $serverFarm1.Sku.TierAssert-AreEqual $skuName1 $serverFarm1.Sku.Name$result = Get-AzureRmAppServicePlanAssert-True { $result.Count -ge 2 }$result = Get-AzureRmAppServicePlan -Location $location1 | Select -expand Name Assert-True { $result -contains $serverFarmName1 }Assert-False { $result -contains $serverFarmName2 }$result = Get-AzureRmAppServicePlan -ResourceGroupName $rgname | Select -expand NameAssert-AreEqual 2 $result.CountAssert-True { $result -contains $serverFarmName1 }Assert-True { $result -contains $serverFarmName2 }}finally{Remove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName1 -ForceRemove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName2 -ForceRemove-AzureRmResourceGroup -Name $rgname -Force}}function Test-RemoveAppServicePlan{$rgname = Get-ResourceGroupName$serverFarmName = Get-WebHostPlanName$location = Get-Location$capacity = 0$skuName = "D1"$tier = "Shared"try{New-AzureRmResourceGroup -Name $rgname -Location $location$serverFarm = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $serverFarmName -Location  $location -Tier $tierAssert-AreEqual $serverFarmName $serverFarm.NameAssert-AreEqual $tier $serverFarm.Sku.TierAssert-AreEqual $skuName $serverFarm.Sku.NameAssert-AreEqual $capacity $serverFarm.Sku.Capacity$serverFarm | Remove-AzureRmAppServicePlan -Force$result = Get-AzureRmAppServicePlan -ResourceGroupName $rgnameAssert-AreEqual 0 $result.Count }finally{Remove-AzureRmResourceGroup -Name $rgname -Force}}function Test-GetAppServicePlanMetrics{$rgname = Get-ResourceGroupName$location = Get-Location$appServicePlanName = Get-WebHostPlanName$tier = "Standard"$apiversion = "2015-08-01"$resourceType = "Microsoft.Web/sites"try{New-AzureRmResourceGroup -Name $rgname -Location $location$serverFarm = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $appServicePlanName -Location  $location -Tier $tier$endTime = Get-Date$startTime = $endTime.AddHours(-3)$metricnames = @('CPU', 'Requests')$metrics = Get-AzureRmAppServicePlanMetrics -ResourceGroupName $rgname -Name $appServicePlanName -Metrics $metricnames -StartTime $startTime -EndTime $endTime -Granularity PT1M$actualMetricNames = $metrics | Select -Expand Name | Select -Expand Value foreach ($i in $metricsnames){Assert-True { $actualMetricsNames -contains $i}}$metrics = $serverFarm | Get-AzureRmAppServicePlanMetrics -Metrics $metricnames -StartTime $startTime -EndTime $endTime -Granularity PT1M$actualMetricNames = $metrics | Select -Expand Name | Select -Expand Value foreach ($i in $metricsnames){Assert-True { $actualMetricsNames -contains $i}}}finally{Remove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $appServicePlanName -ForceRemove-AzureRmResourceGroup -Name $rgname -Force}}function Test-CreateNewAppServicePlanInAse{$rgname = Get-ResourceGroupName$whpName = Get-WebHostPlanName$location = "West US"$capacity = 1$skuName = "S2"$aseName = "asedemo"$aseResourceGroupName = "appdemorg"try{New-AzureRmResourceGroup -Name $rgname -Location $location$createResult = New-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -Location  $location -Tier "Standard" -WorkerSize Medium -NumberOfWorkers $capacity -AseName $aseName -AseResourceGroupName $aseResourceGroupNameAssert-AreEqual $whpName $createResult.NameAssert-AreEqual "Standard" $createResult.Sku.TierAssert-AreEqual $skuName $createResult.Sku.NameAssert-AreEqual $capacity $createResult.Sku.Capacity$getResult = Get-AzureRmAppServicePlan -ResourceGroupName $rgname -Name $whpNameAssert-AreEqual $whpName $getResult.NameAssert-AreEqual "Standard" $getResult.Sku.TierAssert-AreEqual $skuName $getResult.Sku.NameAssert-AreEqual $capacity $getResult.Sku.Capacity}finally{Remove-AzureRmAppServicePlan -ResourceGroupName $rgname -Name  $whpName -ForceRemove-AzureRmResourceGroup -Name $rgname -Force}}