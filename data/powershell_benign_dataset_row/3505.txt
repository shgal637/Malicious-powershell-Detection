function Test-GetApplicationInsightsContinuousExport{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dummySubId = "50359d91-7b9d-4823-85af-eb298a61ba97";$dummyStorageAccount = "dummysa";$dummyContainer = "dummycontianer";$destinatinStorageAccountId = "/subscriptions/" + $dummySubId + "/resourceGroups/" + $rgname + "/providers/Microsoft.Storage/storageAccounts/"+ $dummyStorageAccount;$destinationStorageAccountSASToken = "https://"+ $dummyStorageAccount + ".blob.core.windows.net/"+$dummyContainer + "?sv=2015-04-05&sr=c&sig=xxxxxxxxx";$documentTypes = @("Request", "Custom Event");$continuousExport = New-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -DocumentType $documentTypes -StorageAccountId $destinatinStorageAccountId -StorageLocation $loc -StorageSASUri $destinationStorageAccountSASToken;$continuousExport2 = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId;Assert-NotNull $continuousExport2        Assert-AreEqual "Request, Custom Event" $continuousExport2.DocumentTypesAssert-AreEqual $dummySubId $continuousExport2.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport2.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport2.ContainerName$continuousExports = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName;Assert-AreEqual 1 $continuousExports.countAssert-AreEqual "Request, Custom Event" $continuousExports[0].DocumentTypesAssert-AreEqual $dummySubId $continuousExports[0].DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExports[0].DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExports[0].ContainerNameRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-NewApplicationInsightsContinuousExport{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dummySubId = "50359d91-7b9d-4823-85af-eb298a61ba97";$dummyStorageAccount = "dummysa";$dummyContainer = "dummycontianer";$destinatinStorageAccountId = "/subscriptions/" + $dummySubId + "/resourceGroups/" + $rgname + "/providers/Microsoft.Storage/storageAccounts/"+ $dummyStorageAccount;$destinationStorageAccountSASToken = "https://"+ $dummyStorageAccount + ".blob.core.windows.net/"+$dummyContainer + "?sv=2015-04-05&sr=c&sig=xxxxxxxxx";$documentTypes = @("Request", "Custom Event");$continuousExport = New-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -DocumentType $documentTypes -StorageAccountId $destinatinStorageAccountId -StorageLocation $loc -StorageSASUri $destinationStorageAccountSASToken;Assert-NotNull $continuousExport       Assert-AreEqual "Request, Custom Event" $continuousExport.DocumentTypesAssert-AreEqual $dummySubId $continuousExport.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport.ContainerName$continuousExport2 = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId;Assert-NotNull $continuousExport2        Assert-AreEqual "Request, Custom Event" $continuousExport2.DocumentTypesAssert-AreEqual $dummySubId $continuousExport2.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport2.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport2.ContainerNameRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-RemoveApplicationInsightsContinuousExport{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dummySubId = "50359d91-7b9d-4823-85af-eb298a61ba97";$dummyStorageAccount = "dummysa";$dummyContainer = "dummycontianer";$destinatinStorageAccountId = "/subscriptions/" + $dummySubId + "/resourceGroups/" + $rgname + "/providers/Microsoft.Storage/storageAccounts/"+ $dummyStorageAccount;$destinationStorageAccountSASToken = "https://"+ $dummyStorageAccount + ".blob.core.windows.net/"+$dummyContainer + "?sv=2015-04-05&sr=c&sig=xxxxxxxxx";$documentTypes = @("Request", "Custom Event");$continuousExport = New-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -DocumentType $documentTypes -StorageAccountId $destinatinStorageAccountId -StorageLocation $loc -StorageSASUri $destinationStorageAccountSASToken;$continuousExport2 = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId;Assert-NotNull $continuousExport2        Assert-AreEqual "Request, Custom Event" $continuousExport2.DocumentTypesAssert-AreEqual $dummySubId $continuousExport2.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport2.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport2.ContainerNameRemove-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId;$continuousExports = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName;Assert-AreEqual 0 $continuousExports.count;Remove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-SetApplicationInsightsContinuousExport{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dummySubId = "50359d91-7b9d-4823-85af-eb298a61ba97";$dummyStorageAccount = "dummysa";$dummyContainer = "dummycontianer";$destinatinStorageAccountId = "/subscriptions/" + $dummySubId + "/resourceGroups/" + $rgname + "/providers/Microsoft.Storage/storageAccounts/"+ $dummyStorageAccount;$destinationStorageAccountSASToken = "https://"+ $dummyStorageAccount + ".blob.core.windows.net/"+$dummyContainer + "?sv=2015-04-05&sr=c&sig=xxxxxxxxx";$documentTypes = @("Request", "Custom Event");$continuousExport = New-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -DocumentType $documentTypes -StorageAccountId $destinatinStorageAccountId -StorageLocation $loc -StorageSASUri $destinationStorageAccountSASToken;$continuousExport2 = Get-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId;Assert-NotNull $continuousExport2        Assert-AreEqual "Request, Custom Event" $continuousExport2.DocumentTypesAssert-AreEqual $dummySubId $continuousExport2.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport2.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport2.ContainerName$documentTypes = @("Request", "Custom Event", "Exception");$continuousExport3 = Set-AzApplicationInsightsContinuousExport -ResourceGroupName $rgname -Name $appName -ExportId $continuousExport.ExportId -DocumentType $documentTypes -StorageAccountId $destinatinStorageAccountId -StorageLocation $loc -StorageSASUri $destinationStorageAccountSASToken;Assert-NotNull $continuousExport3        Assert-AreEqual "Request, Custom Event, Exception" $continuousExport3.DocumentTypesAssert-AreEqual $dummySubId $continuousExport3.DestinationStorageSubscriptionIdAssert-AreEqual $loc $continuousExport3.DestinationStorageLocationIdAssert-AreEqual $dummyContainer $continuousExport3.ContainerNameRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}