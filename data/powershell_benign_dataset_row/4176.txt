[CmdletBinding()]param ()function Get-Architecture {[CmdletBinding()][OutputType([string])]param ()$OSArchitecture = (Get-WmiObject -Class Win32_OperatingSystem | Select-Object OSArchitecture).OSArchitectureReturn $OSArchitecture}function Get-RelativePath {[CmdletBinding()][OutputType([string])]param ()$Path = (split-path $SCRIPT:MyInvocation.MyCommand.Path -parent) + "\"Return $Path}function Install-MSIFile {[CmdletBinding()]param([ValidateNotNullOrEmpty()]$File,[ValidateNotNullOrEmpty()][string]$Arguments)$RelativePath = Get-RelativePath$Executable = $env:windir + "\System32\msiexec.exe"$Parameters = "/i" + [char]32 + $File.Fullname + [char]32 + $ArgumentsWrite-Host "Installing"($File.Name).Trim()"....." -NoNewline$ErrCode = (Start-Process -FilePath $Executable -ArgumentList $Parameters -Wait -Passthru).ExitCodeIf (($ErrCode -eq 0) -or ($ErrCode -eq 3010)) {Write-Host "Success" -ForegroundColor YellowReturn $true} else {Write-Host "Failed" -ForegroundColor RedReturn $false}}$Architecture = Get-Architecture$RelativePath = Get-RelativePathIf ($Architecture -eq "32-bit") {$File = Get-ChildItem -Path $RelativePath -Filter *x86.msi} else {$File = Get-ChildItem -Path $RelativePath -Filter *x64.msi}$Results = Install-MSIFile -File $File -Arguments "/qb- /norestart"If ($Results -eq $true) {Install-PackageProvider nuget -Force -VerboseExit 0} else {Exit 1}Set-PSRepository -Name PSGallery -InstallationPolicy TrustedInstall-Module -Name ((Find-Module -Name DellBIOSProvider).Name) -Force -Verbose