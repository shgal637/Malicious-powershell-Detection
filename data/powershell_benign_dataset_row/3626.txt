function Test-BasicDataClassificationOnSqlManagedDatabase{$testSuffix = getAssetNameCreate-ManagedDataClassificationTestEnvironment $testSuffix$params = Get-DataClassificationManagedTestEnvironmentParameters $testSuffixtry{$recommendations = Get-AzSqlInstanceDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -InstanceName $params.serverName -DatabaseName $params.databaseNameAssert-AreEqual 0 ($recommendations.SensitivityLabels).countAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseName$recommendations = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.serverName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendation Assert-AreEqual 0 ($recommendations.SensitivityLabels).countAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseName$allClassifications = Get-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.serverName -DatabaseName $params.databaseNameAssert-AreEqual 0 ($allClassifications.SensitivityLabels).countAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName$allClassifications = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.serverName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassificationAssert-AreEqual 0 ($allClassifications.SensitivityLabels).countAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseNameGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.serverName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendation | Set-AzSqlInstanceDatabaseSensitivityClassificationGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.serverName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification | Remove-AzSqlInstanceDatabaseSensitivityClassification}finally{Remove-DataClassificationManagedTestEnvironment $testSuffix}}function Test-DataClassificationOnSqlManagedDatabase{$testSuffix = getAssetNameCreate-ManagedDataClassificationTestEnvironment $testSuffix$params = Get-DataClassificationManagedTestEnvironmentParameters $testSuffixtry{$recommendations = Get-AzSqlInstanceDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseNameAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.ServerName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseName$recommendationsCount = ($recommendations.SensitivityLabels).countAssert-AreEqual 4 $recommendationsCount$firstRecommendation = ($recommendations.SensitivityLabels)[0]$firstSchemaName = $firstRecommendation.SchemaName$firstTableName = $firstRecommendation.TableName$firstColumnName = $firstRecommendation.ColumnName$firstInformationType = $firstRecommendation.InformationType$firstSensitivityLabel = $firstRecommendation.SensitivityLabelAssert-AreEqual "dbo" $firstSchemaNameAssert-AreEqual "Persons" $firstTableNameAssert-NotNullOrEmpty $firstColumnNameAssert-NotNullOrEmpty $firstInformationTypeAssert-NotNullOrEmpty $firstSensitivityLabel$secondRecommendation = ($recommendations.SensitivityLabels)[1]$secondSchemaName = $secondRecommendation.SchemaName$secondTableName = $secondRecommendation.TableName$secondColumnName = $secondRecommendation.ColumnName$secondInformationType = $secondRecommendation.InformationType$secondSensitivityLabel = $secondRecommendation.SensitivityLabelAssert-AreEqual "dbo" $secondSchemaNameAssert-AreEqual "Persons" $secondTableNameAssert-NotNullOrEmpty $secondColumnNameAssert-NotNullOrEmpty $secondInformationTypeAssert-NotNullOrEmpty $secondSensitivityLabelSet-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseName -SchemaName $firstSchemaName -TableName $firstTableName -ColumnName $firstColumnName -InformationType $firstInformationType -SensitivityLabel $firstSensitivityLabelGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Set-AzSqlInstanceDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName -InformationType $secondInformationType -SensitivityLabel $secondSensitivityLabel$allClassifications = Get-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 2 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.ServerName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName$firstClassification = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification -SchemaName $firstSchemaName -TableName $firstTableName -ColumnName $firstColumnNameAssert-AreEqual 1 ($firstClassification.SensitivityLabels).count$classification = ($firstClassification.SensitivityLabels)[0]Assert-AreEqual $firstSchemaName $classification.SchemaNameAssert-AreEqual $firstTableName $classification.TableNameAssert-AreEqual $firstColumnName $classification.ColumnNameAssert-AreEqual $firstInformationType $classification.InformationTypeAssert-AreEqual $firstSensitivityLabel $classification.SensitivityLabel$secondClassification = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnNameAssert-AreEqual 1 ($secondClassification.SensitivityLabels).count$classification = ($secondClassification.SensitivityLabels)[0]Assert-AreEqual $secondSchemaName $classification.SchemaNameAssert-AreEqual $secondTableName $classification.TableNameAssert-AreEqual $secondColumnName $classification.ColumnNameAssert-AreEqual $secondInformationType $classification.InformationTypeAssert-AreEqual $secondSensitivityLabel $classification.SensitivityLabel$recommendations = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.ServerName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 2 ($recommendations.SensitivityLabels).countRemove-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseName -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$allClassifications = Get-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 1 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.ServerName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName$recommendations = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendationAssert-AreEqual 3 ($recommendations.SensitivityLabels).countAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.ServerName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendation | Set-AzSqlInstanceDatabaseSensitivityClassification$recommendations = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.ServerName $recommendations.InstanceNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 0 ($recommendations.SensitivityLabels).count$allClassifications = Get-AzSqlInstanceDatabaseSensitivityClassification -ResourceGroupName $params.rgname -InstanceName $params.ServerName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 4 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.ServerName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseNameGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Remove-AzSqlInstanceDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$allClassifications = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 3 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.ServerName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseNameGet-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification | Remove-AzSqlInstanceDatabaseSensitivityClassification$allClassifications = Get-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.ServerName -Name $params.databaseName | Get-AzSqlInstanceDatabaseSensitivityClassification$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 0 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.ServerName $allClassifications.InstanceNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName}finally{Remove-DataClassificationManagedTestEnvironment $testSuffix}}function Test-DataClassificationOnSqlDatabase{$testSuffix = getAssetNameCreate-SqlDataClassificationTestEnvironment $testSuffix$params = Get-DataClassificationTestEnvironmentParameters $testSuffixtry{$recommendations = Get-AzSqlDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseNameAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseName$recommendationsCount = ($recommendations.SensitivityLabels).countAssert-AreEqual 4 $recommendationsCount$firstRecommendation = ($recommendations.SensitivityLabels)[0]$firstSchemaName = $firstRecommendation.SchemaName$firstTableName = $firstRecommendation.TableName$firstColumnName = $firstRecommendation.ColumnName$firstInformationType = $firstRecommendation.InformationType$firstSensitivityLabel = $firstRecommendation.SensitivityLabelAssert-AreEqual "dbo" $firstSchemaNameAssert-AreEqual "Persons" $firstTableNameAssert-NotNullOrEmpty $firstColumnNameAssert-NotNullOrEmpty $firstInformationTypeAssert-NotNullOrEmpty $firstSensitivityLabel$secondRecommendation = ($recommendations.SensitivityLabels)[1]$secondSchemaName = $secondRecommendation.SchemaName$secondTableName = $secondRecommendation.TableName$secondColumnName = $secondRecommendation.ColumnName$secondInformationType = $secondRecommendation.InformationType$secondSensitivityLabel = $secondRecommendation.SensitivityLabelAssert-AreEqual "dbo" $secondSchemaNameAssert-AreEqual "Persons" $secondTableNameAssert-NotNullOrEmpty $secondColumnNameAssert-NotNullOrEmpty $secondInformationTypeAssert-NotNullOrEmpty $secondSensitivityLabelSet-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName -SchemaName $firstSchemaName -TableName $firstTableName -ColumnName $firstColumnName -InformationType $firstInformationType -SensitivityLabel $firstSensitivityLabelGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Set-AzSqlDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName -InformationType $secondInformationType -SensitivityLabel $secondSensitivityLabel$allClassifications = Get-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 2 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.ServerNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName$firstClassification = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityClassification -SchemaName $firstSchemaName -TableName $firstTableName -ColumnName $firstColumnNameAssert-AreEqual 1 ($firstClassification.SensitivityLabels).count$classification = ($firstClassification.SensitivityLabels)[0]Assert-AreEqual $firstSchemaName $classification.SchemaNameAssert-AreEqual $firstTableName $classification.TableNameAssert-AreEqual $firstColumnName $classification.ColumnNameAssert-AreEqual $firstInformationType $classification.InformationTypeAssert-AreEqual $firstSensitivityLabel $classification.SensitivityLabel$secondClassification = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnNameAssert-AreEqual 1 ($secondClassification.SensitivityLabels).count$classification = ($secondClassification.SensitivityLabels)[0]Assert-AreEqual $secondSchemaName $classification.SchemaNameAssert-AreEqual $secondTableName $classification.TableNameAssert-AreEqual $secondColumnName $classification.ColumnNameAssert-AreEqual $secondInformationType $classification.InformationTypeAssert-AreEqual $secondSensitivityLabel $classification.SensitivityLabel$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 2 ($recommendations.SensitivityLabels).countRemove-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$allClassifications = Get-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 1 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.ServerNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual 3 ($recommendations.SensitivityLabels).countAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendation | Set-AzSqlDatabaseSensitivityClassification$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 0 ($recommendations.SensitivityLabels).count$allClassifications = Get-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 4 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.ServerNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseNameGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Remove-AzSqlDatabaseSensitivityClassification -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$allClassifications = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityClassification$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 3 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.ServerNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseNameGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityClassification | Remove-AzSqlDatabaseSensitivityClassification$allClassifications = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityClassification$allClassificationsCount = ($allClassifications.SensitivityLabels).countAssert-AreEqual 0 $allClassificationsCountAssert-AreEqual $params.rgname $allClassifications.ResourceGroupNameAssert-AreEqual $params.serverName $allClassifications.ServerNameAssert-AreEqual $params.databaseName $allClassifications.DatabaseName}finally{Remove-DataClassificationTestEnvironment $testSuffix}}function Test-ErrorIsThrownWhenInvalidClassificationIsSet{$testSuffix = getAssetNameCreate-SqlDataClassificationTestEnvironment $testSuffix$params = Get-DataClassificationTestEnvironmentParameters $testSuffixtry{$recommendations = Get-AzSqlDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName$recommendation = ($recommendations.SensitivityLabels)[0]$schemaName = $recommendation.SchemaName$tableName = $recommendation.TableName$columnName = $recommendation.ColumnName$informationType = $recommendation.InformationType$sensitivityLabel = $recommendation.SensitivityLabel$badInformationType =  $informationType + $informationType$badInformationTypeMessage = "Information Type '" + $badinformationType + "' is not part of Information Protection Policy. Please add '" + $badinformationType + "' to the Information Protection Policy, or use one of the following: "Assert-ThrowsContains -script { Set-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName `-DatabaseName $params.databaseName -SchemaName $schemaName -TableName $tableName -ColumnName $columnName -InformationType $badInformationType `-SensitivityLabel $sensitivityLabel} -message $badInformationTypeMessage$badSensitivityLabel = $sensitivityLabel + $sensitivityLabel$badSensitivityLabelMessage = "Sensitivity Label '" + $badSensitivityLabel + "' is not part of Information Protection Policy. Please add '" + $badSensitivityLabel + "' to the Information Protection Policy, or use one of the following: "Assert-ThrowsContains -script { Set-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName `-DatabaseName $params.databaseName -SchemaName $schemaName -TableName $tableName -ColumnName $columnName -InformationType $badInformationType `-SensitivityLabel $badSensitivityLabel} -message $badSensitivityLabelMessage$message = "Value is not specified neither for InformationType parameter nor for SensitivityLabel parameter"Assert-ThrowsContains -script { Set-AzSqlDatabaseSensitivityClassification -ResourceGroupName $params.rgname -ServerName $params.serverName `-DatabaseName $params.databaseName -SchemaName $schemaName -TableName $tableName -ColumnName $columnName} -message $message}finally{Remove-DataClassificationTestEnvironment $testSuffix}}function Assert-NotNullOrEmpty ($str){Assert-NotNull $strAssert-AreNotEqual "" $str}function Get-DataClassificationTestEnvironmentParameters ($testSuffix){return @{ rgname = "dc-cmdlet-test-rg" +$testSuffix;serverName = "dc-cmdlet-server" +$testSuffix;databaseName = "dc-cmdlet-db" + $testSuffix;loginName = "testlogin";pwd = "testp@ssMakingIt1007Longer";}}function Get-DataClassificationManagedTestEnvironmentParameters ($testSuffix){return @{ rgname = "cl_one";serverName = "dc-cmdlet-server" +$testSuffix;databaseName = "dc-cmdlet-db" + $testSuffix;loginName = "testlogin";pwd = "testp@ssMakingIt1007Longer";}}function Create-ManagedDataClassificationTestEnvironment ($testSuffix, $location = "North Europe"){$params = Get-DataClassificationManagedTestEnvironmentParameters $testSuffixNew-AzureRmResourceGroup -Name $params.rgname -Location $location$vnetName = "cl_initial"$subnetName = "Cool"$virtualNetwork1 = CreateAndGetVirtualNetworkForManagedInstance $vnetName $subnetName $location$subnetId = $virtualNetwork1.Subnets.where({ $_.Name -eq $subnetName })[0].Id$credentials = Get-ServerCredential$licenseType = "BasePrice"$storageSizeInGB = 32$vCore = 16$skuName = "GP_Gen4"$collation = "SQL_Latin1_General_CP1_CI_AS"$managedInstance = New-AzSqlInstance -ResourceGroupName $params.rgname -Name $params.serverName `-Location $location -AdministratorCredential $credentials -SubnetId $subnetId `-LicenseType $licenseType -StorageSizeInGB $storageSizeInGB -Vcore $vCore -SkuName $skuNameNew-AzSqlInstanceDatabase -ResourceGroupName $params.rgname -InstanceName $params.serverName -Name $params.databaseName -Collation $collation}function Remove-DataClassificationManagedTestEnvironment ($testSuffix){$params = Get-DataClassificationManagedTestEnvironmentParameters $testSuffixRemove-AzureRmResourceGroup -Name $params.rgname -Force}function Remove-DataClassificationTestEnvironment ($testSuffix){$params = Get-DataClassificationTestEnvironmentParameters $testSuffixRemove-AzureRmResourceGroup -Name $params.rgname -Force}function Create-SqlDataClassificationTestEnvironment ($testSuffix, $location = "West Central US", $serverVersion = "12.0"){$params = Get-DataClassificationTestEnvironmentParameters $testSuffixNew-AzResourceGroup -Name $params.rgname -Location $location$password = $params.pwd$secureString = ($password | ConvertTo-SecureString -asPlainText -Force)$credentials = new-object System.Management.Automation.PSCredential($params.loginName, $secureString)New-AzSqlServer -ResourceGroupName  $params.rgname -ServerName $params.serverName -ServerVersion $serverVersion -Location $location -SqlAdministratorCredentials $credentialsNew-AzSqlServerFirewallRule -ResourceGroupName  $params.rgname -ServerName $params.serverName -StartIpAddress 0.0.0.0 -EndIpAddress 255.255.255.255 -FirewallRuleName "dcRule"New-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseNameif ([Microsoft.Azure.Test.HttpRecorder.HttpMockServer]::Mode -eq "Record"){$fullServerName = $params.serverName + ".database.windows.net"$login = $params.loginName$databaseName = $params.databaseName$connection = New-Object System.Data.SqlClient.SqlConnection$connection.ConnectionString = "Server=$fullServerName;uid=$login;pwd=$password;Database=$databaseName;Integrated Security=False;"try{$connection.Open()$command = $connection.CreateCommand()$command.CommandText = "CREATE TABLE Persons (PersonID int, LastName varchar(255), FirstName varchar(255), Address varchar(255), City varchar(255));"$command.ExecuteReader()}finally{$connection.Close()}}}function Test-EnableDisableRecommendationsOnSqlDatabase{$testSuffix = getAssetNameCreate-SqlDataClassificationTestEnvironment $testSuffix$params = Get-DataClassificationTestEnvironmentParameters $testSuffixtry{$recommendations = Get-AzSqlDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseNameAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseName$recommendationsCount = ($recommendations.SensitivityLabels).countAssert-AreEqual 4 $recommendationsCount$firstRecommendation = ($recommendations.SensitivityLabels)[0]$firstSchemaName = $firstRecommendation.SchemaName$firstTableName = $firstRecommendation.TableName$firstColumnName = $firstRecommendation.ColumnName$firstInformationType = $firstRecommendation.InformationType$firstSensitivityLabel = $firstRecommendation.SensitivityLabelAssert-AreEqual "dbo" $firstSchemaNameAssert-AreEqual "Persons" $firstTableNameAssert-NotNullOrEmpty $firstColumnNameAssert-NotNullOrEmpty $firstInformationTypeAssert-NotNullOrEmpty $firstSensitivityLabel$secondRecommendation = ($recommendations.SensitivityLabels)[1]$secondSchemaName = $secondRecommendation.SchemaName$secondTableName = $secondRecommendation.TableName$secondColumnName = $secondRecommendation.ColumnName$secondInformationType = $secondRecommendation.InformationType$secondSensitivityLabel = $secondRecommendation.SensitivityLabelAssert-AreEqual "dbo" $secondSchemaNameAssert-AreEqual "Persons" $secondTableNameAssert-NotNullOrEmpty $secondColumnNameAssert-NotNullOrEmpty $secondInformationTypeAssert-NotNullOrEmpty $secondSensitivityLabelDisable-AzSqlDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName -SchemaName $firstSchemaName -TableName $firstTableName -ColumnName $firstColumnNameGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Disable-AzSqlDatabaseSensitivityRecommendation -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 2 ($recommendations.SensitivityLabels).countAssert-AreNotEqual $firstColumnName ($recommendations.SensitivityLabels)[0].ColumnNameAssert-AreNotEqual $firstColumnName ($recommendations.SensitivityLabels)[1].ColumnNameAssert-AreNotEqual $secondColumnName ($recommendations.SensitivityLabels)[0].ColumnNameAssert-AreNotEqual $secondColumnName ($recommendations.SensitivityLabels)[1].ColumnNameEnable-AzSqlDatabaseSensitivityRecommendation -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual 3 ($recommendations.SensitivityLabels).countAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreNotEqual $firstColumnName ($recommendations.SensitivityLabels)[0].ColumnNameAssert-AreNotEqual $firstColumnName ($recommendations.SensitivityLabels)[1].ColumnNameAssert-AreNotEqual $firstColumnName ($recommendations.SensitivityLabels)[2].ColumnNameGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendation | Disable-AzSqlDatabaseSensitivityRecommendation$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 0 ($recommendations.SensitivityLabels).countGet-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Enable-AzSqlDatabaseSensitivityRecommendation -SchemaName $secondSchemaName -TableName $secondTableName -ColumnName $secondColumnName$recommendations = Get-AzSqlDatabase -ResourceGroupName $params.rgname -ServerName $params.serverName -DatabaseName $params.databaseName | Get-AzSqlDatabaseSensitivityRecommendationAssert-AreEqual $params.rgname $recommendations.ResourceGroupNameAssert-AreEqual $params.serverName $recommendations.ServerNameAssert-AreEqual $params.databaseName $recommendations.DatabaseNameAssert-AreEqual 1 ($recommendations.SensitivityLabels).count$recommendation = ($recommendations.SensitivityLabels)[0]Assert-AreEqual $secondSchemaName $recommendation.SchemaNameAssert-AreEqual $secondTableName $recommendation.TableNameAssert-AreEqual $secondColumnName $recommendation.ColumnNameAssert-NotNullOrEmpty $recommendation.InformationTypeAssert-NotNullOrEmpty $recommendation.SensitivityLabel}finally{Remove-DataClassificationTestEnvironment $testSuffix}}