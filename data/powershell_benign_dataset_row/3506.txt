function Test-GetApplicationInsightsPricingPlan{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$pricingPlan = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludePricingPlan;Assert-NotNull $pricingPlanAssert-AreEqual "Basic" $pricingPlan.PricingPlanRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-SetApplicationInsightsPricingPlan{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$pricingPlan = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludePricingPlan;Assert-NotNull $pricingPlanAssert-AreEqual "Basic" $pricingPlan.PricingPlan$planName = "Application Insights Enterprise";$dailyCapGB = 300;		$stopSendEmail = $True;Set-AzApplicationInsightsPricingPlan -ResourceGroupName $rgname -Name $appName -PricingPlan $planName -DailyCapGB $dailyCapGB -DisableNotificationWhenHitCap;$pricingPlan2 = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludePricingPlan;Assert-NotNull $pricingPlan2Assert-AreEqual $planName $pricingPlan2.PricingPlanAssert-AreEqual $dailyCapGB $pricingPlan2.CapAssert-AreEqual $stopSendEmail $pricingPlan2.StopSendNotificationWhenHitCapRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-GetApplicationInsightsDailyCap{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dailyCap = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludePricingPlan;Assert-NotNull $dailyCapAssert-AreEqual 100 $dailyCap.CapAssert-AreEqual $False $dailyCap.StopSendNotificationWhenHitCapRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-SetApplicationInsightsDailyCap{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dailyCapGB = 300;$stopSendEmail = $True;Set-AzApplicationInsightsDailyCap -ResourceGroupName $rgname -Name $appName -DailyCapGB $dailyCapGB -DisableNotificationWhenHitCap;$dailyCapInfo = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludePricingPlan;Assert-NotNull $dailyCapInfo        Assert-AreEqual $dailyCapGB $dailyCapInfo.CapAssert-AreEqual $stopSendEmail $dailyCapInfo.StopSendNotificationWhenHitCapRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}function Test-GetApplicationInsightsDailyCapStatus{$rgname = Get-ApplicationInsightsTestResourceName;try{$appName = "app" + $rgname;$loc = Get-ProviderLocation ResourceManagement;$kind = "web";New-AzResourceGroup -Name $rgname -Location $loc;New-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -Location $loc -Kind $kind;$dailyCapStatus = Get-AzApplicationInsights -ResourceGroupName $rgname -Name $appName -IncludeDailyCapStatus;Assert-NotNull $dailyCapStatusAssert-AreEqual $False $dailyCapStatus.IsCappedRemove-AzApplicationInsights -ResourceGroupName $rgname -Name $appName;}finally{Clean-ResourceGroup $rgname}}