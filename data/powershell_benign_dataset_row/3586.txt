function Test-SpatialAnchorsAccountOperations{$resourceGroup = TestSetup-CreateResourceGroup$resourceLocation = "EastUS2"$accountName = getAssetName$createdAccount = New-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Location $resourceLocationAssert-AreEqual $accountName $createdAccount.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdAccount.ResourceGroupNameAssert-AreEqual $resourceLocation $createdAccount.Location$account = Get-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountNameAssert-AreEqual $accountName $account.NameAssert-AreEqual $resourceGroup.ResourceGroupName $account.ResourceGroupNameAssert-AreEqual $resourceLocation $account.LocationAssert-ThrowsContains { New-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Force } "Parameter set cannot be resolved using the specified named parameters."$old = Get-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName$new = New-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Primary -ForceAssert-AreNotEqual $old.PrimaryKey $new.PrimaryKey$old = $new$new = New-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Secondary -ForceAssert-AreNotEqual $old.SecondaryKey $new.SecondaryKey$accountRemoved = Remove-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -PassThruAssert-True{$accountRemoved}Assert-ThrowsContains { Get-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName } "NotFound"Remove-AzureRmResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-SpatialAnchorsAccountOperationsWithPiping{$resourceGroup = TestSetup-CreateResourceGroup$resourceLocation = "EastUS2"$accountName = getAssetName$createdAccount = New-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Location $resourceLocationAssert-AreEqual $accountName $createdAccount.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdAccount.ResourceGroupNameAssert-AreEqual $resourceLocation $createdAccount.LocationAssert-ThrowsContains { $createdAccount | New-AzSpatialAnchorsAccountKey -Force } "Parameter set cannot be resolved using the specified named parameters."$old = $createdAccount | Get-AzSpatialAnchorsAccountKey$new = $createdAccount | New-AzSpatialAnchorsAccountKey -Primary -ForceAssert-AreNotEqual $old.PrimaryKey $new.PrimaryKey$old = $new$new = $createdAccount | New-AzSpatialAnchorsAccountKey -Secondary -ForceAssert-AreNotEqual $old.SecondaryKey $new.SecondaryKey$accountRemoved = $createdAccount | Remove-AzSpatialAnchorsAccount -PassThruAssert-True{$accountRemoved}Assert-ThrowsContains { Get-AzSpatialAnchorsAccount -Id $createdAccount.Id } "NotFound"Remove-AzureRmResourceGroup -Name $resourceGroup.ResourceGroupName -Force}function Test-ListSpatialAnchorsAccounts{$resourceGroup = TestSetup-CreateResourceGroup$resourceLocation = "EastUS2"$accountName = getAssetName$accounts = Get-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName$originalCount = $accounts.Count$createdAccount = New-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Location $resourceLocationAssert-AreEqual $accountName $createdAccount.NameAssert-AreEqual $resourceGroup.ResourceGroupName $createdAccount.ResourceGroupNameAssert-AreEqual $resourceLocation $createdAccount.Location$accounts = Get-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual $accounts.Count ($originalCount + 1)$old = Get-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName$new = New-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Primary -ForceAssert-AreNotEqual $old.PrimaryKey $new.PrimaryKey$old = $new$new = New-AzSpatialAnchorsAccountKey -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -Secondary -ForceAssert-AreNotEqual $old.SecondaryKey $new.SecondaryKey$accountRemoved = Remove-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupName -Name $accountName -PassThruAssert-True{$accountRemoved}$accounts = Get-AzSpatialAnchorsAccount -ResourceGroupName $resourceGroup.ResourceGroupNameAssert-AreEqual $accounts.Count $originalCountRemove-AzureRmResourceGroup -Name $resourceGroup.ResourceGroupName -Force}