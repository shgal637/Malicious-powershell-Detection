function Deny-PendingCommand {[PoshBot.BotCommand(Aliases = ('deny', 'denycommand'))][cmdletbinding()]param([parameter(Mandatory)]$Bot,[parameter(Mandatory, Position = 0)][string]$Id)$context = $Bot.DeferredCommandExecutionContexts[$Id]if ($context) {$callingUserId = $global:PoshBotContext.Fromif (-not $global:PoshBotContext.FromName) {$callingUserName = $Bot.RoleManager.ResolveUserIdToUserName($callingUserId)} else {$callingUserName = $global:PoshBotContext.FromName}$approvalGroups = $Bot.Executor.GetApprovalGroups($context)$callingUserGroups = $Bot.RoleManager.GetUserGroups($callingUserId).Nameif ($null -eq $callingUserGroups) { $callingUserGroups = @() }$compareParams = @{ReferenceObject = $approvalGroupsDifferenceObject = $callingUserGroupsPassThru = $trueIncludeEqual = $trueExcludeDifferent = $true}$inApprovalGroup = (Compare-Object @compareParams).Count -gt 0if ($inApprovalGroup) {$context.ApprovalState = 3 $context.Approver.Id = $callingUserId$context.Approver.Name = $callingUserName$Bot.ProcessedDeferredContextQueue.Enqueue($context)New-PoshBotCardResponse -Type Normal -Text "Command [$Id] - [$($context.ParsedCommand.CommandString)] denied by [$callingUserName]"} else {New-PoshBotCardResponse -Type Warning -Text "Sorry. Only someone in approval group(s) [$($approvalGroups -join ', ')] can deny this command."}} else {New-PoshBotCardResponse -Type Warning -Text "Unknown approval ID [$Id]"}}