function Check-Flags ($sam = $env:USERNAME) {$uac = [int](([adsisearcher]"samaccountname=$sam").FindOne().Properties.useraccountcontrol | Out-String).Trim()if ($uac -eq 0) {throw 'UAC is 0'}$flags = @{SCRIPT = 1ACCOUNTDISABLE = 2HOMEDIR_REQUIRED = 8LOCKOUT = 16PASSWD_NOTREQD = 32PASSWD_CANT_CHANGE = 64ENCRYPTED_TEXT_PWD_ALLOWED = 128TEMP_DUPLICATE_ACCOUNT = 256NORMAL_ACCOUNT = 512INTERDOMAIN_TRUST_ACCOUNT = 2048WORKSTATION_TRUST_ACCOUNT = 4096SERVER_TRUST_ACCOUNT = 8192DONT_EXPIRE_PASSWORD = 65536MNS_LOGON_ACCOUNT = 131072SMARTCARD_REQUIRED = 262144TRUSTED_FOR_DELEGATION = 524288NOT_DELEGATED = 1048576USE_DES_KEY_ONLY = 2097152DONT_REQ_PREAUTH = 4194304PASSWORD_EXPIRED = 8388608TRUSTED_TO_AUTH_FOR_DELEGATION = 16777216PARTIAL_SECRETS_ACCOUNT = 67108864}$hash = New-Object System.Collections.Specialized.OrderedDictionary$hash.Add('SAM', $sam)$hash.Add('UAC', $uac)foreach ($key in $flags.Keys) {if (($uac -band $flags[$key]) -ne 0) {$hash.Add($key, $true)} else {$hash.Add($key, $false)}}New-Object psobject -Property $hash}