$iniPath = $nullDescribe 'Test-RemoveIniEntry' {BeforeAll {& (Join-Path -Path $PSScriptRoot -ChildPath 'Initialize-CarbonTest.ps1' -Resolve)}BeforeEach {$iniPath = Join-Path ([IO.Path]::GetTempPath()) ([IO.Path]::GetRandomFileName())$null = New-Item $iniPath -ItemType File@'sectionless = valuesection1value1 = duplicate[section1]section1value1 = value2unicodevalue = ����������'@ | Set-Content -Path $iniPath$Global:Error.Clear()}AfterEach {Remove-Item $iniPath}function Assert-IniFile{param([string]$ExpectedContents)$expectedLines = @()if( $ExpectedContents ){$expectedLines = $ExpectedContents -split "`r`n"}$iniPath | Should Exist$actualContents = @( Get-Content $iniPath )$actualContents.Length | Should Be $expectedLines.Lengthfor( $idx = 0; $idx -lt $actualContents.Length; ++$idx ){$actualContents[$idx] | Should Be $expectedLines[$idx]}}It 'should not remove entry that does not exist' {$originalIniFile = ((Get-Content -Path $iniPath) -join "`r`n")Remove-IniEntry -Path $iniPath -Section section -Name empty $Error.Count | Should Be 0Assert-IniFile $originalIniFile}It 'should support what if' {$Error.Clear()$originalIniFile = ((Get-Content -Path $iniPath) -join "`r`n")Remove-IniEntry -Path $iniPath -Section section1 -Name section1value1 -WhatIf$Error.Count | Should Be 0Assert-IniFile $originalIniFile}It 'should remove sectionless entry' {Remove-IniEntry -Path $iniPath -Name section1value1Assert-IniFile @'sectionless = value[section1]section1value1 = value2unicodevalue = ����������'@}It 'should remove entry in section' {Remove-IniEntry -Path $iniPath -Name section1value1 -Section section1Assert-IniFile @'sectionless = valuesection1value1 = duplicate[section1]unicodevalue = ����������'@}It 'should remove case sensitive ini options' {@'name = aNAME = b[section]name = c[SECTION]name = d'@ | Set-Content -Path $iniPathRemove-IniEntry -Path $iniPath -Name 'name' -CaseSensitiveRemove-IniEntry -Path $iniPath -Section 'section' -Name 'name' -CaseSensitive$ini = Split-Ini -Path $iniPath -CaseSensitive -AsHashtable$ini | Should Not BeNullOrEmpty$ini.Count | Should Be 2$ini['NAME'].Value | Should Be 'b'$ini['SECTION.name'].Value | Should Be 'd'}It 'should remove last entry from a file when it is the only line' {@'MyKey = a'@ | Set-Content -Path $iniPathRemove-IniEntry -Path $iniPath -Name 'MyKey'$ini = Split-Ini -Path $iniPath -AsHashtable$ini.Count | Should Be 0}}