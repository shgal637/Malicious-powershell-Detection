function Test-CreateSyncAgent{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseNametry{$saName = Get-SyncAgentName$sa = New-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -SyncDatabaseServerName $server.ServerName `-SyncDatabaseName $databaseNameAssert-NotNull $saAssert-AreEqual $saName $sa.SyncAgentName}finally{Remove-ResourceGroupForTest $rg}}function Test-GetAndListSyncAgents{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$saName = Get-SyncAgentName$sa = New-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -SyncDatabaseServerName $server.ServerName `-SyncDatabaseName $databaseNametry{$sa2 = Get-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -SyncAgentName $saNameAssert-NotNull $sa2Assert-AreEqual $saName $sa2.SyncAgentName$all = Get-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -SyncAgentName *Assert-NotNull $allAssert-AreEqual $all.Count 1}finally{Remove-ResourceGroupForTest $rg}}function Test-RemoveSyncAgent{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$saName = Get-SyncAgentName$sa = New-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -SyncDatabaseServerName $server.ServerName `-SyncDatabaseName $databaseNametry{Remove-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -Force$all = Get-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerNameAssert-AreEqual $all.Count 0}finally{Remove-ResourceGroupForTest $rg}}function Test-CreateSyncAgentKey{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$saName = Get-SyncAgentName$sa = New-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -SyncDatabaseServerName $server.ServerName `-SyncDatabaseName $databaseNametry{$key = New-AzSqlSyncAgentKey -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saNameAssert-NotNull $keyAssert-NotNull $key.SyncAgentKey}finally{Remove-ResourceGroupForTest $rg}}function Test-ListSyncAgentLinkedDatabase{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$saName = Get-SyncAgentName$sa = New-AzSqlSyncAgent -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -SyncDatabaseServerName $server.ServerName `-SyncDatabaseName $databaseNametry{$dbs = Get-AzSqlSyncAgentLinkedDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-SyncAgentName $saNameAssert-Null $dbs}finally{Remove-ResourceGroupForTest $rg}}function Test-CreateSyncGroup{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$credential = Get-ServerCredential$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameterstry{$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialAssert-AreEqual $params.intervalInSeconds $sg.IntervalInSecondsAssert-AreEqual $params.conflictResolutionPolicy $sg.ConflictResolutionPolicy}finally{Remove-ResourceGroupForTest $rg}}function Test-UpdateSyncGroup{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$credential = Get-ServerCredential$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialtry{$newIntervalInSeconds = 200$sg2 = Update-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $newIntervalInSeconds Assert-AreEqual $newIntervalInSeconds $sg2.IntervalInSeconds}finally{Remove-ResourceGroupForTest $rg}}function Test-GetAndListSyncGroups{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$credential = Get-ServerCredential$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialtry{$sg1 = Get-AzSqlSyncGroup -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName -SyncGroupName $sgNameAssert-AreEqual $params.intervalInSeconds $sg1.IntervalInSecondsAssert-AreEqual $params.conflictResolutionPolicy $sg1.ConflictResolutionPolicy$all = Get-AzSqlSyncGroup -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName -SyncGroupName *Assert-AreEqual $all.Count 1Assert-AreEqual $params.intervalInSeconds $all[0].IntervalInSecondsAssert-AreEqual $params.conflictResolutionPolicy $all[0].ConflictResolutionPolicy}finally{Remove-ResourceGroupForTest $rg}}function Test-RefreshAndGetSyncGroupHubSchema{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$credential = Get-ServerCredential$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialtry{Update-AzSqlSyncSchema -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName$schema = Get-AzSqlSyncSchema -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgNameAssert-NotNull $schema}finally{Remove-ResourceGroupForTest $rg}}function Test-RemoveSyncGroup{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$credential = Get-ServerCredential$databaseName = Get-DatabaseName$db = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialtry{Remove-AzSqlSyncGroup -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName -SyncGroupName $sgName -Force$all = Get-AzSqlSyncGroup -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseNameAssert-AreEqual $all.Count 0}finally{Remove-ResourceGroupForTest $rg}}function Test-CreateSyncMember{$rg = Create-ResourceGroupForTest $server = Create-ServerForTest $rg "West US 2"$serverDNS = Get-DNSNameBasedOnEnvironment$serverName = $server.ServerName + $serverDNS$credential = Get-ServerCredential$databaseName1 = Get-DatabaseName$db1 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName1$databaseName2 = Get-DatabaseName$db2 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName2$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credentialtry{$smParams = Get-SqlSyncMemberTestEnvironmentParameters$smName = Get-SyncMemberName$sm1 = New-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-SyncDirection $smParams.syncDirection -MemberDatabaseType $smParams.databaseType -MemberDatabaseName $databaseName2 `-MemberServerName $serverName -MemberDatabaseCredential $credentialAssert-AreEqual $smParams.syncDirection $sm1.SyncDirectionAssert-AreEqual $smParams.databaseType $sm1.MemberDatabaseTypeAssert-AreEqual $databaseName2 $sm1.MemberDatabaseNameAssert-AreEqual $serverName $sm1.MemberServerNameAssert-Null $sm1.MemberDatabasePasswordAssert-Null $sm1.SyncAgentIdAssert-Null $sm1.SqlServerDatabaseId}finally{Remove-ResourceGroupForTest $rg}}function Test-GetAndListSyncMembers{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$serverDNS = Get-DNSNameBasedOnEnvironment$serverName = $server.ServerName + $serverDNS$credential = Get-ServerCredential$databaseName1 = Get-DatabaseName$db1 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName1$databaseName2 = Get-DatabaseName$db2 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName2$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credential$smParams = Get-SqlSyncMemberTestEnvironmentParameters$smName = Get-SyncMemberName$sm1 = New-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-SyncDirection $smParams.syncDirection -MemberDatabaseType $smParams.databaseType -MemberDatabaseName $databaseName2 `-MemberServerName $serverName -MemberDatabaseCredential $credentialtry{$sm2 = Get-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sg.SyncGroupName -SyncMemberName $smNameAssert-AreEqual $smParams.syncDirection $sm1.SyncDirectionAssert-AreEqual $smParams.databaseType $sm1.MemberDatabaseTypeAssert-AreEqual $databaseName2 $sm1.MemberDatabaseNameAssert-AreEqual $serverName $sm1.MemberServerNameAssert-Null $sm1.MemberDatabasePasswordAssert-Null $sm1.SyncAgentIdAssert-Null $sm1.SqlServerDatabaseId$all = Get-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sg.SyncGroupName -SyncMemberName *Assert-AreEqual 1 $all.CountAssert-AreEqual $smParams.syncDirection $all[0].SyncDirectionAssert-AreEqual $smParams.databaseType $all[0].MemberDatabaseType}finally{Remove-ResourceGroupForTest $rg}}function Test-UpdateSyncMember{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$serverDNS = Get-DNSNameBasedOnEnvironment$serverName = $server.ServerName + $serverDNS$credential = Get-ServerCredential$databaseName1 = Get-DatabaseName$db1 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName1$databaseName2 = Get-DatabaseName$db2 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName2$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credential$smParams = Get-SqlSyncMemberTestEnvironmentParameters$smName = Get-SyncMemberName$sm1 = New-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-SyncDirection $smParams.syncDirection -MemberDatabaseType $smParams.databaseType -MemberDatabaseName $databaseName2 `-MemberServerName $serverName -MemberDatabaseCredential $credentialtry{$sm2 = Update-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-MemberDatabaseCredential $credentialAssert-AreEqual $smParams.databaseType $sm2.MemberDatabaseTypeAssert-AreEqual $databaseName2 $sm2.MemberDatabaseNameAssert-AreEqual $serverName $sm2.MemberServerNameAssert-Null $sm2.MemberDatabasePasswordAssert-Null $sm2.SyncAgentIdAssert-Null $sm2.SqlServerDatabaseId}finally{Remove-ResourceGroupForTest $rg}}function Test-RefreshAndGetSyncMemberSchema{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$serverDNS = Get-DNSNameBasedOnEnvironment$serverName = $server.ServerName + $serverDNS$credential = Get-ServerCredential$databaseName1 = Get-DatabaseName$db1 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName1$databaseName2 = Get-DatabaseName$db2 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName2$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credential$smParams = Get-SqlSyncMemberTestEnvironmentParameters$smName = Get-SyncMemberName$sm1 = New-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-SyncDirection $smParams.syncDirection -MemberDatabaseType $smParams.databaseType -MemberDatabaseName $databaseName2 `-MemberServerName $serverName -MemberDatabaseCredential $credentialtry{Update-AzSqlSyncSchema -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName $schema = Get-AzSqlSyncSchema -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName Assert-NotNull $schema}finally{    Remove-ResourceGroupForTest $rg}}function Test-RemoveSyncMember{$rg = Create-ResourceGroupForTest$server = Create-ServerForTest $rg "West US 2"$serverDNS = Get-DNSNameBasedOnEnvironment$serverName = $server.ServerName + $serverDNS$credential = Get-ServerCredential$databaseName1 = Get-DatabaseName$db1 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName1$databaseName2 = Get-DatabaseName$db2 = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $databaseName2$syncDatabaseName = Get-DatabaseName$syncdb = New-AzSqlDatabase -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName -DatabaseName $syncDatabaseName$params = Get-SqlSyncGroupTestEnvironmentParameters$sgName = Get-SyncGroupName$sg = New-AzSqlSyncGroup -ResourceGroupName $rg.ResourceGroupName -ServerName $server.ServerName `-DatabaseName $databaseName1 -SyncGroupName $sgName -IntervalInSeconds $params.intervalInSeconds `-ConflictResolutionPolicy $params.conflictResolutionPolicy -SyncDatabaseName $syncDatabaseName -SyncDatabaseServerName `$server.ServerName -SyncDatabaseResourceGroupName $rg.ResourceGroupName -DatabaseCredential $credential$smParams = Get-SqlSyncMemberTestEnvironmentParameters$smName = Get-SyncMemberName$sm1 = New-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName `-SyncDirection $smParams.syncDirection -MemberDatabaseType $smParams.databaseType -MemberDatabaseName $databaseName2 `-MemberServerName $serverName -MemberDatabaseCredential $credentialtry{Remove-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgName -SyncMemberName $smName -Force$all = Get-AzSqlSyncMember -ServerName $server.ServerName -ResourceGroupName $rg.ResourceGroupName `-DatabaseName $databaseName1 -SyncGroupName $sgNameAssert-AreEqual $all.Count 0}finally{Remove-ResourceGroupForTest $rg}}