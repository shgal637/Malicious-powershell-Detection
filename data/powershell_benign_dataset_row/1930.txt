Describe "Event Subscriber Tests" -tags "CI" {BeforeEach {Get-EventSubscriber | Unregister-Event}AfterEach {Get-EventSubscriber | Unregister-Event}It "Register an event with no action, trigger it and wait for it to be raised." -Pending:$true{Get-EventSubscriber | Should -BeNullOrEmpty$messageData = new-object psobject$job = Start-Job { Start-Sleep -Seconds 5; 1..5 }$eventtest = Register-ObjectEvent $job -EventName StateChanged -SourceIdentifier EventSIDTest -Action {} -MessageData $messageDatanew-event EventSIDTestwait-event EventSIDTest$eventdata = get-event EventSIDTest$eventdata.MessageData | Should -Be $messageDataremove-event EventSIDTestUnregister-Event EventSIDTestGet-EventSubscriber | Should -BeNullOrEmpty}It "Access a global variable from an event action." {Get-EventSubscriber | Should -BeNullOrEmptyset-variable incomingGlobal -scope global -value globVarValue$eventtest = register-engineevent -SourceIdentifier foo -Action {set-variable -scope global -name aglobalvariable -value $incomingGlobal}new-event foo$getvar = get-variable aglobalvariable -scope global$getvar.Name | Should -Be aglobalvariable$getvar.Value | Should -Be globVarValueUnregister-Event fooGet-EventSubscriber | Should -BeNullOrEmpty}}