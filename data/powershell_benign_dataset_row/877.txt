function Start-MapReduce {$ErrorActionPreference = "Stop"$context = Get-AzContextif ($context -eq $null) {Connect-AzAccount}$context$clusterName = Read-Host -Prompt "Enter the HDInsight cluster name"$creds=Get-Credential -Message "Enter the login for the cluster"$clusterInfo = Get-AzHDInsightCluster -ClusterName $clusterName$resourceGroup = $clusterInfo.ResourceGroup$storageAccountName=$clusterInfo.DefaultStorageAccount.split('.')[0]$container=$clusterInfo.DefaultStorageContainer$storageAccountKey=(Get-AzStorageAccountKey `-Name $storageAccountName `-ResourceGroupName $resourceGroup)[0].Value$context = New-AzStorageContext `-StorageAccountName $storageAccountName `-StorageAccountKey $storageAccountKey$wordCountJobDefinition = New-AzHDInsightMapReduceJobDefinition `-JarFile "/example/jars/hadoop-mapreduce-examples.jar" `-ClassName "wordcount" `-Arguments `"/example/data/gutenberg/davinci.txt", `"/example/data/WordCountOutput"Write-Host "Start the MapReduce job..." -ForegroundColor Green$wordCountJob = Start-AzHDInsightJob `-ClusterName $clusterName `-JobDefinition $wordCountJobDefinition `-HttpCredential $credsWrite-Host "Wait for the job to complete..." -ForegroundColor GreenWait-AzHDInsightJob `-ClusterName $clusterName `-JobId $wordCountJob.JobId `-HttpCredential $credsGet-AzStorageBlobContent `-Blob 'example/data/WordCountOutput/part-r-00000' `-Container $container `-Destination output.txt `-Context $contextGet-AzHDInsightJobOutput `-Clustername $clusterName `-JobId $wordCountJob.JobId `-HttpCredential $creds}