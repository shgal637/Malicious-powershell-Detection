function Test-DdosProtectionPlanCRUD{$rgLocation = Get-ProviderLocation ResourceManagement$resourceTypeParent = "Microsoft.Network/DdosProtectionPlans"$location = Get-ProviderLocation $resourceTypeParent$rgName = Get-ResourceGroupName$ddosProtectionPlanName = Get-ResourceNametry{New-AzResourceGroup -Name $rgName -Location $location -Tags @{ testtag = "ddosProtectionPlan tag" }$job = New-AzDdosProtectionPlan -ResourceGroupName $rgName -Name $ddosProtectionPlanName -Location $rgLocation -AsJob$job | Wait-Job$ddosProtectionPlanNew = $job | Receive-JobAssert-AreEqual $rgName $ddosProtectionPlanNew.ResourceGroupNameAssert-AreEqual $ddosProtectionPlanName $ddosProtectionPlanNew.NameAssert-NotNull $ddosProtectionPlanNew.LocationAssert-NotNull $ddosProtectionPlanNew.EtagAssert-Null $ddosProtectionPlanNew.VirtualMachines$ddosProtectionPlanGet = Get-AzDdosProtectionPlan -ResourceGroupName $rgName -Name $ddosProtectionPlanNameAssert-AreEqual $rgName $ddosProtectionPlanGet.ResourceGroupNameAssert-AreEqual $ddosProtectionPlanName $ddosProtectionPlanGet.NameAssert-NotNull $ddosProtectionPlanGet.LocationAssert-NotNull $ddosProtectionPlanGet.EtagAssert-Null $ddosProtectionPlanGet.VirtualMachines$ddosProtectionPlanList = Get-AzDdosProtectionPlan -ResourceGroupName $rgNameAssert-NotNull $ddosProtectionPlanListAssert-True {$ddosProtectionPlanList.Count -ge 0}$ddosProtectionPlanList = Get-AzDdosProtectionPlan -ResourceGroupName "*"Assert-NotNull $ddosProtectionPlanListAssert-True {$ddosProtectionPlanList.Count -ge 0}$ddosProtectionPlanList = Get-AzDdosProtectionPlan -Name "*"Assert-NotNull $ddosProtectionPlanListAssert-True {$ddosProtectionPlanList.Count -ge 0}$ddosProtectionPlanList = Get-AzDdosProtectionPlan -ResourceGroupName "*" -Name "*"Assert-NotNull $ddosProtectionPlanListAssert-True {$ddosProtectionPlanList.Count -ge 0}$ddosProtectionPlanDelete = Remove-AzDdosProtectionPlan -Name $ddosProtectionPlanName -ResourceGroupName $rgName -PassThruAssert-AreEqual $true $ddosProtectionPlanDelete}finally{Clean-ResourceGroup $rgName}}function Test-DdosProtectionPlanCRUDWithVirtualNetwork{$rgname = Get-ResourceGroupName$vnetName = Get-ResourceName$subnetName = Get-ResourceName$ddosProtectionPlanName = Get-ResourceName$rglocation = Get-ProviderLocation ResourceManagement$resourceTypeParent = "Microsoft.Network/virtualNetworks"$location = Get-ProviderLocation $resourceTypeParenttry {New-AzResourceGroup -Name $rgname -Location $rglocation -Tags @{ testtag = "testval" } $ddosProtectionPlan = New-AzDdosProtectionPlan -Name $ddosProtectionPlanName -ResourceGroupName $rgname -Location $location$subnet = New-AzVirtualNetworkSubnetConfig -Name $subnetName -AddressPrefix 10.0.1.0/24$vnet = New-AzVirtualNetwork -Name $vnetName -ResourceGroupName $rgname -Location $location -AddressPrefix 10.0.0.0/16 -DnsServer 8.8.8.8 -Subnet $subnet -EnableDdoSProtection -DdosProtectionPlanId $ddosProtectionPlan.IdAssert-AreEqual true $vnet.EnableDdoSProtectionAssert-AreEqual $ddosProtectionPlan.Id $vnet.DdosProtectionPlan.Id$ddosProtectionPlanWithVnet = Get-AzDdosProtectionPlan -Name $ddosProtectionPlanName -ResourceGroupName $rgnameAssert-AreEqual $vnet.Id $ddosProtectionPlanWithVnet.VirtualNetworks[0].Id$deleteVnet = Remove-AzVirtualNetwork -ResourceGroupName $rgname -name $vnetName -PassThru -ForceAssert-AreEqual true $deleteVnet$deleteDdosProtectionPlan = Remove-AzDdosProtectionPlan -ResourceGroupName $rgname -name $ddosProtectionPlanName -PassThruAssert-AreEqual true $deleteDdosProtectionPlan}finally{Clean-ResourceGroup $rgname}}function Test-DdosProtectionPlanCollections{$rgLocation = Get-ProviderLocation ResourceManagement$resourceTypeParent = "Microsoft.Network/DdosProtectionPlans"$location = Get-ProviderLocation $resourceTypeParent$rgName = Get-ResourceGroupName$ddosProtectionPlanName = Get-ResourceNametry{New-AzResourceGroup -Name $rgName -Location $location -Tags @{ testtag = "ddosProtectionPlan tag" }$ddosProtectionPlan = New-AzDdosProtectionPlan -Name $ddosProtectionPlanName -ResourceGroupName $rgName -Location $rgLocation$listRg = Get-AzDdosProtectionPlan -ResourceGroupName $rgNameAssert-AreEqual 1 @($listRg).CountAssert-AreEqual $listRg[0].ResourceGroupName $ddosProtectionPlan.ResourceGroupNameAssert-AreEqual $listRg[0].Name $ddosProtectionPlan.NameAssert-AreEqual $listRg[0].Location $ddosProtectionPlan.LocationAssert-AreEqual $listRg[0].Etag $ddosProtectionPlan.Etag$listSub = Get-AzDdosProtectionPlan$ddosProtectionPlanFromList = @($listSub) | Where-Object Name -eq $ddosProtectionPlanName | Where-Object ResourceGroupName -eq $rgNameAssert-AreEqual $ddosProtectionPlan.ResourceGroupName $ddosProtectionPlanFromList.ResourceGroupNameAssert-AreEqual $ddosProtectionPlan.Name $ddosProtectionPlanFromList.NameAssert-AreEqual $ddosProtectionPlan.Location $ddosProtectionPlanFromList.LocationAssert-AreEqual $ddosProtectionPlan.Etag $ddosProtectionPlanFromList.Etag}finally{Clean-ResourceGroup $rgName}}