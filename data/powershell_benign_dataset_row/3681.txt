function Test-TriggerCrud{$ResourceGroupName = getAssetNametry{$AccountName = getAssetName$SubName = getAssetName$TriggerName = getAssetName$RecurrenceInterval = "hour"$SynchronizationTime = "06/19/2019 22:53:33"$newTrigger = New-AzDataShareTrigger -ResourceGroupName $ResourceGroupName -AccountName $AccountName -ShareSubscriptionName $SubName -RecurrenceInterval $RecurrenceInterval -SynchronizationTime $SynchronizationTime -Name $TriggerNameAssert-NotNull $newTriggerAssert-AreEqual $newTrigger.Name $TriggerNameAssert-AreEqual $newTrigger.ProvisioningState "Succeeded"$gottenTrigger = Get-AzDataShareTrigger -ResourceGroupName $ResourceGroupName -AccountName $AccountName -ShareSubscriptionName $SubNameAssert-NotNull $newTriggerAssert-AreEqual $newTrigger.Name $TriggerNameAssert-AreEqual $newTrigger.ProvisioningState "Succeeded"$gottenTrigger = Get-AzDataShareTrigger -ResourceGroupName $ResourceGroupName -AccountName $AccountName -ShareSubscriptionName $SubName -Name $TriggerNameAssert-NotNull $newTriggerAssert-AreEqual $newTrigger.Name $TriggerNameAssert-AreEqual $newTrigger.ProvisioningState "Succeeded"$gottenTrigger = Get-AzDataShareTrigger -ResourceId $gottenTrigger.IdAssert-NotNull $newTriggerAssert-AreEqual $newTrigger.Name $TriggerNameAssert-AreEqual $newTrigger.ProvisioningState "Succeeded"$removedTrigger = Remove-AzDataShareTrigger -InputObject $gottenTrigger}finally{Remove-AzResourceGroup -Name $resourceGroup -Force}}