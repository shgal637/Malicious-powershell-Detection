function Get-ScriptAlias{[CmdletBinding()]PARAM([Parameter(ValueFromPipeline, ValueFromPipelineByPropertyName)][ValidateScript({ Test-Path -Path $_ })][Alias("FullName")][System.String[]]$Path)PROCESS{FOREACH ($File in $Path){TRY{$ScriptContent = (Get-Content $File -Delimiter $([char]0))$AbstractSyntaxTree = [System.Management.Automation.Language.Parser]::ParseInput($ScriptContent, [ref]$null, [ref]$null)$AbstractSyntaxTree.FindAll({ $args[0] -is [System.Management.Automation.Language.CommandAst] }, $true) |ForEach-Object -Process {$Command = $_.CommandElements[0]if ($Alias = Get-Alias | Where-Object { $_.Name -eq $Command }){[PSCustomObject]@{File = $FileAlias = $Alias.NameDefinition = $Alias.DefinitionStartLineNumber = $Command.Extent.StartLineNumberEndLineNumber = $Command.Extent.EndLineNumberStartColumnNumber = $Command.Extent.StartColumnNumberEndColumnNumber = $Command.Extent.EndColumnNumberStartOffset = $Command.Extent.StartOffsetEndOffset = $Command.Extent.EndOffset}}}}CATCH{Write-Error -Message $($Error[0].Exception.Message)} }} }